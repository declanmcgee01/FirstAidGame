// Compiled shader for PC, Mac & Linux Standalone

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Standard" {
Properties {
 _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
 _MainTex ("Albedo", 2D) = "white" { }
 _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.500000
 _Glossiness ("Smoothness", Range(0.000000,1.000000)) = 0.500000
 _GlossMapScale ("Smoothness Scale", Range(0.000000,1.000000)) = 1.000000
[Enum(Metallic Alpha,0,Albedo Alpha,1)]  _SmoothnessTextureChannel ("Smoothness texture channel", Float) = 0.000000
[Gamma]  _Metallic ("Metallic", Range(0.000000,1.000000)) = 0.000000
 _MetallicGlossMap ("Metallic", 2D) = "white" { }
[ToggleOff]  _SpecularHighlights ("Specular Highlights", Float) = 1.000000
[ToggleOff]  _GlossyReflections ("Glossy Reflections", Float) = 1.000000
 _BumpScale ("Scale", Float) = 1.000000
 _BumpMap ("Normal Map", 2D) = "bump" { }
 _Parallax ("Height Scale", Range(0.005000,0.080000)) = 0.020000
 _ParallaxMap ("Height Map", 2D) = "black" { }
 _OcclusionStrength ("Strength", Range(0.000000,1.000000)) = 1.000000
 _OcclusionMap ("Occlusion", 2D) = "white" { }
 _EmissionColor ("Color", Color) = (0.000000,0.000000,0.000000,1.000000)
 _EmissionMap ("Emission", 2D) = "white" { }
 _DetailMask ("Detail Mask", 2D) = "white" { }
 _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
 _DetailNormalMapScale ("Scale", Float) = 1.000000
 _DetailNormalMap ("Normal Map", 2D) = "bump" { }
[Enum(UV0,0,UV1,1)]  _UVSec ("UV Set for secondary textures", Float) = 0.000000
[HideInInspector]  _Mode ("__mode", Float) = 0.000000
[HideInInspector]  _SrcBlend ("__src", Float) = 1.000000
[HideInInspector]  _DstBlend ("__dst", Float) = 0.000000
[HideInInspector]  _ZWrite ("__zw", Float) = 1.000000
}
SubShader { 
 LOD 300
 Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }


 // Stats for Vertex shader:
 //         d3d9: 55 avg math (37..73)
 //        d3d11: 38 avg math (25..51)
 // Stats for Fragment shader:
 //         d3d9: 153 avg math (152..154), 7 avg texture (6..8), 5 branch
 //        d3d11: 151 avg math (150..153), 6 avg texture (5..7), 6 branch
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite [_ZWrite]
  Blend [_SrcBlend] [_DstBlend]
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL 
-- Vertex shader for "d3d9":
// Stats: 37 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 16
Vector4 _MainTex_ST at 15
Float _UVSec at 17
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHBb at 13
Vector4 unity_SHBg at 12
Vector4 unity_SHBr at 11
Vector4 unity_SHC at 14

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       3
//   unity_WorldToObject  c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord8 o7.xyz
    mad r0, v0.xyzx, c18.xxxy, c18.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.y
    mov o4, c18.y
    mov o5.w, c18.y
    mov o6.w, c18.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 152 math, 6 textures, 5 branches
Vector4 _Color at 13
Float _Glossiness at 15
Vector4 _LightColor0 at 12
Float _Metallic at 14
Float _OcclusionStrength at 16
Vector4 _WorldSpaceLightPos0 at 0
Vector4 unity_SHAb at 3
Vector4 unity_SHAg at 2
Vector4 unity_SHAr at 1
Vector4 unity_SpecCube0_BoxMax at 4
Vector4 unity_SpecCube0_BoxMin at 5
Vector4 unity_SpecCube0_HDR at 7
Vector4 unity_SpecCube0_ProbePosition at 6
Vector4 unity_SpecCube1_BoxMax at 8
Vector4 unity_SpecCube1_BoxMin at 9
Vector4 unity_SpecCube1_HDR at 11
Vector4 unity_SpecCube1_ProbePosition at 10

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   _WorldSpaceLightPos0          c0       1
//   unity_SHAr                    c1       1
//   unity_SHAg                    c2       1
//   unity_SHAb                    c3       1
//   unity_SpecCube0_BoxMax        c4       1
//   unity_SpecCube0_BoxMin        c5       1
//   unity_SpecCube0_ProbePosition c6       1
//   unity_SpecCube0_HDR           c7       1
//   unity_SpecCube1_BoxMax        c8       1
//   unity_SpecCube1_BoxMin        c9       1
//   unity_SpecCube1_ProbePosition c10      1
//   unity_SpecCube1_HDR           c11      1
//   _LightColor0                  c12      1
//   _Color                        c13      1
//   _Metallic                     c14      1
//   _Glossiness                   c15      1
//   _OcclusionStrength            c16      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//   _OcclusionMap                 s3       1
//

    ps_3_0
    def c17, -0.220916301, 0.220916301, 0.779083729, 1
    def c18, 0, 0.416666657, 1.05499995, -0.0549999997
    def c19, 0.699999988, 1.70000005, 6, 0.999989986
    def c20, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c21, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c22, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5_pp v3.xyz
    dcl_texcoord8 v4.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c13
    mov r2, c17
    mad_pp r0.xyz, c13, r0, r2.x
    mad_pp r0.xyz, c14.x, r0, r2.y
    mad_pp r0.w, c14.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r3.xyz, v2
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r2.xyz, r1.w, v1
    texld_pp r4, v0, s3
    add_pp r4.x, r2.w, -c16.x
    mad_pp r4.x, r4.y, c16.x, r4.x
    add_pp r4.y, r2.w, -c15.x
    dp3_pp r4.z, r2, r3
    add_pp r4.z, r4.z, r4.z
    mad_pp r5.xyz, r3, -r4.z, r2
    mov r3.w, c17.w
    dp4_pp r6.x, c1, r3
    dp4_pp r6.y, c2, r3
    dp4_pp r6.z, c3, r3
    add_pp r6.xyz, r6, v3
    max_pp r7.xyz, r6, c18.x
    log_pp r6.x, r7.x
    log_pp r6.y, r7.y
    log_pp r6.z, r7.z
    mul_pp r6.xyz, r6, c18.y
    exp_pp r7.x, r6.x
    exp_pp r7.y, r6.y
    exp_pp r7.z, r6.z
    mad_pp r6.xyz, r7, c18.z, c18.w
    max_pp r7.xyz, r6, c18.x
    mov r6.x, c18.x
    if_lt -c6.w, r6.x
      nrm_pp r8.xyz, r5
      add r6.yzw, c4.xxyz, -v4.xxyz
      rcp r9.x, r8.x
      rcp r9.y, r8.y
      rcp r9.z, r8.z
      mul_pp r6.yzw, r6, r9.xxyz
      add r10.xyz, c5, -v4
      mul_pp r9.xyz, r9, r10
      cmp_pp r6.yzw, -r8.xxyz, r9.xxyz, r6
      min_pp r3.w, r6.z, r6.y
      min_pp r4.z, r6.w, r3.w
      add r6.yzw, -c6.xxyz, v4.xxyz
      mad_pp r8.xyz, r8, r4.z, r6.yzww
    else
      mov_pp r8.xyz, r5
    endif
    mad_pp r3.w, r4.y, -c19.x, c19.y
    mul_pp r3.w, r3.w, r4.y
    mul_pp r8.w, r3.w, c19.z
    texldl_pp r9, r8, s0
    add r3.w, -r2.w, c7.w
    cmp_pp r3.w, -r3_abs.w, r9.w, c17.w
    mul_pp r3.w, r3.w, c7.x
    mul_pp r6.yzw, r9.xxyz, r3.w
    mov r4.w, c5.w
    if_lt r4.w, c19.w
      if_lt -c10.w, r6.x
        nrm_pp r10.xyz, r5
        add r11.xyz, c8, -v4
        rcp r12.x, r10.x
        rcp r12.y, r10.y
        rcp r12.z, r10.z
        mul_pp r11.xyz, r11, r12
        add r13.xyz, c9, -v4
        mul_pp r12.xyz, r12, r13
        cmp_pp r11.xyz, -r10, r12, r11
        min_pp r4.z, r11.y, r11.x
        min_pp r5.w, r11.z, r4.z
        add r11.xyz, -c10, v4
        mad_pp r8.xyz, r10, r5.w, r11
      else
        mov_pp r8.xyz, r5
      endif
      texldl_pp r5, r8, s1
      add r2.w, -r2.w, c11.w
      cmp_pp r2.w, -r2_abs.w, r5.w, c17.w
      mul_pp r2.w, r2.w, c11.x
      mul_pp r5.xyz, r5, r2.w
      mad r8.xyz, r3.w, r9, -r5
      mad_pp r6.yzw, c5.w, r8.xxyz, r5.xxyz
    endif
    mul_pp r5.xyz, r4.x, r6.yzww
    mad_pp r6.xyz, v1, -r1.w, c0
    dp3_pp r1.w, r6, r6
    add r2.w, -r1.w, c20.x
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r2.w, c20.y, r1.w
    mul_pp r6.xyz, r1.w, r6
    dp3_pp r1.w, r3, -r2
    dp3_sat_pp r2.x, r3, c0
    dp3_sat_pp r2.y, r3, r6
    dp3_sat_pp r2.z, c0, r6
    mul_pp r2.w, r2.z, r2.z
    dp2add_pp r2.w, r2.w, r4.y, c20.z
    add_pp r3.x, -r2.x, c17.w
    mul_pp r3.y, r3.x, r3.x
    mul_pp r3.y, r3.y, r3.y
    mul_pp r3.x, r3.x, r3.y
    mad_pp r3.x, r2.w, r3.x, c17.w
    add_pp r3.y, -r1_abs.w, c17.w
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    mad_pp r2.w, r2.w, r3.y, c17.w
    mul_pp r2.w, r2.w, r3.x
    mul_pp r2.w, r2.x, r2.w
    mul_pp r3.x, r4.y, r4.y
    mad_pp r3.z, r4.y, -r4.y, c17.w
    mad_pp r3.w, r1_abs.w, r3.z, r3.x
    mad_pp r3.z, r2.x, r3.z, r3.x
    mul_pp r1.w, r1_abs.w, r3.z
    mad r1.w, r2.x, r3.w, r1.w
    add r1.w, r1.w, c20.w
    rcp r1.w, r1.w
    mul_pp r1.w, r1.w, -c20.z
    mul_pp r3.z, r3.x, r3.x
    mad_pp r3.w, r2.y, r3.z, -r2.y
    mad_pp r2.y, r3.w, r2.y, c17.w
    mul r3.z, r3.z, c21.x
    mad r2.y, r2.y, r2.y, c21.y
    rcp r2.y, r2.y
    mul_pp r2.y, r2.y, r3.z
    mul r1.w, r1.w, r2.y
    mul_pp r2.y, r1.w, c21.z
    mad r1.w, r1.w, -c21.z, c21.w
    rsq r2.y, r2.y
    rcp_pp r2.y, r2.y
    cmp_pp r1.w, r1.w, c22.x, r2.y
    mul_pp r1.w, r2.x, r1.w
    mul_pp r2.x, r3.x, r4.y
    mad_pp r2.x, r2.x, -c22.y, c22.z
    dp3_pp r2.y, r0, r0
    cmp r2.y, -r2.y, c22.w, c22.z
    mul_pp r1.w, r1.w, r2.y
    add_pp r0.w, -r0.w, c17.w
    add_sat_pp r0.w, r0.w, c15.x
    mul_pp r3.xzw, r2.w, c12.xyyz
    mad_pp r3.xzw, r7.xyyz, r4.x, r3
    mul_pp r4.xyz, r1.w, c12
    add_pp r1.w, -r2.z, c17.w
    mul_pp r2.y, r1.w, r1.w
    mul_pp r2.y, r2.y, r2.y
    mul_pp r1.w, r1.w, r2.y
    lrp_pp r2.yzw, r1.w, c17.w, r0.xxyz
    mul_pp r2.yzw, r2, r4.xxyz
    mad_pp r1.xyz, r1, r3.xzww, r2.yzww
    mul_pp r2.xyz, r5, r2.x
    lrp_pp r4.xyz, r3.y, r0.w, r0
    mad_pp oC0.xyz, r2, r4, r1
    mov_pp oC0.w, c17.w

// approximately 170 instruction slots used (6 texture, 164 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 25 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  17: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  18: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul r0.xyz, r0.wwww, r0.xyzx
  22: mov o5.xyz, r0.xyzx
  23: mov o5.w, l(0)
  24: mul r0.w, r0.y, r0.y
  25: mad r0.w, r0.x, r0.x, -r0.w
  26: mul r1.xyzw, r0.yzzx, r0.xyzz
  27: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  28: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  29: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  30: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  31: mov o6.w, l(0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 150 math, 5 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set CUBE Texture "unity_SpecCube0" to slot 2
Set CUBE Texture "unity_SpecCube1" to slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 4

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 12
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: sample r4.xyzw, v1.xyxx, t1.xyzw, s3
  13: add r3.w, -cb0[9].y, l(1.000000)
  14: mad r3.w, r4.y, cb0[9].y, r3.w
  15: add r4.x, -cb0[8].w, l(1.000000)
  16: dp3 r4.y, r3.xyzx, r2.xyzx
  17: add r4.y, r4.y, r4.y
  18: mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
  19: eq r5.x, cb3[0].x, l(1.000000)
  20: if_nz r5.x
  21:   eq r5.x, cb3[0].y, l(1.000000)
  22:   mul r5.yzw, v7.yyyy, cb3[2].xxyz
  23:   mad r5.yzw, cb3[1].xxyz, v7.xxxx, r5.yyzw
  24:   mad r5.yzw, cb3[3].xxyz, v7.zzzz, r5.yyzw
  25:   add r5.yzw, r5.yyzw, cb3[4].xxyz
  26:   movc r5.xyz, r5.xxxx, r5.yzwy, v7.xyzx
  27:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  28:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  29:   mul r5.y, r5.y, l(0.250000)
  30:   mul r6.x, cb3[0].z, l(0.500000)
  31:   mad r6.y, -cb3[0].z, l(0.500000), l(0.250000)
  32:   max r5.y, r5.y, r6.x
  33:   min r5.x, r6.y, r5.y
  34:   sample r6.xyzw, r5.xzwx, t4.xyzw, s1
  35:   add r7.xyz, r5.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  36:   sample r7.xyzw, r7.xyzx, t4.xyzw, s1
  37:   add r5.xyz, r5.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  38:   sample r5.xyzw, r5.xyzx, t4.xyzw, s1
  39:   mov r2.w, l(1.000000)
  40:   dp4 r6.x, r6.xyzw, r2.xyzw
  41:   dp4 r6.y, r7.xyzw, r2.xyzw
  42:   dp4 r6.z, r5.xyzw, r2.xyzw
  43: else 
  44:   mov r2.w, l(1.000000)
  45:   dp4 r6.x, cb1[38].xyzw, r2.xyzw
  46:   dp4 r6.y, cb1[39].xyzw, r2.xyzw
  47:   dp4 r6.z, cb1[40].xyzw, r2.xyzw
  48: endif 
  49: add r5.xyz, r6.xyzx, v6.xyzx
  50: max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  51: log r5.xyz, r5.xyzx
  52: mul r5.xyz, r5.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  53: exp r5.xyz, r5.xyzx
  54: mad r5.xyz, r5.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  55: max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: lt r2.w, l(0.000000), cb2[2].w
  57: if_nz r2.w
  58:   dp3 r2.w, r4.yzwy, r4.yzwy
  59:   rsq r2.w, r2.w
  60:   mul r6.xyz, r2.wwww, r4.yzwy
  61:   add r7.xyz, -v7.xyzx, cb2[0].xyzx
  62:   div r7.xyz, r7.xyzx, r6.xyzx
  63:   add r8.xyz, -v7.xyzx, cb2[1].xyzx
  64:   div r8.xyz, r8.xyzx, r6.xyzx
  65:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  66:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  67:   min r2.w, r7.y, r7.x
  68:   min r2.w, r7.z, r2.w
  69:   add r7.xyz, v7.xyzx, -cb2[2].xyzx
  70:   mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
  71: else 
  72:   mov r6.xyz, r4.yzwy
  73: endif 
  74: mad r2.w, -r4.x, l(0.700000), l(1.700000)
  75: mul r2.w, r2.w, r4.x
  76: mul r2.w, r2.w, l(6.000000)
  77: sample_l r6.xyzw, r6.xyzx, t2.xyzw, s0, r2.w
  78: eq r5.w, cb2[3].w, l(1.000000)
  79: movc r5.w, r5.w, r6.w, l(1.000000)
  80: mul r5.w, r5.w, cb2[3].x
  81: mul r7.xyz, r6.xyzx, r5.wwww
  82: lt r6.w, cb2[1].w, l(0.999990)
  83: if_nz r6.w
  84:   lt r6.w, l(0.000000), cb2[6].w
  85:   if_nz r6.w
  86:     dp3 r6.w, r4.yzwy, r4.yzwy
  87:     rsq r6.w, r6.w
  88:     mul r8.xyz, r4.yzwy, r6.wwww
  89:     add r9.xyz, -v7.xyzx, cb2[4].xyzx
  90:     div r9.xyz, r9.xyzx, r8.xyzx
  91:     add r10.xyz, -v7.xyzx, cb2[5].xyzx
  92:     div r10.xyz, r10.xyzx, r8.xyzx
  93:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  94:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  95:     min r6.w, r9.y, r9.x
  96:     min r6.w, r9.z, r6.w
  97:     add r9.xyz, v7.xyzx, -cb2[6].xyzx
  98:     mad r4.yzw, r8.xxyz, r6.wwww, r9.xxyz
  99:   endif 
 100:   sample_l r8.xyzw, r4.yzwy, t3.xyzw, s0, r2.w
 101:   eq r2.w, cb2[7].w, l(1.000000)
 102:   movc r2.w, r2.w, r8.w, l(1.000000)
 103:   mul r2.w, r2.w, cb2[7].x
 104:   mul r4.yzw, r8.xxyz, r2.wwww
 105:   mad r6.xyz, r5.wwww, r6.xyzx, -r4.yzwy
 106:   mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
 107: endif 
 108: mul r4.yzw, r3.wwww, r7.xxyz
 109: mad r6.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
 110: dp3 r1.w, r6.xyzx, r6.xyzx
 111: max r1.w, r1.w, l(0.001000)
 112: rsq r1.w, r1.w
 113: mul r6.xyz, r1.wwww, r6.xyzx
 114: dp3 r1.w, r2.xyzx, -r3.xyzx
 115: dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
 116: dp3_sat r2.x, r2.xyzx, r6.xyzx
 117: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 118: mul r2.z, r2.y, r2.y
 119: dp2 r2.z, r2.zzzz, r4.xxxx
 120: add r2.z, r2.z, l(-0.500000)
 121: add r3.x, -r2.w, l(1.000000)
 122: mul r3.y, r3.x, r3.x
 123: mul r3.y, r3.y, r3.y
 124: mul r3.x, r3.x, r3.y
 125: mad r3.x, r2.z, r3.x, l(1.000000)
 126: add r3.y, -|r1.w|, l(1.000000)
 127: mul r3.z, r3.y, r3.y
 128: mul r3.z, r3.z, r3.z
 129: mul r3.y, r3.y, r3.z
 130: mad r2.z, r2.z, r3.y, l(1.000000)
 131: mul r2.z, r2.z, r3.x
 132: mul r2.z, r2.w, r2.z
 133: mul r3.x, r4.x, r4.x
 134: mad r3.z, -r4.x, r4.x, l(1.000000)
 135: mad r5.w, |r1.w|, r3.z, r3.x
 136: mad r3.z, r2.w, r3.z, r3.x
 137: mul r1.w, |r1.w|, r3.z
 138: mad r1.w, r2.w, r5.w, r1.w
 139: add r1.w, r1.w, l(0.000010)
 140: div r1.w, l(0.500000), r1.w
 141: mul r3.z, r3.x, r3.x
 142: mad r5.w, r2.x, r3.z, -r2.x
 143: mad r2.x, r5.w, r2.x, l(1.000000)
 144: mul r3.z, r3.z, l(0.318310)
 145: mad r2.x, r2.x, r2.x, l(0.000000)
 146: div r2.x, r3.z, r2.x
 147: mul r1.w, r1.w, r2.x
 148: mul r1.w, r1.w, l(3.141593)
 149: max r1.w, r1.w, l(0.000100)
 150: sqrt r1.w, r1.w
 151: mul r1.w, r2.w, r1.w
 152: mul r2.x, r3.x, r4.x
 153: mad r2.x, -r2.x, l(0.280000), l(1.000000)
 154: dp3 r2.w, r0.xyzx, r0.xyzx
 155: ne r2.w, r2.w, l(0.000000)
 156: and r2.w, r2.w, l(0x3f800000)
 157: mul r1.w, r1.w, r2.w
 158: add r0.w, -r0.w, cb0[8].w
 159: add_sat r0.w, r0.w, l(1.000000)
 160: mul r6.xyz, r2.zzzz, cb0[2].xyzx
 161: mad r3.xzw, r5.xxyz, r3.wwww, r6.xxyz
 162: mul r5.xyz, r1.wwww, cb0[2].xyzx
 163: add r1.w, -r2.y, l(1.000000)
 164: mul r2.y, r1.w, r1.w
 165: mul r2.y, r2.y, r2.y
 166: mul r1.w, r1.w, r2.y
 167: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 168: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 169: mul r2.yzw, r2.yyzw, r5.xxyz
 170: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 171: mul r2.xyz, r4.yzwy, r2.xxxx
 172: add r3.xzw, -r0.xxyz, r0.wwww
 173: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 174: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 175: mov o0.w, l(1.000000)
 176: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN 
-- Vertex shader for "d3d9":
// Stats: 43 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Vector4 _ProjectionParams at 11
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHBb at 14
Vector4 unity_SHBg at 13
Vector4 unity_SHBr at 12
Vector4 unity_SHC at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       3
//   unity_WorldToObject  c7       3
//   _WorldSpaceCameraPos c10      1
//   _ProjectionParams    c11      1
//   unity_SHBr           c12      1
//   unity_SHBg           c13      1
//   unity_SHBb           c14      1
//   unity_SHC            c15      1
//   _MainTex_ST          c16      1
//   _DetailAlbedoMap_ST  c17      1
//   _UVSec               c18      1
//

    vs_3_0
    def c19, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord8 o8.xyz
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o8.xyz, r0
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r1.y, c1, r0
    mul r2.x, r1.y, c11.x
    mul r2.w, r2.x, c19.z
    dp4 r1.x, c0, r0
    dp4 r1.w, c3, r0
    dp4 r1.z, c2, r0
    mul r2.xz, r1.xyww, c19.z
    mov r3, r1
    mov o7.zw, r1
    add o7.xy, r2.z, r2.xwzw
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c12, r2
    dp4 r1.y, c13, r2
    dp4 r1.z, c14, r2
    mad o6.xyz, c15, r0.x, r1
    mov o3, c19.y
    mov o4, c19.y
    mov o5.w, c19.y
    mov o6.w, c19.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 153 math, 7 textures, 5 branches
Vector4 _Color at 13
Float _Glossiness at 15
Vector4 _LightColor0 at 12
Float _Metallic at 14
Float _OcclusionStrength at 16
Vector4 _WorldSpaceLightPos0 at 0
Vector4 unity_SHAb at 3
Vector4 unity_SHAg at 2
Vector4 unity_SHAr at 1
Vector4 unity_SpecCube0_BoxMax at 4
Vector4 unity_SpecCube0_BoxMin at 5
Vector4 unity_SpecCube0_HDR at 7
Vector4 unity_SpecCube0_ProbePosition at 6
Vector4 unity_SpecCube1_BoxMax at 8
Vector4 unity_SpecCube1_BoxMin at 9
Vector4 unity_SpecCube1_HDR at 11
Vector4 unity_SpecCube1_ProbePosition at 10

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3
Set 2D Texture "_ShadowMapTexture" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   sampler2D _ShadowMapTexture;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   _WorldSpaceLightPos0          c0       1
//   unity_SHAr                    c1       1
//   unity_SHAg                    c2       1
//   unity_SHAb                    c3       1
//   unity_SpecCube0_BoxMax        c4       1
//   unity_SpecCube0_BoxMin        c5       1
//   unity_SpecCube0_ProbePosition c6       1
//   unity_SpecCube0_HDR           c7       1
//   unity_SpecCube1_BoxMax        c8       1
//   unity_SpecCube1_BoxMin        c9       1
//   unity_SpecCube1_ProbePosition c10      1
//   unity_SpecCube1_HDR           c11      1
//   _LightColor0                  c12      1
//   _Color                        c13      1
//   _Metallic                     c14      1
//   _Glossiness                   c15      1
//   _OcclusionStrength            c16      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//   _OcclusionMap                 s3       1
//   _ShadowMapTexture             s4       1
//

    ps_3_0
    def c17, -0.220916301, 0.220916301, 0.779083729, 1
    def c18, 0, 0.416666657, 1.05499995, -0.0549999997
    def c19, 0.699999988, 1.70000005, 6, 0.999989986
    def c20, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c21, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c22, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5_pp v3.xyz
    dcl_texcoord6 v4
    dcl_texcoord8 v5.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c13
    mov r2, c17
    mad_pp r0.xyz, c13, r0, r2.x
    mad_pp r0.xyz, c14.x, r0, r2.y
    mad_pp r0.w, c14.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r3.xyz, v2
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r2.xyz, r1.w, v1
    texldp_pp r4, v4, s4
    texld_pp r5, v0, s3
    add_pp r4.y, r2.w, -c16.x
    mad_pp r4.y, r5.y, c16.x, r4.y
    add_pp r4.z, r2.w, -c15.x
    dp3_pp r4.w, r2, r3
    add_pp r4.w, r4.w, r4.w
    mad_pp r5.xyz, r3, -r4.w, r2
    mul_pp r6.xyz, r4.x, c12
    mov r3.w, c17.w
    dp4_pp r7.x, c1, r3
    dp4_pp r7.y, c2, r3
    dp4_pp r7.z, c3, r3
    add_pp r7.xyz, r7, v3
    max_pp r8.xyz, r7, c18.x
    log_pp r7.x, r8.x
    log_pp r7.y, r8.y
    log_pp r7.z, r8.z
    mul_pp r7.xyz, r7, c18.y
    exp_pp r8.x, r7.x
    exp_pp r8.y, r7.y
    exp_pp r8.z, r7.z
    mad_pp r7.xyz, r8, c18.z, c18.w
    max_pp r8.xyz, r7, c18.x
    mov r4.x, c18.x
    if_lt -c6.w, r4.x
      nrm_pp r7.xyz, r5
      add r9.xyz, c4, -v5
      rcp r10.x, r7.x
      rcp r10.y, r7.y
      rcp r10.z, r7.z
      mul_pp r9.xyz, r9, r10
      add r11.xyz, c5, -v5
      mul_pp r10.xyz, r10, r11
      cmp_pp r9.xyz, -r7, r10, r9
      min_pp r3.w, r9.y, r9.x
      min_pp r4.w, r9.z, r3.w
      add r9.xyz, -c6, v5
      mad_pp r7.xyz, r7, r4.w, r9
    else
      mov_pp r7.xyz, r5
    endif
    mad_pp r3.w, r4.z, -c19.x, c19.y
    mul_pp r3.w, r3.w, r4.z
    mul_pp r7.w, r3.w, c19.z
    texldl_pp r9, r7, s0
    add r3.w, -r2.w, c7.w
    cmp_pp r3.w, -r3_abs.w, r9.w, c17.w
    mul_pp r3.w, r3.w, c7.x
    mul_pp r10.xyz, r9, r3.w
    mov r4.w, c5.w
    if_lt r4.w, c19.w
      if_lt -c10.w, r4.x
        nrm_pp r11.xyz, r5
        add r12.xyz, c8, -v5
        rcp r13.x, r11.x
        rcp r13.y, r11.y
        rcp r13.z, r11.z
        mul_pp r12.xyz, r12, r13
        add r14.xyz, c9, -v5
        mul_pp r13.xyz, r13, r14
        cmp_pp r12.xyz, -r11, r13, r12
        min_pp r4.x, r12.y, r12.x
        min_pp r5.w, r12.z, r4.x
        add r12.xyz, -c10, v5
        mad_pp r7.xyz, r11, r5.w, r12
      else
        mov_pp r7.xyz, r5
      endif
      texldl_pp r5, r7, s1
      add r2.w, -r2.w, c11.w
      cmp_pp r2.w, -r2_abs.w, r5.w, c17.w
      mul_pp r2.w, r2.w, c11.x
      mul_pp r5.xyz, r5, r2.w
      mad r7.xyz, r3.w, r9, -r5
      mad_pp r10.xyz, c5.w, r7, r5
    endif
    mul_pp r5.xyz, r4.y, r10
    mad_pp r7.xyz, v1, -r1.w, c0
    dp3_pp r1.w, r7, r7
    add r2.w, -r1.w, c20.x
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r2.w, c20.y, r1.w
    mul_pp r7.xyz, r1.w, r7
    dp3_pp r1.w, r3, -r2
    dp3_sat_pp r2.x, r3, c0
    dp3_sat_pp r2.y, r3, r7
    dp3_sat_pp r2.z, c0, r7
    mul_pp r2.w, r2.z, r2.z
    dp2add_pp r2.w, r2.w, r4.z, c20.z
    add_pp r3.x, -r2.x, c17.w
    mul_pp r3.y, r3.x, r3.x
    mul_pp r3.y, r3.y, r3.y
    mul_pp r3.x, r3.x, r3.y
    mad_pp r3.x, r2.w, r3.x, c17.w
    add_pp r3.y, -r1_abs.w, c17.w
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    mad_pp r2.w, r2.w, r3.y, c17.w
    mul_pp r2.w, r2.w, r3.x
    mul_pp r2.w, r2.x, r2.w
    mul_pp r3.x, r4.z, r4.z
    mad_pp r3.z, r4.z, -r4.z, c17.w
    mad_pp r3.w, r1_abs.w, r3.z, r3.x
    mad_pp r3.z, r2.x, r3.z, r3.x
    mul_pp r1.w, r1_abs.w, r3.z
    mad r1.w, r2.x, r3.w, r1.w
    add r1.w, r1.w, c20.w
    rcp r1.w, r1.w
    mul_pp r1.w, r1.w, -c20.z
    mul_pp r3.z, r3.x, r3.x
    mad_pp r3.w, r2.y, r3.z, -r2.y
    mad_pp r2.y, r3.w, r2.y, c17.w
    mul r3.z, r3.z, c21.x
    mad r2.y, r2.y, r2.y, c21.y
    rcp r2.y, r2.y
    mul_pp r2.y, r2.y, r3.z
    mul r1.w, r1.w, r2.y
    mul_pp r2.y, r1.w, c21.z
    mad r1.w, r1.w, -c21.z, c21.w
    rsq r2.y, r2.y
    rcp_pp r2.y, r2.y
    cmp_pp r1.w, r1.w, c22.x, r2.y
    mul_pp r1.w, r2.x, r1.w
    mul_pp r2.x, r3.x, r4.z
    mad_pp r2.x, r2.x, -c22.y, c22.z
    dp3_pp r2.y, r0, r0
    cmp r2.y, -r2.y, c22.w, c22.z
    mul_pp r1.w, r1.w, r2.y
    add_pp r0.w, -r0.w, c17.w
    add_sat_pp r0.w, r0.w, c15.x
    mul_pp r3.xzw, r2.w, r6.xyyz
    mad_pp r3.xzw, r8.xyyz, r4.y, r3
    mul_pp r4.xyz, r6, r1.w
    add_pp r1.w, -r2.z, c17.w
    mul_pp r2.y, r1.w, r1.w
    mul_pp r2.y, r2.y, r2.y
    mul_pp r1.w, r1.w, r2.y
    lrp_pp r2.yzw, r1.w, c17.w, r0.xxyz
    mul_pp r2.yzw, r2, r4.xxyz
    mad_pp r1.xyz, r1, r3.xzww, r2.yzww
    mul_pp r2.xyz, r5, r2.x
    lrp_pp r4.xyz, r3.y, r0.w, r0
    mad_pp oC0.xyz, r2, r4, r1
    mov_pp oC0.w, c17.w

// approximately 172 instruction slots used (7 texture, 165 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 28 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[9].w, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
   8: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mov o8.xyz, r1.xyzx
  15: mov o3.xyzw, l(0,0,0,0)
  16: mov o4.xyzw, l(0,0,0,0)
  17: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  18: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  19: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  20: dp3 r1.w, r1.xyzx, r1.xyzx
  21: rsq r1.w, r1.w
  22: mul r1.xyz, r1.wwww, r1.xyzx
  23: mov o5.xyz, r1.xyzx
  24: mov o5.w, l(0)
  25: mul r1.w, r1.y, r1.y
  26: mad r1.w, r1.x, r1.x, -r1.w
  27: mul r2.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r1.x, cb2[41].xyzw, r2.xyzw
  29: dp4 r1.y, cb2[42].xyzw, r2.xyzw
  30: dp4 r1.z, cb2[43].xyzw, r2.xyzw
  31: mad o6.xyz, cb2[44].xyzx, r1.wwww, r1.xyzx
  32: mov o6.w, l(0)
  33: mul r0.y, r0.y, cb1[5].x
  34: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  35: mov o7.zw, r0.zzzw
  36: add o7.xy, r1.zzzz, r1.xwxx
  37: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 152 math, 6 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_OcclusionMap" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3
Set CUBE Texture "unity_SpecCube1" to slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 5

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_input_ps linear v8.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: div r4.xy, v7.xyxx, v7.wwww
  13: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  14: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  15: add r3.w, -cb0[9].y, l(1.000000)
  16: mad r3.w, r5.y, cb0[9].y, r3.w
  17: add r4.y, -cb0[8].w, l(1.000000)
  18: dp3 r4.z, r3.xyzx, r2.xyzx
  19: add r4.z, r4.z, r4.z
  20: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  21: mul r4.xzw, r4.xxxx, cb0[2].xxyz
  22: eq r5.w, cb3[0].x, l(1.000000)
  23: if_nz r5.w
  24:   eq r5.w, cb3[0].y, l(1.000000)
  25:   mul r6.xyz, v8.yyyy, cb3[2].xyzx
  26:   mad r6.xyz, cb3[1].xyzx, v8.xxxx, r6.xyzx
  27:   mad r6.xyz, cb3[3].xyzx, v8.zzzz, r6.xyzx
  28:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  29:   movc r6.xyz, r5.wwww, r6.xyzx, v8.xyzx
  30:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  31:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  32:   mul r5.w, r6.y, l(0.250000)
  33:   mul r6.y, cb3[0].z, l(0.500000)
  34:   mad r7.x, -cb3[0].z, l(0.500000), l(0.250000)
  35:   max r5.w, r5.w, r6.y
  36:   min r6.x, r7.x, r5.w
  37:   sample r7.xyzw, r6.xzwx, t5.xyzw, s1
  38:   add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  39:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  40:   add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  41:   sample r6.xyzw, r6.xyzx, t5.xyzw, s1
  42:   mov r2.w, l(1.000000)
  43:   dp4 r7.x, r7.xyzw, r2.xyzw
  44:   dp4 r7.y, r8.xyzw, r2.xyzw
  45:   dp4 r7.z, r6.xyzw, r2.xyzw
  46: else 
  47:   mov r2.w, l(1.000000)
  48:   dp4 r7.x, cb1[38].xyzw, r2.xyzw
  49:   dp4 r7.y, cb1[39].xyzw, r2.xyzw
  50:   dp4 r7.z, cb1[40].xyzw, r2.xyzw
  51: endif 
  52: add r6.xyz, r7.xyzx, v6.xyzx
  53: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  54: log r6.xyz, r6.xyzx
  55: mul r6.xyz, r6.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  56: exp r6.xyz, r6.xyzx
  57: mad r6.xyz, r6.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  58: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  59: lt r2.w, l(0.000000), cb2[2].w
  60: if_nz r2.w
  61:   dp3 r2.w, r5.xyzx, r5.xyzx
  62:   rsq r2.w, r2.w
  63:   mul r7.xyz, r2.wwww, r5.xyzx
  64:   add r8.xyz, -v8.xyzx, cb2[0].xyzx
  65:   div r8.xyz, r8.xyzx, r7.xyzx
  66:   add r9.xyz, -v8.xyzx, cb2[1].xyzx
  67:   div r9.xyz, r9.xyzx, r7.xyzx
  68:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  69:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  70:   min r2.w, r8.y, r8.x
  71:   min r2.w, r8.z, r2.w
  72:   add r8.xyz, v8.xyzx, -cb2[2].xyzx
  73:   mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
  74: else 
  75:   mov r7.xyz, r5.xyzx
  76: endif 
  77: mad r2.w, -r4.y, l(0.700000), l(1.700000)
  78: mul r2.w, r2.w, r4.y
  79: mul r2.w, r2.w, l(6.000000)
  80: sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r2.w
  81: eq r5.w, cb2[3].w, l(1.000000)
  82: movc r5.w, r5.w, r7.w, l(1.000000)
  83: mul r5.w, r5.w, cb2[3].x
  84: mul r8.xyz, r7.xyzx, r5.wwww
  85: lt r6.w, cb2[1].w, l(0.999990)
  86: if_nz r6.w
  87:   lt r6.w, l(0.000000), cb2[6].w
  88:   if_nz r6.w
  89:     dp3 r6.w, r5.xyzx, r5.xyzx
  90:     rsq r6.w, r6.w
  91:     mul r9.xyz, r5.xyzx, r6.wwww
  92:     add r10.xyz, -v8.xyzx, cb2[4].xyzx
  93:     div r10.xyz, r10.xyzx, r9.xyzx
  94:     add r11.xyz, -v8.xyzx, cb2[5].xyzx
  95:     div r11.xyz, r11.xyzx, r9.xyzx
  96:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  97:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  98:     min r6.w, r10.y, r10.x
  99:     min r6.w, r10.z, r6.w
 100:     add r10.xyz, v8.xyzx, -cb2[6].xyzx
 101:     mad r5.xyz, r9.xyzx, r6.wwww, r10.xyzx
 102:   endif 
 103:   sample_l r9.xyzw, r5.xyzx, t4.xyzw, s0, r2.w
 104:   eq r2.w, cb2[7].w, l(1.000000)
 105:   movc r2.w, r2.w, r9.w, l(1.000000)
 106:   mul r2.w, r2.w, cb2[7].x
 107:   mul r5.xyz, r9.xyzx, r2.wwww
 108:   mad r7.xyz, r5.wwww, r7.xyzx, -r5.xyzx
 109:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
 110: endif 
 111: mul r5.xyz, r3.wwww, r8.xyzx
 112: mad r7.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
 113: dp3 r1.w, r7.xyzx, r7.xyzx
 114: max r1.w, r1.w, l(0.001000)
 115: rsq r1.w, r1.w
 116: mul r7.xyz, r1.wwww, r7.xyzx
 117: dp3 r1.w, r2.xyzx, -r3.xyzx
 118: dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
 119: dp3_sat r2.x, r2.xyzx, r7.xyzx
 120: dp3_sat r2.y, cb1[0].xyzx, r7.xyzx
 121: mul r2.z, r2.y, r2.y
 122: dp2 r2.z, r2.zzzz, r4.yyyy
 123: add r2.z, r2.z, l(-0.500000)
 124: add r3.x, -r2.w, l(1.000000)
 125: mul r3.y, r3.x, r3.x
 126: mul r3.y, r3.y, r3.y
 127: mul r3.x, r3.x, r3.y
 128: mad r3.x, r2.z, r3.x, l(1.000000)
 129: add r3.y, -|r1.w|, l(1.000000)
 130: mul r3.z, r3.y, r3.y
 131: mul r3.z, r3.z, r3.z
 132: mul r3.y, r3.y, r3.z
 133: mad r2.z, r2.z, r3.y, l(1.000000)
 134: mul r2.z, r2.z, r3.x
 135: mul r2.z, r2.w, r2.z
 136: mul r3.x, r4.y, r4.y
 137: mad r3.z, -r4.y, r4.y, l(1.000000)
 138: mad r5.w, |r1.w|, r3.z, r3.x
 139: mad r3.z, r2.w, r3.z, r3.x
 140: mul r1.w, |r1.w|, r3.z
 141: mad r1.w, r2.w, r5.w, r1.w
 142: add r1.w, r1.w, l(0.000010)
 143: div r1.w, l(0.500000), r1.w
 144: mul r3.z, r3.x, r3.x
 145: mad r5.w, r2.x, r3.z, -r2.x
 146: mad r2.x, r5.w, r2.x, l(1.000000)
 147: mul r3.z, r3.z, l(0.318310)
 148: mad r2.x, r2.x, r2.x, l(0.000000)
 149: div r2.x, r3.z, r2.x
 150: mul r1.w, r1.w, r2.x
 151: mul r1.w, r1.w, l(3.141593)
 152: max r1.w, r1.w, l(0.000100)
 153: sqrt r1.w, r1.w
 154: mul r1.w, r2.w, r1.w
 155: mul r2.x, r3.x, r4.y
 156: mad r2.x, -r2.x, l(0.280000), l(1.000000)
 157: dp3 r2.w, r0.xyzx, r0.xyzx
 158: ne r2.w, r2.w, l(0.000000)
 159: and r2.w, r2.w, l(0x3f800000)
 160: mul r1.w, r1.w, r2.w
 161: add r0.w, -r0.w, cb0[8].w
 162: add_sat r0.w, r0.w, l(1.000000)
 163: mul r7.xyz, r2.zzzz, r4.xzwx
 164: mad r3.xzw, r6.xxyz, r3.wwww, r7.xxyz
 165: mul r4.xyz, r4.xzwx, r1.wwww
 166: add r1.w, -r2.y, l(1.000000)
 167: mul r2.y, r1.w, r1.w
 168: mul r2.y, r2.y, r2.y
 169: mul r1.w, r1.w, r2.y
 170: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 171: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 172: mul r2.yzw, r2.yyzw, r4.xxyz
 173: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 174: mul r2.xyz, r5.xyzx, r2.xxxx
 175: add r3.xzw, -r0.xxyz, r0.wwww
 176: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 177: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 178: mov o0.w, l(1.000000)
 179: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL _EMISSION 
-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d9":
// Stats: 153 math, 7 textures, 5 branches
Vector4 _Color at 13
Vector4 _EmissionColor at 17
Float _Glossiness at 15
Vector4 _LightColor0 at 12
Float _Metallic at 14
Float _OcclusionStrength at 16
Vector4 _WorldSpaceLightPos0 at 0
Vector4 unity_SHAb at 3
Vector4 unity_SHAg at 2
Vector4 unity_SHAr at 1
Vector4 unity_SpecCube0_BoxMax at 4
Vector4 unity_SpecCube0_BoxMin at 5
Vector4 unity_SpecCube0_HDR at 7
Vector4 unity_SpecCube0_ProbePosition at 6
Vector4 unity_SpecCube1_BoxMax at 8
Vector4 unity_SpecCube1_BoxMin at 9
Vector4 unity_SpecCube1_HDR at 11
Vector4 unity_SpecCube1_ProbePosition at 10

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3
Set 2D Texture "_EmissionMap" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   _WorldSpaceLightPos0          c0       1
//   unity_SHAr                    c1       1
//   unity_SHAg                    c2       1
//   unity_SHAb                    c3       1
//   unity_SpecCube0_BoxMax        c4       1
//   unity_SpecCube0_BoxMin        c5       1
//   unity_SpecCube0_ProbePosition c6       1
//   unity_SpecCube0_HDR           c7       1
//   unity_SpecCube1_BoxMax        c8       1
//   unity_SpecCube1_BoxMin        c9       1
//   unity_SpecCube1_ProbePosition c10      1
//   unity_SpecCube1_HDR           c11      1
//   _LightColor0                  c12      1
//   _Color                        c13      1
//   _Metallic                     c14      1
//   _Glossiness                   c15      1
//   _OcclusionStrength            c16      1
//   _EmissionColor                c17      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//   _OcclusionMap                 s3       1
//   _EmissionMap                  s4       1
//

    ps_3_0
    def c18, -0.220916301, 0.220916301, 0.779083729, 1
    def c19, 0, 0.416666657, 1.05499995, -0.0549999997
    def c20, 0.699999988, 1.70000005, 6, 0.999989986
    def c21, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c22, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c23, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5_pp v3.xyz
    dcl_texcoord8 v4.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c13
    mov r2, c18
    mad_pp r0.xyz, c13, r0, r2.x
    mad_pp r0.xyz, c14.x, r0, r2.y
    mad_pp r0.w, c14.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r3.xyz, v2
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r2.xyz, r1.w, v1
    texld_pp r4, v0, s3
    add_pp r4.x, r2.w, -c16.x
    mad_pp r4.x, r4.y, c16.x, r4.x
    add_pp r4.y, r2.w, -c15.x
    dp3_pp r4.z, r2, r3
    add_pp r4.z, r4.z, r4.z
    mad_pp r5.xyz, r3, -r4.z, r2
    mov r3.w, c18.w
    dp4_pp r6.x, c1, r3
    dp4_pp r6.y, c2, r3
    dp4_pp r6.z, c3, r3
    add_pp r6.xyz, r6, v3
    max_pp r7.xyz, r6, c19.x
    log_pp r6.x, r7.x
    log_pp r6.y, r7.y
    log_pp r6.z, r7.z
    mul_pp r6.xyz, r6, c19.y
    exp_pp r7.x, r6.x
    exp_pp r7.y, r6.y
    exp_pp r7.z, r6.z
    mad_pp r6.xyz, r7, c19.z, c19.w
    max_pp r7.xyz, r6, c19.x
    mov r6.x, c19.x
    if_lt -c6.w, r6.x
      nrm_pp r8.xyz, r5
      add r6.yzw, c4.xxyz, -v4.xxyz
      rcp r9.x, r8.x
      rcp r9.y, r8.y
      rcp r9.z, r8.z
      mul_pp r6.yzw, r6, r9.xxyz
      add r10.xyz, c5, -v4
      mul_pp r9.xyz, r9, r10
      cmp_pp r6.yzw, -r8.xxyz, r9.xxyz, r6
      min_pp r3.w, r6.z, r6.y
      min_pp r4.z, r6.w, r3.w
      add r6.yzw, -c6.xxyz, v4.xxyz
      mad_pp r8.xyz, r8, r4.z, r6.yzww
    else
      mov_pp r8.xyz, r5
    endif
    mad_pp r3.w, r4.y, -c20.x, c20.y
    mul_pp r3.w, r3.w, r4.y
    mul_pp r8.w, r3.w, c20.z
    texldl_pp r9, r8, s0
    add r3.w, -r2.w, c7.w
    cmp_pp r3.w, -r3_abs.w, r9.w, c18.w
    mul_pp r3.w, r3.w, c7.x
    mul_pp r6.yzw, r9.xxyz, r3.w
    mov r4.w, c5.w
    if_lt r4.w, c20.w
      if_lt -c10.w, r6.x
        nrm_pp r10.xyz, r5
        add r11.xyz, c8, -v4
        rcp r12.x, r10.x
        rcp r12.y, r10.y
        rcp r12.z, r10.z
        mul_pp r11.xyz, r11, r12
        add r13.xyz, c9, -v4
        mul_pp r12.xyz, r12, r13
        cmp_pp r11.xyz, -r10, r12, r11
        min_pp r4.z, r11.y, r11.x
        min_pp r5.w, r11.z, r4.z
        add r11.xyz, -c10, v4
        mad_pp r8.xyz, r10, r5.w, r11
      else
        mov_pp r8.xyz, r5
      endif
      texldl_pp r5, r8, s1
      add r2.w, -r2.w, c11.w
      cmp_pp r2.w, -r2_abs.w, r5.w, c18.w
      mul_pp r2.w, r2.w, c11.x
      mul_pp r5.xyz, r5, r2.w
      mad r8.xyz, r3.w, r9, -r5
      mad_pp r6.yzw, c5.w, r8.xxyz, r5.xxyz
    endif
    mul_pp r5.xyz, r4.x, r6.yzww
    mad_pp r6.xyz, v1, -r1.w, c0
    dp3_pp r1.w, r6, r6
    add r2.w, -r1.w, c21.x
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r2.w, c21.y, r1.w
    mul_pp r6.xyz, r1.w, r6
    dp3_pp r1.w, r3, -r2
    dp3_sat_pp r2.x, r3, c0
    dp3_sat_pp r2.y, r3, r6
    dp3_sat_pp r2.z, c0, r6
    mul_pp r2.w, r2.z, r2.z
    dp2add_pp r2.w, r2.w, r4.y, c21.z
    add_pp r3.x, -r2.x, c18.w
    mul_pp r3.y, r3.x, r3.x
    mul_pp r3.y, r3.y, r3.y
    mul_pp r3.x, r3.x, r3.y
    mad_pp r3.x, r2.w, r3.x, c18.w
    add_pp r3.y, -r1_abs.w, c18.w
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    mad_pp r2.w, r2.w, r3.y, c18.w
    mul_pp r2.w, r2.w, r3.x
    mul_pp r2.w, r2.x, r2.w
    mul_pp r3.x, r4.y, r4.y
    mad_pp r3.z, r4.y, -r4.y, c18.w
    mad_pp r3.w, r1_abs.w, r3.z, r3.x
    mad_pp r3.z, r2.x, r3.z, r3.x
    mul_pp r1.w, r1_abs.w, r3.z
    mad r1.w, r2.x, r3.w, r1.w
    add r1.w, r1.w, c21.w
    rcp r1.w, r1.w
    mul_pp r1.w, r1.w, -c21.z
    mul_pp r3.z, r3.x, r3.x
    mad_pp r3.w, r2.y, r3.z, -r2.y
    mad_pp r2.y, r3.w, r2.y, c18.w
    mul r3.z, r3.z, c22.x
    mad r2.y, r2.y, r2.y, c22.y
    rcp r2.y, r2.y
    mul_pp r2.y, r2.y, r3.z
    mul r1.w, r1.w, r2.y
    mul_pp r2.y, r1.w, c22.z
    mad r1.w, r1.w, -c22.z, c22.w
    rsq r2.y, r2.y
    rcp_pp r2.y, r2.y
    cmp_pp r1.w, r1.w, c23.x, r2.y
    mul_pp r1.w, r2.x, r1.w
    mul_pp r2.x, r3.x, r4.y
    mad_pp r2.x, r2.x, -c23.y, c23.z
    dp3_pp r2.y, r0, r0
    cmp r2.y, -r2.y, c23.w, c23.z
    mul_pp r1.w, r1.w, r2.y
    add_pp r0.w, -r0.w, c18.w
    add_sat_pp r0.w, r0.w, c15.x
    mul_pp r3.xzw, r2.w, c12.xyyz
    mad_pp r3.xzw, r7.xyyz, r4.x, r3
    mul_pp r4.xyz, r1.w, c12
    add_pp r1.w, -r2.z, c18.w
    mul_pp r2.y, r1.w, r1.w
    mul_pp r2.y, r2.y, r2.y
    mul_pp r1.w, r1.w, r2.y
    lrp_pp r2.yzw, r1.w, c18.w, r0.xxyz
    mul_pp r2.yzw, r2, r4.xxyz
    mad_pp r1.xyz, r1, r3.xzww, r2.yzww
    mul_pp r2.xyz, r5, r2.x
    lrp_pp r4.xyz, r3.y, r0.w, r0
    mad_pp r0.xyz, r2, r4, r1
    texld r1, v0, s4
    mad_pp oC0.xyz, r1, c17, r0
    mov_pp oC0.w, c18.w

// approximately 172 instruction slots used (7 texture, 165 arithmetic)


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11":
// Stats: 151 math, 6 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "_EmissionMap" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3
Set CUBE Texture "unity_SpecCube1" to slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 5

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 12
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: sample r4.xyzw, v1.xyxx, t1.xyzw, s3
  13: add r3.w, -cb0[9].y, l(1.000000)
  14: mad r3.w, r4.y, cb0[9].y, r3.w
  15: add r4.x, -cb0[8].w, l(1.000000)
  16: dp3 r4.y, r3.xyzx, r2.xyzx
  17: add r4.y, r4.y, r4.y
  18: mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
  19: eq r5.x, cb3[0].x, l(1.000000)
  20: if_nz r5.x
  21:   eq r5.x, cb3[0].y, l(1.000000)
  22:   mul r5.yzw, v7.yyyy, cb3[2].xxyz
  23:   mad r5.yzw, cb3[1].xxyz, v7.xxxx, r5.yyzw
  24:   mad r5.yzw, cb3[3].xxyz, v7.zzzz, r5.yyzw
  25:   add r5.yzw, r5.yyzw, cb3[4].xxyz
  26:   movc r5.xyz, r5.xxxx, r5.yzwy, v7.xyzx
  27:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  28:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  29:   mul r5.y, r5.y, l(0.250000)
  30:   mul r6.x, cb3[0].z, l(0.500000)
  31:   mad r6.y, -cb3[0].z, l(0.500000), l(0.250000)
  32:   max r5.y, r5.y, r6.x
  33:   min r5.x, r6.y, r5.y
  34:   sample r6.xyzw, r5.xzwx, t5.xyzw, s1
  35:   add r7.xyz, r5.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  36:   sample r7.xyzw, r7.xyzx, t5.xyzw, s1
  37:   add r5.xyz, r5.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  38:   sample r5.xyzw, r5.xyzx, t5.xyzw, s1
  39:   mov r2.w, l(1.000000)
  40:   dp4 r6.x, r6.xyzw, r2.xyzw
  41:   dp4 r6.y, r7.xyzw, r2.xyzw
  42:   dp4 r6.z, r5.xyzw, r2.xyzw
  43: else 
  44:   mov r2.w, l(1.000000)
  45:   dp4 r6.x, cb1[38].xyzw, r2.xyzw
  46:   dp4 r6.y, cb1[39].xyzw, r2.xyzw
  47:   dp4 r6.z, cb1[40].xyzw, r2.xyzw
  48: endif 
  49: add r5.xyz, r6.xyzx, v6.xyzx
  50: max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  51: log r5.xyz, r5.xyzx
  52: mul r5.xyz, r5.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  53: exp r5.xyz, r5.xyzx
  54: mad r5.xyz, r5.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  55: max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: lt r2.w, l(0.000000), cb2[2].w
  57: if_nz r2.w
  58:   dp3 r2.w, r4.yzwy, r4.yzwy
  59:   rsq r2.w, r2.w
  60:   mul r6.xyz, r2.wwww, r4.yzwy
  61:   add r7.xyz, -v7.xyzx, cb2[0].xyzx
  62:   div r7.xyz, r7.xyzx, r6.xyzx
  63:   add r8.xyz, -v7.xyzx, cb2[1].xyzx
  64:   div r8.xyz, r8.xyzx, r6.xyzx
  65:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  66:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  67:   min r2.w, r7.y, r7.x
  68:   min r2.w, r7.z, r2.w
  69:   add r7.xyz, v7.xyzx, -cb2[2].xyzx
  70:   mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
  71: else 
  72:   mov r6.xyz, r4.yzwy
  73: endif 
  74: mad r2.w, -r4.x, l(0.700000), l(1.700000)
  75: mul r2.w, r2.w, r4.x
  76: mul r2.w, r2.w, l(6.000000)
  77: sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, r2.w
  78: eq r5.w, cb2[3].w, l(1.000000)
  79: movc r5.w, r5.w, r6.w, l(1.000000)
  80: mul r5.w, r5.w, cb2[3].x
  81: mul r7.xyz, r6.xyzx, r5.wwww
  82: lt r6.w, cb2[1].w, l(0.999990)
  83: if_nz r6.w
  84:   lt r6.w, l(0.000000), cb2[6].w
  85:   if_nz r6.w
  86:     dp3 r6.w, r4.yzwy, r4.yzwy
  87:     rsq r6.w, r6.w
  88:     mul r8.xyz, r4.yzwy, r6.wwww
  89:     add r9.xyz, -v7.xyzx, cb2[4].xyzx
  90:     div r9.xyz, r9.xyzx, r8.xyzx
  91:     add r10.xyz, -v7.xyzx, cb2[5].xyzx
  92:     div r10.xyz, r10.xyzx, r8.xyzx
  93:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  94:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  95:     min r6.w, r9.y, r9.x
  96:     min r6.w, r9.z, r6.w
  97:     add r9.xyz, v7.xyzx, -cb2[6].xyzx
  98:     mad r4.yzw, r8.xxyz, r6.wwww, r9.xxyz
  99:   endif 
 100:   sample_l r8.xyzw, r4.yzwy, t4.xyzw, s0, r2.w
 101:   eq r2.w, cb2[7].w, l(1.000000)
 102:   movc r2.w, r2.w, r8.w, l(1.000000)
 103:   mul r2.w, r2.w, cb2[7].x
 104:   mul r4.yzw, r8.xxyz, r2.wwww
 105:   mad r6.xyz, r5.wwww, r6.xyzx, -r4.yzwy
 106:   mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
 107: endif 
 108: mul r4.yzw, r3.wwww, r7.xxyz
 109: mad r6.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
 110: dp3 r1.w, r6.xyzx, r6.xyzx
 111: max r1.w, r1.w, l(0.001000)
 112: rsq r1.w, r1.w
 113: mul r6.xyz, r1.wwww, r6.xyzx
 114: dp3 r1.w, r2.xyzx, -r3.xyzx
 115: dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
 116: dp3_sat r2.x, r2.xyzx, r6.xyzx
 117: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 118: mul r2.z, r2.y, r2.y
 119: dp2 r2.z, r2.zzzz, r4.xxxx
 120: add r2.z, r2.z, l(-0.500000)
 121: add r3.x, -r2.w, l(1.000000)
 122: mul r3.y, r3.x, r3.x
 123: mul r3.y, r3.y, r3.y
 124: mul r3.x, r3.x, r3.y
 125: mad r3.x, r2.z, r3.x, l(1.000000)
 126: add r3.y, -|r1.w|, l(1.000000)
 127: mul r3.z, r3.y, r3.y
 128: mul r3.z, r3.z, r3.z
 129: mul r3.y, r3.y, r3.z
 130: mad r2.z, r2.z, r3.y, l(1.000000)
 131: mul r2.z, r2.z, r3.x
 132: mul r2.z, r2.w, r2.z
 133: mul r3.x, r4.x, r4.x
 134: mad r3.z, -r4.x, r4.x, l(1.000000)
 135: mad r5.w, |r1.w|, r3.z, r3.x
 136: mad r3.z, r2.w, r3.z, r3.x
 137: mul r1.w, |r1.w|, r3.z
 138: mad r1.w, r2.w, r5.w, r1.w
 139: add r1.w, r1.w, l(0.000010)
 140: div r1.w, l(0.500000), r1.w
 141: mul r3.z, r3.x, r3.x
 142: mad r5.w, r2.x, r3.z, -r2.x
 143: mad r2.x, r5.w, r2.x, l(1.000000)
 144: mul r3.z, r3.z, l(0.318310)
 145: mad r2.x, r2.x, r2.x, l(0.000000)
 146: div r2.x, r3.z, r2.x
 147: mul r1.w, r1.w, r2.x
 148: mul r1.w, r1.w, l(3.141593)
 149: max r1.w, r1.w, l(0.000100)
 150: sqrt r1.w, r1.w
 151: mul r1.w, r2.w, r1.w
 152: mul r2.x, r3.x, r4.x
 153: mad r2.x, -r2.x, l(0.280000), l(1.000000)
 154: dp3 r2.w, r0.xyzx, r0.xyzx
 155: ne r2.w, r2.w, l(0.000000)
 156: and r2.w, r2.w, l(0x3f800000)
 157: mul r1.w, r1.w, r2.w
 158: add r0.w, -r0.w, cb0[8].w
 159: add_sat r0.w, r0.w, l(1.000000)
 160: mul r6.xyz, r2.zzzz, cb0[2].xyzx
 161: mad r3.xzw, r5.xxyz, r3.wwww, r6.xxyz
 162: mul r5.xyz, r1.wwww, cb0[2].xyzx
 163: add r1.w, -r2.y, l(1.000000)
 164: mul r2.y, r1.w, r1.w
 165: mul r2.y, r2.y, r2.y
 166: mul r1.w, r1.w, r2.y
 167: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 168: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 169: mul r2.yzw, r2.yyzw, r5.xxyz
 170: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 171: mul r2.xyz, r4.yzwy, r2.xxxx
 172: add r3.xzw, -r0.xxyz, r0.wwww
 173: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 174: mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 175: sample r1.xyzw, v1.xyxx, t2.xyzw, s4
 176: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
 177: mov o0.w, l(1.000000)
 178: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN _EMISSION 
-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d9":
// Stats: 154 math, 8 textures, 5 branches
Vector4 _Color at 13
Vector4 _EmissionColor at 17
Float _Glossiness at 15
Vector4 _LightColor0 at 12
Float _Metallic at 14
Float _OcclusionStrength at 16
Vector4 _WorldSpaceLightPos0 at 0
Vector4 unity_SHAb at 3
Vector4 unity_SHAg at 2
Vector4 unity_SHAr at 1
Vector4 unity_SpecCube0_BoxMax at 4
Vector4 unity_SpecCube0_BoxMin at 5
Vector4 unity_SpecCube0_HDR at 7
Vector4 unity_SpecCube0_ProbePosition at 6
Vector4 unity_SpecCube1_BoxMax at 8
Vector4 unity_SpecCube1_BoxMin at 9
Vector4 unity_SpecCube1_HDR at 11
Vector4 unity_SpecCube1_ProbePosition at 10

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3
Set 2D Texture "_EmissionMap" to slot 4
Set 2D Texture "_ShadowMapTexture" to slot 5

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   sampler2D _ShadowMapTexture;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   _WorldSpaceLightPos0          c0       1
//   unity_SHAr                    c1       1
//   unity_SHAg                    c2       1
//   unity_SHAb                    c3       1
//   unity_SpecCube0_BoxMax        c4       1
//   unity_SpecCube0_BoxMin        c5       1
//   unity_SpecCube0_ProbePosition c6       1
//   unity_SpecCube0_HDR           c7       1
//   unity_SpecCube1_BoxMax        c8       1
//   unity_SpecCube1_BoxMin        c9       1
//   unity_SpecCube1_ProbePosition c10      1
//   unity_SpecCube1_HDR           c11      1
//   _LightColor0                  c12      1
//   _Color                        c13      1
//   _Metallic                     c14      1
//   _Glossiness                   c15      1
//   _OcclusionStrength            c16      1
//   _EmissionColor                c17      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//   _OcclusionMap                 s3       1
//   _EmissionMap                  s4       1
//   _ShadowMapTexture             s5       1
//

    ps_3_0
    def c18, -0.220916301, 0.220916301, 0.779083729, 1
    def c19, 0, 0.416666657, 1.05499995, -0.0549999997
    def c20, 0.699999988, 1.70000005, 6, 0.999989986
    def c21, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c22, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c23, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord4_pp v2.xyz
    dcl_texcoord5_pp v3.xyz
    dcl_texcoord6 v4
    dcl_texcoord8 v5.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c13
    mov r2, c18
    mad_pp r0.xyz, c13, r0, r2.x
    mad_pp r0.xyz, c14.x, r0, r2.y
    mad_pp r0.w, c14.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r3.xyz, v2
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r2.xyz, r1.w, v1
    texldp_pp r4, v4, s5
    texld_pp r5, v0, s3
    add_pp r4.y, r2.w, -c16.x
    mad_pp r4.y, r5.y, c16.x, r4.y
    add_pp r4.z, r2.w, -c15.x
    dp3_pp r4.w, r2, r3
    add_pp r4.w, r4.w, r4.w
    mad_pp r5.xyz, r3, -r4.w, r2
    mul_pp r6.xyz, r4.x, c12
    mov r3.w, c18.w
    dp4_pp r7.x, c1, r3
    dp4_pp r7.y, c2, r3
    dp4_pp r7.z, c3, r3
    add_pp r7.xyz, r7, v3
    max_pp r8.xyz, r7, c19.x
    log_pp r7.x, r8.x
    log_pp r7.y, r8.y
    log_pp r7.z, r8.z
    mul_pp r7.xyz, r7, c19.y
    exp_pp r8.x, r7.x
    exp_pp r8.y, r7.y
    exp_pp r8.z, r7.z
    mad_pp r7.xyz, r8, c19.z, c19.w
    max_pp r8.xyz, r7, c19.x
    mov r4.x, c19.x
    if_lt -c6.w, r4.x
      nrm_pp r7.xyz, r5
      add r9.xyz, c4, -v5
      rcp r10.x, r7.x
      rcp r10.y, r7.y
      rcp r10.z, r7.z
      mul_pp r9.xyz, r9, r10
      add r11.xyz, c5, -v5
      mul_pp r10.xyz, r10, r11
      cmp_pp r9.xyz, -r7, r10, r9
      min_pp r3.w, r9.y, r9.x
      min_pp r4.w, r9.z, r3.w
      add r9.xyz, -c6, v5
      mad_pp r7.xyz, r7, r4.w, r9
    else
      mov_pp r7.xyz, r5
    endif
    mad_pp r3.w, r4.z, -c20.x, c20.y
    mul_pp r3.w, r3.w, r4.z
    mul_pp r7.w, r3.w, c20.z
    texldl_pp r9, r7, s0
    add r3.w, -r2.w, c7.w
    cmp_pp r3.w, -r3_abs.w, r9.w, c18.w
    mul_pp r3.w, r3.w, c7.x
    mul_pp r10.xyz, r9, r3.w
    mov r4.w, c5.w
    if_lt r4.w, c20.w
      if_lt -c10.w, r4.x
        nrm_pp r11.xyz, r5
        add r12.xyz, c8, -v5
        rcp r13.x, r11.x
        rcp r13.y, r11.y
        rcp r13.z, r11.z
        mul_pp r12.xyz, r12, r13
        add r14.xyz, c9, -v5
        mul_pp r13.xyz, r13, r14
        cmp_pp r12.xyz, -r11, r13, r12
        min_pp r4.x, r12.y, r12.x
        min_pp r5.w, r12.z, r4.x
        add r12.xyz, -c10, v5
        mad_pp r7.xyz, r11, r5.w, r12
      else
        mov_pp r7.xyz, r5
      endif
      texldl_pp r5, r7, s1
      add r2.w, -r2.w, c11.w
      cmp_pp r2.w, -r2_abs.w, r5.w, c18.w
      mul_pp r2.w, r2.w, c11.x
      mul_pp r5.xyz, r5, r2.w
      mad r7.xyz, r3.w, r9, -r5
      mad_pp r10.xyz, c5.w, r7, r5
    endif
    mul_pp r5.xyz, r4.y, r10
    mad_pp r7.xyz, v1, -r1.w, c0
    dp3_pp r1.w, r7, r7
    add r2.w, -r1.w, c21.x
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r2.w, c21.y, r1.w
    mul_pp r7.xyz, r1.w, r7
    dp3_pp r1.w, r3, -r2
    dp3_sat_pp r2.x, r3, c0
    dp3_sat_pp r2.y, r3, r7
    dp3_sat_pp r2.z, c0, r7
    mul_pp r2.w, r2.z, r2.z
    dp2add_pp r2.w, r2.w, r4.z, c21.z
    add_pp r3.x, -r2.x, c18.w
    mul_pp r3.y, r3.x, r3.x
    mul_pp r3.y, r3.y, r3.y
    mul_pp r3.x, r3.x, r3.y
    mad_pp r3.x, r2.w, r3.x, c18.w
    add_pp r3.y, -r1_abs.w, c18.w
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    mad_pp r2.w, r2.w, r3.y, c18.w
    mul_pp r2.w, r2.w, r3.x
    mul_pp r2.w, r2.x, r2.w
    mul_pp r3.x, r4.z, r4.z
    mad_pp r3.z, r4.z, -r4.z, c18.w
    mad_pp r3.w, r1_abs.w, r3.z, r3.x
    mad_pp r3.z, r2.x, r3.z, r3.x
    mul_pp r1.w, r1_abs.w, r3.z
    mad r1.w, r2.x, r3.w, r1.w
    add r1.w, r1.w, c21.w
    rcp r1.w, r1.w
    mul_pp r1.w, r1.w, -c21.z
    mul_pp r3.z, r3.x, r3.x
    mad_pp r3.w, r2.y, r3.z, -r2.y
    mad_pp r2.y, r3.w, r2.y, c18.w
    mul r3.z, r3.z, c22.x
    mad r2.y, r2.y, r2.y, c22.y
    rcp r2.y, r2.y
    mul_pp r2.y, r2.y, r3.z
    mul r1.w, r1.w, r2.y
    mul_pp r2.y, r1.w, c22.z
    mad r1.w, r1.w, -c22.z, c22.w
    rsq r2.y, r2.y
    rcp_pp r2.y, r2.y
    cmp_pp r1.w, r1.w, c23.x, r2.y
    mul_pp r1.w, r2.x, r1.w
    mul_pp r2.x, r3.x, r4.z
    mad_pp r2.x, r2.x, -c23.y, c23.z
    dp3_pp r2.y, r0, r0
    cmp r2.y, -r2.y, c23.w, c23.z
    mul_pp r1.w, r1.w, r2.y
    add_pp r0.w, -r0.w, c18.w
    add_sat_pp r0.w, r0.w, c15.x
    mul_pp r3.xzw, r2.w, r6.xyyz
    mad_pp r3.xzw, r8.xyyz, r4.y, r3
    mul_pp r4.xyz, r6, r1.w
    add_pp r1.w, -r2.z, c18.w
    mul_pp r2.y, r1.w, r1.w
    mul_pp r2.y, r2.y, r2.y
    mul_pp r1.w, r1.w, r2.y
    lrp_pp r2.yzw, r1.w, c18.w, r0.xxyz
    mul_pp r2.yzw, r2, r4.xxyz
    mad_pp r1.xyz, r1, r3.xzww, r2.yzww
    mul_pp r2.xyz, r5, r2.x
    lrp_pp r4.xyz, r3.y, r0.w, r0
    mad_pp r0.xyz, r2, r4, r1
    texld r1, v0, s4
    mad_pp oC0.xyz, r1, c17, r0
    mov_pp oC0.w, c18.w

// approximately 174 instruction slots used (8 texture, 166 arithmetic)


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11":
// Stats: 153 math, 7 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_OcclusionMap" to slot 2
Set 2D Texture "_EmissionMap" to slot 3
Set CUBE Texture "unity_SpecCube0" to slot 4
Set CUBE Texture "unity_SpecCube1" to slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 6

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_input_ps linear v8.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: div r4.xy, v7.xyxx, v7.wwww
  13: sample r4.xyzw, r4.xyxx, t1.xyzw, s5
  14: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  15: add r3.w, -cb0[9].y, l(1.000000)
  16: mad r3.w, r5.y, cb0[9].y, r3.w
  17: add r4.y, -cb0[8].w, l(1.000000)
  18: dp3 r4.z, r3.xyzx, r2.xyzx
  19: add r4.z, r4.z, r4.z
  20: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  21: mul r4.xzw, r4.xxxx, cb0[2].xxyz
  22: eq r5.w, cb3[0].x, l(1.000000)
  23: if_nz r5.w
  24:   eq r5.w, cb3[0].y, l(1.000000)
  25:   mul r6.xyz, v8.yyyy, cb3[2].xyzx
  26:   mad r6.xyz, cb3[1].xyzx, v8.xxxx, r6.xyzx
  27:   mad r6.xyz, cb3[3].xyzx, v8.zzzz, r6.xyzx
  28:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  29:   movc r6.xyz, r5.wwww, r6.xyzx, v8.xyzx
  30:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  31:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  32:   mul r5.w, r6.y, l(0.250000)
  33:   mul r6.y, cb3[0].z, l(0.500000)
  34:   mad r7.x, -cb3[0].z, l(0.500000), l(0.250000)
  35:   max r5.w, r5.w, r6.y
  36:   min r6.x, r7.x, r5.w
  37:   sample r7.xyzw, r6.xzwx, t6.xyzw, s1
  38:   add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  39:   sample r8.xyzw, r8.xyzx, t6.xyzw, s1
  40:   add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  41:   sample r6.xyzw, r6.xyzx, t6.xyzw, s1
  42:   mov r2.w, l(1.000000)
  43:   dp4 r7.x, r7.xyzw, r2.xyzw
  44:   dp4 r7.y, r8.xyzw, r2.xyzw
  45:   dp4 r7.z, r6.xyzw, r2.xyzw
  46: else 
  47:   mov r2.w, l(1.000000)
  48:   dp4 r7.x, cb1[38].xyzw, r2.xyzw
  49:   dp4 r7.y, cb1[39].xyzw, r2.xyzw
  50:   dp4 r7.z, cb1[40].xyzw, r2.xyzw
  51: endif 
  52: add r6.xyz, r7.xyzx, v6.xyzx
  53: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  54: log r6.xyz, r6.xyzx
  55: mul r6.xyz, r6.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  56: exp r6.xyz, r6.xyzx
  57: mad r6.xyz, r6.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  58: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  59: lt r2.w, l(0.000000), cb2[2].w
  60: if_nz r2.w
  61:   dp3 r2.w, r5.xyzx, r5.xyzx
  62:   rsq r2.w, r2.w
  63:   mul r7.xyz, r2.wwww, r5.xyzx
  64:   add r8.xyz, -v8.xyzx, cb2[0].xyzx
  65:   div r8.xyz, r8.xyzx, r7.xyzx
  66:   add r9.xyz, -v8.xyzx, cb2[1].xyzx
  67:   div r9.xyz, r9.xyzx, r7.xyzx
  68:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  69:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  70:   min r2.w, r8.y, r8.x
  71:   min r2.w, r8.z, r2.w
  72:   add r8.xyz, v8.xyzx, -cb2[2].xyzx
  73:   mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
  74: else 
  75:   mov r7.xyz, r5.xyzx
  76: endif 
  77: mad r2.w, -r4.y, l(0.700000), l(1.700000)
  78: mul r2.w, r2.w, r4.y
  79: mul r2.w, r2.w, l(6.000000)
  80: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r2.w
  81: eq r5.w, cb2[3].w, l(1.000000)
  82: movc r5.w, r5.w, r7.w, l(1.000000)
  83: mul r5.w, r5.w, cb2[3].x
  84: mul r8.xyz, r7.xyzx, r5.wwww
  85: lt r6.w, cb2[1].w, l(0.999990)
  86: if_nz r6.w
  87:   lt r6.w, l(0.000000), cb2[6].w
  88:   if_nz r6.w
  89:     dp3 r6.w, r5.xyzx, r5.xyzx
  90:     rsq r6.w, r6.w
  91:     mul r9.xyz, r5.xyzx, r6.wwww
  92:     add r10.xyz, -v8.xyzx, cb2[4].xyzx
  93:     div r10.xyz, r10.xyzx, r9.xyzx
  94:     add r11.xyz, -v8.xyzx, cb2[5].xyzx
  95:     div r11.xyz, r11.xyzx, r9.xyzx
  96:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  97:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  98:     min r6.w, r10.y, r10.x
  99:     min r6.w, r10.z, r6.w
 100:     add r10.xyz, v8.xyzx, -cb2[6].xyzx
 101:     mad r5.xyz, r9.xyzx, r6.wwww, r10.xyzx
 102:   endif 
 103:   sample_l r9.xyzw, r5.xyzx, t5.xyzw, s0, r2.w
 104:   eq r2.w, cb2[7].w, l(1.000000)
 105:   movc r2.w, r2.w, r9.w, l(1.000000)
 106:   mul r2.w, r2.w, cb2[7].x
 107:   mul r5.xyz, r9.xyzx, r2.wwww
 108:   mad r7.xyz, r5.wwww, r7.xyzx, -r5.xyzx
 109:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
 110: endif 
 111: mul r5.xyz, r3.wwww, r8.xyzx
 112: mad r7.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
 113: dp3 r1.w, r7.xyzx, r7.xyzx
 114: max r1.w, r1.w, l(0.001000)
 115: rsq r1.w, r1.w
 116: mul r7.xyz, r1.wwww, r7.xyzx
 117: dp3 r1.w, r2.xyzx, -r3.xyzx
 118: dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
 119: dp3_sat r2.x, r2.xyzx, r7.xyzx
 120: dp3_sat r2.y, cb1[0].xyzx, r7.xyzx
 121: mul r2.z, r2.y, r2.y
 122: dp2 r2.z, r2.zzzz, r4.yyyy
 123: add r2.z, r2.z, l(-0.500000)
 124: add r3.x, -r2.w, l(1.000000)
 125: mul r3.y, r3.x, r3.x
 126: mul r3.y, r3.y, r3.y
 127: mul r3.x, r3.x, r3.y
 128: mad r3.x, r2.z, r3.x, l(1.000000)
 129: add r3.y, -|r1.w|, l(1.000000)
 130: mul r3.z, r3.y, r3.y
 131: mul r3.z, r3.z, r3.z
 132: mul r3.y, r3.y, r3.z
 133: mad r2.z, r2.z, r3.y, l(1.000000)
 134: mul r2.z, r2.z, r3.x
 135: mul r2.z, r2.w, r2.z
 136: mul r3.x, r4.y, r4.y
 137: mad r3.z, -r4.y, r4.y, l(1.000000)
 138: mad r5.w, |r1.w|, r3.z, r3.x
 139: mad r3.z, r2.w, r3.z, r3.x
 140: mul r1.w, |r1.w|, r3.z
 141: mad r1.w, r2.w, r5.w, r1.w
 142: add r1.w, r1.w, l(0.000010)
 143: div r1.w, l(0.500000), r1.w
 144: mul r3.z, r3.x, r3.x
 145: mad r5.w, r2.x, r3.z, -r2.x
 146: mad r2.x, r5.w, r2.x, l(1.000000)
 147: mul r3.z, r3.z, l(0.318310)
 148: mad r2.x, r2.x, r2.x, l(0.000000)
 149: div r2.x, r3.z, r2.x
 150: mul r1.w, r1.w, r2.x
 151: mul r1.w, r1.w, l(3.141593)
 152: max r1.w, r1.w, l(0.000100)
 153: sqrt r1.w, r1.w
 154: mul r1.w, r2.w, r1.w
 155: mul r2.x, r3.x, r4.y
 156: mad r2.x, -r2.x, l(0.280000), l(1.000000)
 157: dp3 r2.w, r0.xyzx, r0.xyzx
 158: ne r2.w, r2.w, l(0.000000)
 159: and r2.w, r2.w, l(0x3f800000)
 160: mul r1.w, r1.w, r2.w
 161: add r0.w, -r0.w, cb0[8].w
 162: add_sat r0.w, r0.w, l(1.000000)
 163: mul r7.xyz, r2.zzzz, r4.xzwx
 164: mad r3.xzw, r6.xxyz, r3.wwww, r7.xxyz
 165: mul r4.xyz, r4.xzwx, r1.wwww
 166: add r1.w, -r2.y, l(1.000000)
 167: mul r2.y, r1.w, r1.w
 168: mul r2.y, r2.y, r2.y
 169: mul r1.w, r1.w, r2.y
 170: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 171: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 172: mul r2.yzw, r2.yyzw, r4.xxyz
 173: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 174: mul r2.xyz, r5.xyzx, r2.xxxx
 175: add r3.xzw, -r0.xxyz, r0.wwww
 176: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 177: mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 178: sample r1.xyzw, v1.xyxx, t3.xyzw, s4
 179: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
 180: mov o0.w, l(1.000000)
 181: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL VERTEXLIGHT_ON 
-- Vertex shader for "d3d9":
// Stats: 67 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 4
Matrix4x3 unity_ObjectToWorld at 8
Matrix4x3 unity_WorldToObject at 11
Vector4 _DetailAlbedoMap_ST at 24
Vector4 _MainTex_ST at 23
Float _UVSec at 25
Vector4 _WorldSpaceCameraPos at 14
Vector4 unity_4LightAtten0 at 18
Vector4 unity_4LightPosX0 at 15
Vector4 unity_4LightPosY0 at 16
Vector4 unity_4LightPosZ0 at 17
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 21
Vector4 unity_SHBg at 20
Vector4 unity_SHBr at 19
Vector4 unity_SHC at 22

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   glstate_matrix_mvp   c4       4
//   unity_ObjectToWorld  c8       3
//   unity_WorldToObject  c11      3
//   _WorldSpaceCameraPos c14      1
//   unity_4LightPosX0    c15      1
//   unity_4LightPosY0    c16      1
//   unity_4LightPosZ0    c17      1
//   unity_4LightAtten0   c18      1
//   unity_SHBr           c19      1
//   unity_SHBg           c20      1
//   unity_SHBb           c21      1
//   unity_SHC            c22      1
//   _MainTex_ST          c23      1
//   _DetailAlbedoMap_ST  c24      1
//   _UVSec               c25      1
//

    vs_3_0
    def c26, 1, 0, 9.99999997e-007, 0.0125228781
    def c27, 0.305306017, 0.682171106, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord8 o7.xyz
    mad r0, v0.xyzx, c26.xxxy, c26.yyyx
    dp4 r5.x, c4, r0
    dp4 r5.y, c5, r0
    dp4 r5.z, c6, r0
    dp4 r5.w, c7, r0
    mad o1.xy, v2, c23, c23.zwzw
    abs r0.x, c25.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c24.xyxy, c24
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c14
    add r1, -r0.z, c17
    mov o7.xyz, r0
    add r2, -r0.x, c15
    add r0, -r0.y, c16
    mul r3.xyz, c12, v1.y
    mad r3.xyz, v1.x, c11, r3
    mad r3.xyz, v1.z, c13, r3
    nrm r4.xyz, r3
    mul r3, r0, r4.y
    mul r0, r0, r0
    mad r0, r2, r2, r0
    mad r2, r2, r4.x, r3
    mad r2, r1, r4.z, r2
    mad r0, r1, r1, r0
    max r0, r0, c26.z
    rsq r1.x, r0.x
    rsq r1.y, r0.y
    rsq r1.z, r0.z
    rsq r1.w, r0.w
    mov r3.x, c26.x
    mad r0, r0, c18, r3.x
    mul r1, r1, r2
    max r1, r1, c26.y
    rcp r2.x, r0.x
    rcp r2.y, r0.y
    rcp r2.z, r0.z
    rcp r2.w, r0.w
    mul r0, r1, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mad r1.xyz, r0, c27.x, c27.y
    mad r1.xyz, r0, r1, c26.w
    mul r0.w, r4.y, r4.y
    mad r0.w, r4.x, r4.x, -r0.w
    mul r2, r4.yzzx, r4.xyzz
    mov o5.xyz, r4
    dp4 r3.x, c19, r2
    dp4 r3.y, c20, r2
    dp4 r3.z, c21, r2
    mad r2.xyz, c22, r0.w, r3
    mad o6.xyz, r0, r1, r2
    mov o3, c26.y
    mov o4, c26.y
    mov o5.w, c26.y
    mov o6.w, c26.y
    mad o0.xy, r5.w, c255, r5
    mov o0.zw, r5

// approximately 66 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 48 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o3.xyzw, l(0,0,0,0)
  14: mov o4.xyzw, l(0,0,0,0)
  15: mov o5.w, l(0)
  16: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  17: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  18: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: rsq r0.w, r0.w
  21: mul r1.xyz, r0.wwww, r1.xyzx
  22: mov o5.xyz, r1.xyzx
  23: add r2.xyzw, -r0.yyyy, cb2[3].xyzw
  24: mul r3.xyzw, r1.yyyy, r2.xyzw
  25: mul r2.xyzw, r2.xyzw, r2.xyzw
  26: add r4.xyzw, -r0.xxxx, cb2[2].xyzw
  27: mad r3.xyzw, r4.xyzw, r1.xxxx, r3.xyzw
  28: mad r2.xyzw, r4.xyzw, r4.xyzw, r2.xyzw
  29: add r4.xyzw, -r0.zzzz, cb2[4].xyzw
  30: mov o7.xyz, r0.xyzx
  31: mad r0.xyzw, r4.xyzw, r1.zzzz, r3.xyzw
  32: mad r2.xyzw, r4.xyzw, r4.xyzw, r2.xyzw
  33: max r2.xyzw, r2.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  34: rsq r3.xyzw, r2.xyzw
  35: mad r2.xyzw, r2.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  36: div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
  37: mul r0.xyzw, r0.xyzw, r3.xyzw
  38: max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  39: mul r0.xyzw, r2.xyzw, r0.xyzw
  40: mul r2.xyz, r0.yyyy, cb2[7].xyzx
  41: mad r2.xyz, cb2[6].xyzx, r0.xxxx, r2.xyzx
  42: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r2.xyzx
  43: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  44: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  45: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  46: mul r0.w, r1.y, r1.y
  47: mad r0.w, r1.x, r1.x, -r0.w
  48: mul r1.xyzw, r1.yzzx, r1.xyzz
  49: dp4 r3.x, cb2[41].xyzw, r1.xyzw
  50: dp4 r3.y, cb2[42].xyzw, r1.xyzw
  51: dp4 r3.z, cb2[43].xyzw, r1.xyzw
  52: mad r1.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  53: mad o6.xyz, r0.xyzx, r2.xyzx, r1.xyzx
  54: mov o6.w, l(0)
  55: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
-- Vertex shader for "d3d9":
// Stats: 73 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 4
Matrix4x3 unity_ObjectToWorld at 8
Matrix4x3 unity_WorldToObject at 11
Vector4 _DetailAlbedoMap_ST at 25
Vector4 _MainTex_ST at 24
Vector4 _ProjectionParams at 15
Float _UVSec at 26
Vector4 _WorldSpaceCameraPos at 14
Vector4 unity_4LightAtten0 at 19
Vector4 unity_4LightPosX0 at 16
Vector4 unity_4LightPosY0 at 17
Vector4 unity_4LightPosZ0 at 18
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 22
Vector4 unity_SHBg at 21
Vector4 unity_SHBr at 20
Vector4 unity_SHC at 23

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   glstate_matrix_mvp   c4       4
//   unity_ObjectToWorld  c8       3
//   unity_WorldToObject  c11      3
//   _WorldSpaceCameraPos c14      1
//   _ProjectionParams    c15      1
//   unity_4LightPosX0    c16      1
//   unity_4LightPosY0    c17      1
//   unity_4LightPosZ0    c18      1
//   unity_4LightAtten0   c19      1
//   unity_SHBr           c20      1
//   unity_SHBg           c21      1
//   unity_SHBb           c22      1
//   unity_SHC            c23      1
//   _MainTex_ST          c24      1
//   _DetailAlbedoMap_ST  c25      1
//   _UVSec               c26      1
//

    vs_3_0
    def c27, 1, 0, 0.5, 9.99999997e-007
    def c28, 0.305306017, 0.682171106, 0.0125228781, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord8 o8.xyz
    mad o1.xy, v2, c24, c24.zwzw
    abs r0.x, c26.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c25.xyxy, c25
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c14
    mad r1, v0.xyzx, c27.xxxy, c27.yyyx
    dp4 r2.y, c5, r1
    mul r0.w, r2.y, c15.x
    mul r3.w, r0.w, c27.z
    dp4 r2.x, c4, r1
    dp4 r2.w, c7, r1
    dp4 r2.z, c6, r1
    mul r3.xz, r2.xyww, c27.z
    mov r5, r2
    mov o7.zw, r2
    add o7.xy, r3.z, r3.xwzw
    add r1, -r0.z, c18
    mov o8.xyz, r0
    add r2, -r0.x, c16
    add r0, -r0.y, c17
    mul r3.xyz, c12, v1.y
    mad r3.xyz, v1.x, c11, r3
    mad r3.xyz, v1.z, c13, r3
    nrm r4.xyz, r3
    mul r3, r0, r4.y
    mul r0, r0, r0
    mad r0, r2, r2, r0
    mad r2, r2, r4.x, r3
    mad r2, r1, r4.z, r2
    mad r0, r1, r1, r0
    max r0, r0, c27.w
    rsq r1.x, r0.x
    rsq r1.y, r0.y
    rsq r1.z, r0.z
    rsq r1.w, r0.w
    mov r3.x, c27.x
    mad r0, r0, c19, r3.x
    mul r1, r1, r2
    max r1, r1, c27.y
    rcp r2.x, r0.x
    rcp r2.y, r0.y
    rcp r2.z, r0.z
    rcp r2.w, r0.w
    mul r0, r1, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mad r1.xyz, r0, c28.x, c28.y
    mad r1.xyz, r0, r1, c28.z
    mul r0.w, r4.y, r4.y
    mad r0.w, r4.x, r4.x, -r0.w
    mul r2, r4.yzzx, r4.xyzz
    mov o5.xyz, r4
    dp4 r3.x, c20, r2
    dp4 r3.y, c21, r2
    dp4 r3.z, c22, r2
    mad r2.xyz, c23, r0.w, r3
    mad o6.xyz, r0, r1, r2
    mov o3, c27.y
    mov o4, c27.y
    mov o5.w, c27.y
    mov o6.w, c27.y
    mad o0.xy, r5.w, c255, r5
    mov o0.zw, r5

// approximately 72 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 51 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.xyz
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[9].w, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
   8: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mov o5.w, l(0)
  17: dp3 r2.x, v1.xyzx, cb3[16].xyzx
  18: dp3 r2.y, v1.xyzx, cb3[17].xyzx
  19: dp3 r2.z, v1.xyzx, cb3[18].xyzx
  20: dp3 r1.w, r2.xyzx, r2.xyzx
  21: rsq r1.w, r1.w
  22: mul r2.xyz, r1.wwww, r2.xyzx
  23: mov o5.xyz, r2.xyzx
  24: add r3.xyzw, -r1.yyyy, cb2[3].xyzw
  25: mul r4.xyzw, r2.yyyy, r3.xyzw
  26: mul r3.xyzw, r3.xyzw, r3.xyzw
  27: add r5.xyzw, -r1.xxxx, cb2[2].xyzw
  28: mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
  29: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  30: add r5.xyzw, -r1.zzzz, cb2[4].xyzw
  31: mov o8.xyz, r1.xyzx
  32: mad r1.xyzw, r5.xyzw, r2.zzzz, r4.xyzw
  33: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  34: max r3.xyzw, r3.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  35: rsq r4.xyzw, r3.xyzw
  36: mad r3.xyzw, r3.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  37: div r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzw
  38: mul r1.xyzw, r1.xyzw, r4.xyzw
  39: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  40: mul r1.xyzw, r3.xyzw, r1.xyzw
  41: mul r3.xyz, r1.yyyy, cb2[7].xyzx
  42: mad r3.xyz, cb2[6].xyzx, r1.xxxx, r3.xyzx
  43: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r3.xyzx
  44: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  45: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  46: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  47: mul r1.w, r2.y, r2.y
  48: mad r1.w, r2.x, r2.x, -r1.w
  49: mul r2.xyzw, r2.yzzx, r2.xyzz
  50: dp4 r4.x, cb2[41].xyzw, r2.xyzw
  51: dp4 r4.y, cb2[42].xyzw, r2.xyzw
  52: dp4 r4.z, cb2[43].xyzw, r2.xyzw
  53: mad r2.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  54: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  55: mov o6.w, l(0)
  56: mul r0.y, r0.y, cb1[5].x
  57: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  58: mov o7.zw, r0.zzzw
  59: add o7.xy, r1.zzzz, r1.xwxx
  60: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d9":
// Stats: 37 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 16
Vector4 _MainTex_ST at 15
Float _UVSec at 17
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHBb at 13
Vector4 unity_SHBg at 12
Vector4 unity_SHBr at 11
Vector4 unity_SHC at 14

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       3
//   unity_WorldToObject  c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord8 o7.xyz
    mad r0, v0.xyzx, c18.xxxy, c18.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.y
    mov o4, c18.y
    mov o5.w, c18.y
    mov o6.w, c18.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 25 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  17: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  18: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul r0.xyz, r0.wwww, r0.xyzx
  22: mov o5.xyz, r0.xyzx
  23: mov o5.w, l(0)
  24: mul r0.w, r0.y, r0.y
  25: mad r0.w, r0.x, r0.x, -r0.w
  26: mul r1.xyzw, r0.yzzx, r0.xyzz
  27: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  28: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  29: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  30: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  31: mov o6.w, l(0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN _EMISSION 
-- Vertex shader for "d3d9":
// Stats: 43 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Vector4 _ProjectionParams at 11
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHBb at 14
Vector4 unity_SHBg at 13
Vector4 unity_SHBr at 12
Vector4 unity_SHC at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       3
//   unity_WorldToObject  c7       3
//   _WorldSpaceCameraPos c10      1
//   _ProjectionParams    c11      1
//   unity_SHBr           c12      1
//   unity_SHBg           c13      1
//   unity_SHBb           c14      1
//   unity_SHC            c15      1
//   _MainTex_ST          c16      1
//   _DetailAlbedoMap_ST  c17      1
//   _UVSec               c18      1
//

    vs_3_0
    def c19, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord8 o8.xyz
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o8.xyz, r0
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r1.y, c1, r0
    mul r2.x, r1.y, c11.x
    mul r2.w, r2.x, c19.z
    dp4 r1.x, c0, r0
    dp4 r1.w, c3, r0
    dp4 r1.z, c2, r0
    mul r2.xz, r1.xyww, c19.z
    mov r3, r1
    mov o7.zw, r1
    add o7.xy, r2.z, r2.xwzw
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c12, r2
    dp4 r1.y, c13, r2
    dp4 r1.z, c14, r2
    mad o6.xyz, c15, r0.x, r1
    mov o3, c19.y
    mov o4, c19.y
    mov o5.w, c19.y
    mov o6.w, c19.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 28 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[9].w, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
   8: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mov o8.xyz, r1.xyzx
  15: mov o3.xyzw, l(0,0,0,0)
  16: mov o4.xyzw, l(0,0,0,0)
  17: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  18: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  19: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  20: dp3 r1.w, r1.xyzx, r1.xyzx
  21: rsq r1.w, r1.w
  22: mul r1.xyz, r1.wwww, r1.xyzx
  23: mov o5.xyz, r1.xyzx
  24: mov o5.w, l(0)
  25: mul r1.w, r1.y, r1.y
  26: mad r1.w, r1.x, r1.x, -r1.w
  27: mul r2.xyzw, r1.yzzx, r1.xyzz
  28: dp4 r1.x, cb2[41].xyzw, r2.xyzw
  29: dp4 r1.y, cb2[42].xyzw, r2.xyzw
  30: dp4 r1.z, cb2[43].xyzw, r2.xyzw
  31: mad o6.xyz, cb2[44].xyzx, r1.wwww, r1.xyzx
  32: mov o6.w, l(0)
  33: mul r0.y, r0.y, cb1[5].x
  34: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  35: mov o7.zw, r0.zzzw
  36: add o7.xy, r1.zzzz, r1.xwxx
  37: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL _EMISSION VERTEXLIGHT_ON 
-- Vertex shader for "d3d9":
// Stats: 67 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 4
Matrix4x3 unity_ObjectToWorld at 8
Matrix4x3 unity_WorldToObject at 11
Vector4 _DetailAlbedoMap_ST at 24
Vector4 _MainTex_ST at 23
Float _UVSec at 25
Vector4 _WorldSpaceCameraPos at 14
Vector4 unity_4LightAtten0 at 18
Vector4 unity_4LightPosX0 at 15
Vector4 unity_4LightPosY0 at 16
Vector4 unity_4LightPosZ0 at 17
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 21
Vector4 unity_SHBg at 20
Vector4 unity_SHBr at 19
Vector4 unity_SHC at 22

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   glstate_matrix_mvp   c4       4
//   unity_ObjectToWorld  c8       3
//   unity_WorldToObject  c11      3
//   _WorldSpaceCameraPos c14      1
//   unity_4LightPosX0    c15      1
//   unity_4LightPosY0    c16      1
//   unity_4LightPosZ0    c17      1
//   unity_4LightAtten0   c18      1
//   unity_SHBr           c19      1
//   unity_SHBg           c20      1
//   unity_SHBb           c21      1
//   unity_SHC            c22      1
//   _MainTex_ST          c23      1
//   _DetailAlbedoMap_ST  c24      1
//   _UVSec               c25      1
//

    vs_3_0
    def c26, 1, 0, 9.99999997e-007, 0.0125228781
    def c27, 0.305306017, 0.682171106, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord8 o7.xyz
    mad r0, v0.xyzx, c26.xxxy, c26.yyyx
    dp4 r5.x, c4, r0
    dp4 r5.y, c5, r0
    dp4 r5.z, c6, r0
    dp4 r5.w, c7, r0
    mad o1.xy, v2, c23, c23.zwzw
    abs r0.x, c25.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c24.xyxy, c24
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c14
    add r1, -r0.z, c17
    mov o7.xyz, r0
    add r2, -r0.x, c15
    add r0, -r0.y, c16
    mul r3.xyz, c12, v1.y
    mad r3.xyz, v1.x, c11, r3
    mad r3.xyz, v1.z, c13, r3
    nrm r4.xyz, r3
    mul r3, r0, r4.y
    mul r0, r0, r0
    mad r0, r2, r2, r0
    mad r2, r2, r4.x, r3
    mad r2, r1, r4.z, r2
    mad r0, r1, r1, r0
    max r0, r0, c26.z
    rsq r1.x, r0.x
    rsq r1.y, r0.y
    rsq r1.z, r0.z
    rsq r1.w, r0.w
    mov r3.x, c26.x
    mad r0, r0, c18, r3.x
    mul r1, r1, r2
    max r1, r1, c26.y
    rcp r2.x, r0.x
    rcp r2.y, r0.y
    rcp r2.z, r0.z
    rcp r2.w, r0.w
    mul r0, r1, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mad r1.xyz, r0, c27.x, c27.y
    mad r1.xyz, r0, r1, c26.w
    mul r0.w, r4.y, r4.y
    mad r0.w, r4.x, r4.x, -r0.w
    mul r2, r4.yzzx, r4.xyzz
    mov o5.xyz, r4
    dp4 r3.x, c19, r2
    dp4 r3.y, c20, r2
    dp4 r3.z, c21, r2
    mad r2.xyz, c22, r0.w, r3
    mad o6.xyz, r0, r1, r2
    mov o3, c26.y
    mov o4, c26.y
    mov o5.w, c26.y
    mov o6.w, c26.y
    mad o0.xy, r5.w, c255, r5
    mov o0.zw, r5

// approximately 66 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 48 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 8   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o3.xyzw, l(0,0,0,0)
  14: mov o4.xyzw, l(0,0,0,0)
  15: mov o5.w, l(0)
  16: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  17: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  18: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: rsq r0.w, r0.w
  21: mul r1.xyz, r0.wwww, r1.xyzx
  22: mov o5.xyz, r1.xyzx
  23: add r2.xyzw, -r0.yyyy, cb2[3].xyzw
  24: mul r3.xyzw, r1.yyyy, r2.xyzw
  25: mul r2.xyzw, r2.xyzw, r2.xyzw
  26: add r4.xyzw, -r0.xxxx, cb2[2].xyzw
  27: mad r3.xyzw, r4.xyzw, r1.xxxx, r3.xyzw
  28: mad r2.xyzw, r4.xyzw, r4.xyzw, r2.xyzw
  29: add r4.xyzw, -r0.zzzz, cb2[4].xyzw
  30: mov o7.xyz, r0.xyzx
  31: mad r0.xyzw, r4.xyzw, r1.zzzz, r3.xyzw
  32: mad r2.xyzw, r4.xyzw, r4.xyzw, r2.xyzw
  33: max r2.xyzw, r2.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  34: rsq r3.xyzw, r2.xyzw
  35: mad r2.xyzw, r2.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  36: div r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
  37: mul r0.xyzw, r0.xyzw, r3.xyzw
  38: max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  39: mul r0.xyzw, r2.xyzw, r0.xyzw
  40: mul r2.xyz, r0.yyyy, cb2[7].xyzx
  41: mad r2.xyz, cb2[6].xyzx, r0.xxxx, r2.xyzx
  42: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r2.xyzx
  43: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  44: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  45: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  46: mul r0.w, r1.y, r1.y
  47: mad r0.w, r1.x, r1.x, -r0.w
  48: mul r1.xyzw, r1.yzzx, r1.xyzz
  49: dp4 r3.x, cb2[41].xyzw, r1.xyzw
  50: dp4 r3.y, cb2[42].xyzw, r1.xyzw
  51: dp4 r3.z, cb2[43].xyzw, r1.xyzw
  52: mad r1.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  53: mad o6.xyz, r0.xyzx, r2.xyzx, r1.xyzx
  54: mov o6.w, l(0)
  55: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN _EMISSION VERTEXLIGHT_ON 
-- Vertex shader for "d3d9":
// Stats: 73 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 4
Matrix4x3 unity_ObjectToWorld at 8
Matrix4x3 unity_WorldToObject at 11
Vector4 _DetailAlbedoMap_ST at 25
Vector4 _MainTex_ST at 24
Vector4 _ProjectionParams at 15
Float _UVSec at 26
Vector4 _WorldSpaceCameraPos at 14
Vector4 unity_4LightAtten0 at 19
Vector4 unity_4LightPosX0 at 16
Vector4 unity_4LightPosY0 at 17
Vector4 unity_4LightPosZ0 at 18
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 22
Vector4 unity_SHBg at 21
Vector4 unity_SHBr at 20
Vector4 unity_SHC at 23

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   glstate_matrix_mvp   c4       4
//   unity_ObjectToWorld  c8       3
//   unity_WorldToObject  c11      3
//   _WorldSpaceCameraPos c14      1
//   _ProjectionParams    c15      1
//   unity_4LightPosX0    c16      1
//   unity_4LightPosY0    c17      1
//   unity_4LightPosZ0    c18      1
//   unity_4LightAtten0   c19      1
//   unity_SHBr           c20      1
//   unity_SHBg           c21      1
//   unity_SHBb           c22      1
//   unity_SHC            c23      1
//   _MainTex_ST          c24      1
//   _DetailAlbedoMap_ST  c25      1
//   _UVSec               c26      1
//

    vs_3_0
    def c27, 1, 0, 0.5, 9.99999997e-007
    def c28, 0.305306017, 0.682171106, 0.0125228781, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord8 o8.xyz
    mad o1.xy, v2, c24, c24.zwzw
    abs r0.x, c26.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c25.xyxy, c25
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c14
    mad r1, v0.xyzx, c27.xxxy, c27.yyyx
    dp4 r2.y, c5, r1
    mul r0.w, r2.y, c15.x
    mul r3.w, r0.w, c27.z
    dp4 r2.x, c4, r1
    dp4 r2.w, c7, r1
    dp4 r2.z, c6, r1
    mul r3.xz, r2.xyww, c27.z
    mov r5, r2
    mov o7.zw, r2
    add o7.xy, r3.z, r3.xwzw
    add r1, -r0.z, c18
    mov o8.xyz, r0
    add r2, -r0.x, c16
    add r0, -r0.y, c17
    mul r3.xyz, c12, v1.y
    mad r3.xyz, v1.x, c11, r3
    mad r3.xyz, v1.z, c13, r3
    nrm r4.xyz, r3
    mul r3, r0, r4.y
    mul r0, r0, r0
    mad r0, r2, r2, r0
    mad r2, r2, r4.x, r3
    mad r2, r1, r4.z, r2
    mad r0, r1, r1, r0
    max r0, r0, c27.w
    rsq r1.x, r0.x
    rsq r1.y, r0.y
    rsq r1.z, r0.z
    rsq r1.w, r0.w
    mov r3.x, c27.x
    mad r0, r0, c19, r3.x
    mul r1, r1, r2
    max r1, r1, c27.y
    rcp r2.x, r0.x
    rcp r2.y, r0.y
    rcp r2.z, r0.z
    rcp r2.w, r0.w
    mul r0, r1, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mad r1.xyz, r0, c28.x, c28.y
    mad r1.xyz, r0, r1, c28.z
    mul r0.w, r4.y, r4.y
    mad r0.w, r4.x, r4.x, -r0.w
    mul r2, r4.yzzx, r4.xyzz
    mov o5.xyz, r4
    dp4 r3.x, c20, r2
    dp4 r3.y, c21, r2
    dp4 r3.z, c22, r2
    mad r2.xyz, c23, r0.w, r3
    mad o6.xyz, r0, r1, r2
    mov o3, c27.y
    mov o4, c27.y
    mov o5.w, c27.y
    mov o6.w, c27.y
    mad o0.xy, r5.w, c255, r5
    mov o0.zw, r5

// approximately 72 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 51 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.xyz
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[9].w, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
   8: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: mov o5.w, l(0)
  17: dp3 r2.x, v1.xyzx, cb3[16].xyzx
  18: dp3 r2.y, v1.xyzx, cb3[17].xyzx
  19: dp3 r2.z, v1.xyzx, cb3[18].xyzx
  20: dp3 r1.w, r2.xyzx, r2.xyzx
  21: rsq r1.w, r1.w
  22: mul r2.xyz, r1.wwww, r2.xyzx
  23: mov o5.xyz, r2.xyzx
  24: add r3.xyzw, -r1.yyyy, cb2[3].xyzw
  25: mul r4.xyzw, r2.yyyy, r3.xyzw
  26: mul r3.xyzw, r3.xyzw, r3.xyzw
  27: add r5.xyzw, -r1.xxxx, cb2[2].xyzw
  28: mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
  29: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  30: add r5.xyzw, -r1.zzzz, cb2[4].xyzw
  31: mov o8.xyz, r1.xyzx
  32: mad r1.xyzw, r5.xyzw, r2.zzzz, r4.xyzw
  33: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  34: max r3.xyzw, r3.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  35: rsq r4.xyzw, r3.xyzw
  36: mad r3.xyzw, r3.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  37: div r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzw
  38: mul r1.xyzw, r1.xyzw, r4.xyzw
  39: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  40: mul r1.xyzw, r3.xyzw, r1.xyzw
  41: mul r3.xyz, r1.yyyy, cb2[7].xyzx
  42: mad r3.xyz, cb2[6].xyzx, r1.xxxx, r3.xyzx
  43: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r3.xyzx
  44: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  45: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  46: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  47: mul r1.w, r2.y, r2.y
  48: mad r1.w, r2.x, r2.x, -r1.w
  49: mul r2.xyzw, r2.yzzx, r2.xyzz
  50: dp4 r4.x, cb2[41].xyzw, r2.xyzw
  51: dp4 r4.y, cb2[42].xyzw, r2.xyzw
  52: dp4 r4.z, cb2[43].xyzw, r2.xyzw
  53: mad r2.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  54: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  55: mov o6.w, l(0)
  56: mul r0.y, r0.y, cb1[5].x
  57: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  58: mov o7.zw, r0.zzzw
  59: add o7.xy, r1.zzzz, r1.xwxx
  60: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

 }


 // Stats for Vertex shader:
 //         d3d9: 34 avg math (29..38)
 //        d3d11: 27 avg math (19..31)
 // Stats for Fragment shader:
 //         d3d9: 88 avg math (78..100), 3 avg texture (1..7)
 //        d3d11: 78 avg math (69..89), 3 avg texture (1..7)
 Pass {
  Name "FORWARD_DELTA"
  Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite Off
  Blend [_SrcBlend] One
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: POINT 
-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToLight at 11
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 14
Vector4 _WorldSpaceLightPos0 at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       4
//   unity_WorldToObject  c8       3
//   unity_WorldToLight   c11      3
//   _WorldSpaceCameraPos c14      1
//   _WorldSpaceLightPos0 c15      1
//   _MainTex_ST          c16      1
//   _DetailAlbedoMap_ST  c17      1
//   _UVSec               c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul o5.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    mad r0.xyz, r0, -c15.w, c15
    mov r0.w, c19.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 32 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 83 math, 2 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   _LightColor0   c0       1
//   _Color         c1       1
//   _Metallic      c2       1
//   _Glossiness    c3       1
//   _MainTex       s0       1
//   _LightTexture0 s1       1
//

    ps_3_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c6, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c7, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_2d s1
    nrm_pp r0.xyz, v1
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    mad_pp r2.xyz, r1, r0.w, -r0
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c5.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c5.y, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r3, r1
    dp3_pp r0.x, r3, -r0
    mov r2, c4
    add_pp r0.y, r2.w, -c3.x
    mul_pp r0.z, r0.y, r0.y
    mul_pp r1.y, r0.z, r0.z
    mad_pp r1.z, r0.w, r1.y, -r0.w
    mad_pp r0.w, r1.z, r0.w, c4.w
    mad r0.w, r0.w, r0.w, c6.y
    rcp r0.w, r0.w
    mul r1.y, r1.y, c6.x
    mul_pp r0.w, r0.w, r1.y
    mad_pp r1.y, r0.y, -r0.y, c4.w
    mad_pp r1.z, r0_abs.x, r1.y, r0.z
    mad_pp r0.z, r1.x, r1.y, r0.z
    mul_pp r0.z, r0.z, r0_abs.x
    add_pp r0.x, -r0_abs.x, c4.w
    mad r0.z, r1.x, r1.z, r0.z
    add r0.z, r0.z, c5.w
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, -c5.z
    mul r0.z, r0.w, r0.z
    mul_pp r0.w, r0.z, c6.z
    mad r0.z, r0.z, -c6.z, c6.w
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    cmp_pp r0.z, r0.z, c7.x, r0.w
    mul_pp r0.z, r1.x, r0.z
    texld r3, v0, s0
    mad_pp r4.xyz, c1, r3, r2.x
    mul_pp r3.xyz, r3, c1
    mad_pp r2.xyw, c2.x, r4.xyzz, r2.y
    dp3_pp r0.w, r2.xyww, r2.xyww
    cmp r0.w, -r0.w, c7.y, c7.z
    mul_pp r0.z, r0.w, r0.z
    dp3 r0.w, v5, v5
    texld_pp r4, r0.w, s1
    mul_pp r4.xyz, r4.x, c0
    mul_pp r5.xyz, r0.z, r4
    add_pp r0.z, -r1.w, c4.w
    mul_pp r0.w, r1.w, r1.w
    dp2add_pp r0.y, r0.w, r0.y, c5.z
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    lrp_pp r1.yzw, r0.z, c4.w, r2.xxyw
    mul_pp r1.yzw, r1, r5.xxyz
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mad_pp r0.x, r0.y, r0.x, c4.w
    add_pp r0.z, -r1.x, c4.w
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.y, r0.y, r0.z, c4.w
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c2.x, -r2.z, r2.z
    mul_pp r2.xyz, r0.w, r3
    mad_pp oC0.xyz, r2, r0, r1.yzww
    mov_pp oC0.w, c4.w

// approximately 84 instruction slots used (2 texture, 82 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 27 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov r0.w, l(0)
  15: mov o3.xyzw, r0.wwwx
  16: mov o4.xyzw, r0.wwwy
  17: mov o5.w, r0.z
  18: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  19: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  20: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  21: dp3 r0.w, r0.xyzx, r0.xyzx
  22: rsq r0.w, r0.w
  23: mul o5.xyz, r0.wwww, r0.xyzx
  24: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  25: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  26: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  27: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  28: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  29: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  30: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  31: mad o6.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 74 math, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v2.xyzx
   3: mov r1.x, v3.w
   4: mov r1.y, v4.w
   5: mov r1.z, v5.w
   6: dp3 r0.w, r1.xyzx, r1.xyzx
   7: rsq r0.w, r0.w
   8: mad r2.xyz, r1.xyzx, r0.wwww, -r0.xyzx
   9: mul r1.xyz, r0.wwww, r1.xyzx
  10: dp3 r0.w, r2.xyzx, r2.xyzx
  11: max r0.w, r0.w, l(0.001000)
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, v5.xyzx, v5.xyzx
  15: rsq r0.w, r0.w
  16: mul r3.xyz, r0.wwww, v5.xyzx
  17: dp3_sat r0.w, r3.xyzx, r2.xyzx
  18: dp3_sat r1.w, r1.xyzx, r2.xyzx
  19: dp3_sat r1.x, r3.xyzx, r1.xyzx
  20: dp3 r0.x, r3.xyzx, -r0.xyzx
  21: add r0.y, -cb0[8].w, l(1.000000)
  22: mul r0.z, r0.y, r0.y
  23: mul r1.y, r0.z, r0.z
  24: mad r1.z, r0.w, r1.y, -r0.w
  25: mad r0.w, r1.z, r0.w, l(1.000000)
  26: mad r0.w, r0.w, r0.w, l(0.000000)
  27: mul r1.y, r1.y, l(0.318310)
  28: div r0.w, r1.y, r0.w
  29: mad r1.y, -r0.y, r0.y, l(1.000000)
  30: mad r1.z, |r0.x|, r1.y, r0.z
  31: mad r0.z, r1.x, r1.y, r0.z
  32: mul r0.z, r0.z, |r0.x|
  33: add r0.x, -|r0.x|, l(1.000000)
  34: mad r0.z, r1.x, r1.z, r0.z
  35: add r0.z, r0.z, l(0.000010)
  36: div r0.z, l(0.500000), r0.z
  37: mul r0.z, r0.w, r0.z
  38: mul r0.z, r0.z, l(3.141593)
  39: max r0.z, r0.z, l(0.000100)
  40: sqrt r0.z, r0.z
  41: mul r0.z, r1.x, r0.z
  42: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
  43: mad r3.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  44: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  45: mad r3.xyz, cb0[8].zzzz, r3.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  46: dp3 r0.w, r3.xyzx, r3.xyzx
  47: ne r0.w, r0.w, l(0.000000)
  48: and r0.w, r0.w, l(0x3f800000)
  49: mul r0.z, r0.w, r0.z
  50: dp3 r0.w, v6.xyzx, v6.xyzx
  51: sample r4.xyzw, r0.wwww, t1.xyzw, s1
  52: mul r4.xyz, r4.xxxx, cb0[2].xyzx
  53: mul r5.xyz, r0.zzzz, r4.xyzx
  54: add r0.z, -r1.w, l(1.000000)
  55: mul r0.w, r1.w, r1.w
  56: dp2 r0.y, r0.wwww, r0.yyyy
  57: add r0.y, r0.y, l(-0.500000)
  58: mul r0.w, r0.z, r0.z
  59: mul r0.w, r0.w, r0.w
  60: mul r0.z, r0.z, r0.w
  61: add r1.yzw, -r3.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
  62: mad r1.yzw, r1.yyzw, r0.zzzz, r3.xxyz
  63: mul r1.yzw, r1.yyzw, r5.xxyz
  64: mul r0.z, r0.x, r0.x
  65: mul r0.z, r0.z, r0.z
  66: mul r0.x, r0.x, r0.z
  67: mad r0.x, r0.y, r0.x, l(1.000000)
  68: add r0.z, -r1.x, l(1.000000)
  69: mul r0.w, r0.z, r0.z
  70: mul r0.w, r0.w, r0.w
  71: mul r0.z, r0.z, r0.w
  72: mad r0.y, r0.y, r0.z, l(1.000000)
  73: mul r0.x, r0.x, r0.y
  74: mul r0.x, r1.x, r0.x
  75: mul r0.xyz, r0.xxxx, r4.xyzx
  76: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  77: mul r2.xyz, r0.wwww, r2.xyzx
  78: mad o0.xyz, r2.xyzx, r0.xyzx, r1.yzwy
  79: mov o0.w, l(1.000000)
  80: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

-- Vertex shader for "d3d9":
// Stats: 29 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 13
Vector4 _MainTex_ST at 12
Float _UVSec at 14
Vector4 _WorldSpaceCameraPos at 10
Vector4 _WorldSpaceLightPos0 at 11

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       3
//   unity_WorldToObject  c7       3
//   _WorldSpaceCameraPos c10      1
//   _WorldSpaceLightPos0 c11      1
//   _MainTex_ST          c12      1
//   _DetailAlbedoMap_ST  c13      1
//   _UVSec               c14      1
//

    vs_3_0
    def c15, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    mad r0, v0.xyzx, c15.xxxy, c15.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c12, c12.zwzw
    abs r0.x, c14.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c13.xyxy, c13
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mad r0.xyz, r0, -c11.w, c11
    mul r1.xyz, c8, v1.y
    mad r1.xyz, v1.x, c7, r1
    mad r1.xyz, v1.z, c9, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul o5.xyz, r1.w, r1
    mov r0.w, c15.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 28 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 78 math, 1 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "_MainTex" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   _LightColor0 c0       1
//   _Color       c1       1
//   _Metallic    c2       1
//   _Glossiness  c3       1
//   _MainTex     s0       1
//

    ps_3_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c6, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c7, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_2d s0
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r0.yzw, v1.xxyz, -r0.x, r1.xxyz
    mul_pp r2.xyz, r0.x, v1
    dp3_pp r0.x, r0.yzww, r0.yzww
    add r1.w, -r0.x, c5.x
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c5.y, r0.x
    mul_pp r0.xyz, r0.x, r0.yzww
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r0
    dp3_sat_pp r0.x, r1, r0
    dp3_sat_pp r0.y, r3, r1
    dp3_pp r0.z, r3, -r2
    mov r1, c4
    add_pp r1.w, r1.w, -c3.x
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c4.w
    mad r0.w, r0.w, r0.w, c6.y
    rcp r0.w, r0.w
    mul r2.y, r2.y, c6.x
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.w, -r1.w, c4.w
    mad_pp r2.z, r0_abs.z, r2.y, r2.x
    mad_pp r2.x, r0.y, r2.y, r2.x
    mul_pp r2.x, r0_abs.z, r2.x
    add_pp r0.z, -r0_abs.z, c4.w
    mad r2.x, r0.y, r2.z, r2.x
    add r2.x, r2.x, c5.w
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, -c5.z
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c6.z
    mad r0.w, r0.w, -c6.z, c6.w
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c7.x, r2.x
    mul_pp r0.w, r0.y, r0.w
    texld r2, v0, s0
    mad_pp r3.xyz, c1, r2, r1.x
    mul_pp r2.xyz, r2, c1
    mad_pp r3.xyz, c2.x, r3, r1.y
    dp3_pp r1.x, r3, r3
    cmp r1.x, -r1.x, c7.y, c7.z
    mul_pp r0.w, r0.w, r1.x
    mul_pp r4.xyz, r0.w, c0
    add_pp r0.w, -r0.x, c4.w
    mul_pp r0.x, r0.x, r0.x
    dp2add_pp r0.x, r0.x, r1.w, c5.z
    mul_pp r1.x, r0.w, r0.w
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.w, r0.w, r1.x
    lrp_pp r1.xyw, r0.w, c4.w, r3.xyzz
    mul_pp r1.xyw, r1, r4.xyzz
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.z, r0.x, r0.z, c4.w
    add_pp r0.w, -r0.y, c4.w
    mul_pp r2.w, r0.w, r0.w
    mul_pp r2.w, r2.w, r2.w
    mul_pp r0.w, r0.w, r2.w
    mad_pp r0.x, r0.x, r0.w, c4.w
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, c0
    mad_pp r0.w, c2.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r2
    mad_pp oC0.xyz, r2, r0, r1.xyww
    mov_pp oC0.w, c4.w

// approximately 78 instruction slots used (1 texture, 77 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 19 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 1
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov r0.w, l(0)
  15: mov o3.xyzw, r0.wwwx
  16: mov o4.xyzw, r0.wwwy
  17: mov o5.w, r0.z
  18: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  19: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  20: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  21: dp3 r0.w, r0.xyzx, r0.xyzx
  22: rsq r0.w, r0.w
  23: mul o5.xyz, r0.wwww, r0.xyzx
  24: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 69 math, 1 textures
Set 2D Texture "_MainTex" to slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 5
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mov r1.x, v3.w
   6: mov r1.y, v4.w
   7: mov r1.z, v5.w
   8: mad r2.xyz, -v2.xyzx, r0.wwww, r1.xyzx
   9: mul r3.xyz, r0.wwww, v2.xyzx
  10: dp3 r0.w, r0.xyzx, -r3.xyzx
  11: dp3 r1.w, r2.xyzx, r2.xyzx
  12: max r1.w, r1.w, l(0.001000)
  13: rsq r1.w, r1.w
  14: mul r2.xyz, r1.wwww, r2.xyzx
  15: dp3_sat r1.w, r0.xyzx, r2.xyzx
  16: dp3_sat r0.x, r0.xyzx, r1.xyzx
  17: dp3_sat r0.y, r1.xyzx, r2.xyzx
  18: add r0.z, -cb0[8].w, l(1.000000)
  19: mul r1.x, r0.z, r0.z
  20: mul r1.y, r1.x, r1.x
  21: mad r1.z, r1.w, r1.y, -r1.w
  22: mad r1.z, r1.z, r1.w, l(1.000000)
  23: mad r1.z, r1.z, r1.z, l(0.000000)
  24: mul r1.y, r1.y, l(0.318310)
  25: div r1.y, r1.y, r1.z
  26: mad r1.z, -r0.z, r0.z, l(1.000000)
  27: mad r1.w, |r0.w|, r1.z, r1.x
  28: mad r1.x, r0.x, r1.z, r1.x
  29: mul r1.x, |r0.w|, r1.x
  30: add r0.w, -|r0.w|, l(1.000000)
  31: mad r1.x, r0.x, r1.w, r1.x
  32: add r1.x, r1.x, l(0.000010)
  33: div r1.x, l(0.500000), r1.x
  34: mul r1.x, r1.y, r1.x
  35: mul r1.x, r1.x, l(3.141593)
  36: max r1.x, r1.x, l(0.000100)
  37: sqrt r1.x, r1.x
  38: mul r1.x, r0.x, r1.x
  39: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
  40: mad r1.yzw, cb0[4].xxyz, r2.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  41: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  42: mad r1.yzw, cb0[8].zzzz, r1.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  43: dp3 r2.w, r1.yzwy, r1.yzwy
  44: ne r2.w, r2.w, l(0.000000)
  45: and r2.w, r2.w, l(0x3f800000)
  46: mul r1.x, r1.x, r2.w
  47: mul r3.xyz, r1.xxxx, cb0[2].xyzx
  48: add r1.x, -r0.y, l(1.000000)
  49: mul r0.y, r0.y, r0.y
  50: dp2 r0.y, r0.yyyy, r0.zzzz
  51: add r0.y, r0.y, l(-0.500000)
  52: mul r0.z, r1.x, r1.x
  53: mul r0.z, r0.z, r0.z
  54: mul r0.z, r1.x, r0.z
  55: add r4.xyz, -r1.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  56: mad r1.xyz, r4.xyzx, r0.zzzz, r1.yzwy
  57: mul r1.xyz, r1.xyzx, r3.xyzx
  58: mul r0.z, r0.w, r0.w
  59: mul r0.z, r0.z, r0.z
  60: mul r0.z, r0.w, r0.z
  61: mad r0.z, r0.y, r0.z, l(1.000000)
  62: add r0.w, -r0.x, l(1.000000)
  63: mul r1.w, r0.w, r0.w
  64: mul r1.w, r1.w, r1.w
  65: mul r0.w, r0.w, r1.w
  66: mad r0.y, r0.y, r0.w, l(1.000000)
  67: mul r0.y, r0.z, r0.y
  68: mul r0.x, r0.x, r0.y
  69: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  70: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  71: mul r2.xyz, r0.wwww, r2.xyzx
  72: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
  73: mov o0.w, l(1.000000)
  74: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

-- Vertex shader for "d3d9":
// Stats: 34 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x4 unity_WorldToLight at 8
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 18
Vector4 _MainTex_ST at 17
Float _UVSec at 19
Vector4 _WorldSpaceCameraPos at 15
Vector4 _WorldSpaceLightPos0 at 16

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       4
//   unity_WorldToLight   c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   _WorldSpaceLightPos0 c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    mad r0, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c15
    mul r1.xyz, c13, v1.y
    mad r1.xyz, v1.x, c12, r1
    mad r1.xyz, v1.z, c14, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul o5.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c8, r0
    dp4 o6.y, c9, r0
    dp4 o6.z, c10, r0
    dp4 o6.w, c11, r0
    mad r0.xyz, r0, -c16.w, c16
    mov r0.w, c20.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 33 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 88 math, 3 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   _LightColor0    c0       1
//   _Color          c1       1
//   _Metallic       c2       1
//   _Glossiness     c3       1
//   _MainTex        s0       1
//   _LightTexture0  s1       1
//   _LightTextureB0 s2       1
//

    ps_3_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 0.5
    def c5, 0, 1, 0.00100000005, 31.622776
    def c6, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c7, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    nrm_pp r0.xyz, v1
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    mad_pp r2.xyz, r1, r0.w, -r0
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c5.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c5.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r3, r1
    dp3_pp r0.x, r3, -r0
    mov r0.y, c5.y
    add_pp r0.y, r0.y, -c3.x
    mul_pp r0.z, r0.y, r0.y
    mul_pp r1.y, r0.z, r0.z
    mad_pp r1.z, r0.w, r1.y, -r0.w
    mad_pp r0.w, r1.z, r0.w, c5.y
    mad r0.w, r0.w, r0.w, c6.z
    rcp r0.w, r0.w
    mul r1.y, r1.y, c6.y
    mul_pp r0.w, r0.w, r1.y
    mad_pp r1.y, r0.y, -r0.y, c5.y
    mad_pp r1.z, r0_abs.x, r1.y, r0.z
    mad_pp r0.z, r1.x, r1.y, r0.z
    mul_pp r0.z, r0.z, r0_abs.x
    add_pp r0.x, -r0_abs.x, c5.y
    mad r0.z, r1.x, r1.z, r0.z
    add r0.z, r0.z, c6.x
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, c4.w
    mul r0.z, r0.w, r0.z
    mul_pp r0.w, r0.z, c6.w
    mad r0.z, r0.z, -c7.x, c7.y
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    cmp_pp r0.z, r0.z, c7.z, r0.w
    mul_pp r0.z, r1.x, r0.z
    texld r2, v0, s0
    mov r3.xyz, c4
    mad_pp r4.xyz, c1, r2, r3.x
    mul_pp r2.xyz, r2, c1
    mad_pp r3.xyw, c2.x, r4.xyzz, r3.y
    dp3_pp r0.w, r3.xyww, r3.xyww
    cmp r0.w, -r0.w, c5.x, c5.y
    mul_pp r0.z, r0.w, r0.z
    rcp r0.w, v5.w
    mad r1.yz, v5.xxyw, r0.w, c4.w
    texld_pp r4, r1.yzzw, s1
    dp3 r0.w, v5, v5
    texld_pp r5, r0.w, s2
    mul r0.w, r4.w, r5.x
    mul_pp r4.xyz, r0.w, c0
    cmp_pp r4.xyz, -v5.z, c5.x, r4
    mul_pp r5.xyz, r0.z, r4
    add_pp r0.z, -r1.w, c5.y
    mul_pp r0.w, r1.w, r1.w
    dp2add_pp r0.y, r0.w, r0.y, -c4.w
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    lrp_pp r1.yzw, r0.z, c5.y, r3.xxyw
    mul_pp r1.yzw, r1, r5.xxyz
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mad_pp r0.x, r0.y, r0.x, c5.y
    add_pp r0.z, -r1.x, c5.y
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.y, r0.y, r0.z, c5.y
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c2.x, -r3.z, r3.z
    mul_pp r2.xyz, r0.w, r2
    mad_pp oC0.xyz, r2, r0, r1.yzww
    mov_pp oC0.w, c5.y

// approximately 90 instruction slots used (3 texture, 87 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 27 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov r0.w, l(0)
  15: mov o3.xyzw, r0.wwwx
  16: mov o4.xyzw, r0.wwwy
  17: mov o5.w, r0.z
  18: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  19: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  20: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  21: dp3 r0.w, r0.xyzx, r0.xyzx
  22: rsq r0.w, r0.w
  23: mul o5.xyz, r0.wwww, r0.xyzx
  24: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  25: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  26: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  27: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  28: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  29: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  30: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  31: mad o6.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 80 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: div r0.xy, v6.xyxx, v6.wwww
   1: add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   2: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
   3: lt r0.x, l(0.000000), v6.z
   4: and r0.x, r0.x, l(0x3f800000)
   5: mul r0.x, r0.w, r0.x
   6: dp3 r0.y, v6.xyzx, v6.xyzx
   7: sample r1.xyzw, r0.yyyy, t2.xyzw, s2
   8: mul r0.x, r0.x, r1.x
   9: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  10: dp3 r0.w, v2.xyzx, v2.xyzx
  11: rsq r0.w, r0.w
  12: mul r1.xyz, r0.wwww, v2.xyzx
  13: mov r2.x, v3.w
  14: mov r2.y, v4.w
  15: mov r2.z, v5.w
  16: dp3 r0.w, r2.xyzx, r2.xyzx
  17: rsq r0.w, r0.w
  18: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  19: mul r2.xyz, r0.wwww, r2.xyzx
  20: dp3 r0.w, r3.xyzx, r3.xyzx
  21: max r0.w, r0.w, l(0.001000)
  22: rsq r0.w, r0.w
  23: mul r3.xyz, r0.wwww, r3.xyzx
  24: dp3 r0.w, v5.xyzx, v5.xyzx
  25: rsq r0.w, r0.w
  26: mul r4.xyz, r0.wwww, v5.xyzx
  27: dp3_sat r0.w, r4.xyzx, r3.xyzx
  28: dp3_sat r1.w, r2.xyzx, r3.xyzx
  29: dp3_sat r2.x, r4.xyzx, r2.xyzx
  30: dp3 r1.x, r4.xyzx, -r1.xyzx
  31: add r1.y, -cb0[8].w, l(1.000000)
  32: mul r1.z, r1.y, r1.y
  33: mul r2.y, r1.z, r1.z
  34: mad r2.z, r0.w, r2.y, -r0.w
  35: mad r0.w, r2.z, r0.w, l(1.000000)
  36: mad r0.w, r0.w, r0.w, l(0.000000)
  37: mul r2.y, r2.y, l(0.318310)
  38: div r0.w, r2.y, r0.w
  39: mad r2.y, -r1.y, r1.y, l(1.000000)
  40: mad r2.z, |r1.x|, r2.y, r1.z
  41: mad r1.z, r2.x, r2.y, r1.z
  42: mul r1.z, r1.z, |r1.x|
  43: add r1.x, -|r1.x|, l(1.000000)
  44: mad r1.z, r2.x, r2.z, r1.z
  45: add r1.z, r1.z, l(0.000010)
  46: div r1.z, l(0.500000), r1.z
  47: mul r0.w, r0.w, r1.z
  48: mul r0.w, r0.w, l(3.141593)
  49: max r0.w, r0.w, l(0.000100)
  50: sqrt r0.w, r0.w
  51: mul r0.w, r2.x, r0.w
  52: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  53: mad r2.yzw, cb0[4].xxyz, r3.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  54: mul r3.xyz, r3.xyzx, cb0[4].xyzx
  55: mad r2.yzw, cb0[8].zzzz, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  56: dp3 r1.z, r2.yzwy, r2.yzwy
  57: ne r1.z, r1.z, l(0.000000)
  58: and r1.z, r1.z, l(0x3f800000)
  59: mul r0.w, r0.w, r1.z
  60: mul r4.xyz, r0.xyzx, r0.wwww
  61: add r0.w, -r1.w, l(1.000000)
  62: mul r1.z, r1.w, r1.w
  63: dp2 r1.y, r1.zzzz, r1.yyyy
  64: add r1.y, r1.y, l(-0.500000)
  65: mul r1.z, r0.w, r0.w
  66: mul r1.z, r1.z, r1.z
  67: mul r0.w, r0.w, r1.z
  68: add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  69: mad r2.yzw, r5.xxyz, r0.wwww, r2.yyzw
  70: mul r2.yzw, r2.yyzw, r4.xxyz
  71: mul r0.w, r1.x, r1.x
  72: mul r0.w, r0.w, r0.w
  73: mul r0.w, r1.x, r0.w
  74: mad r0.w, r1.y, r0.w, l(1.000000)
  75: add r1.x, -r2.x, l(1.000000)
  76: mul r1.z, r1.x, r1.x
  77: mul r1.z, r1.z, r1.z
  78: mul r1.x, r1.x, r1.z
  79: mad r1.x, r1.y, r1.x, l(1.000000)
  80: mul r0.w, r0.w, r1.x
  81: mul r0.w, r2.x, r0.w
  82: mul r0.xyz, r0.wwww, r0.xyzx
  83: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  84: mul r1.xyz, r0.wwww, r3.xyzx
  85: mad o0.xyz, r1.xyzx, r0.xyzx, r2.yzwy
  86: mov o0.w, l(1.000000)
  87: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE 
-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToLight at 11
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 14
Vector4 _WorldSpaceLightPos0 at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       4
//   unity_WorldToObject  c8       3
//   unity_WorldToLight   c11      3
//   _WorldSpaceCameraPos c14      1
//   _WorldSpaceLightPos0 c15      1
//   _MainTex_ST          c16      1
//   _DetailAlbedoMap_ST  c17      1
//   _UVSec               c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul o5.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    mad r0.xyz, r0, -c15.w, c15
    mov r0.w, c19.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 32 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 84 math, 3 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "_MainTex" to slot 0
Set CUBE Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   _LightColor0    c0       1
//   _Color          c1       1
//   _Metallic       c2       1
//   _Glossiness     c3       1
//   _MainTex        s0       1
//   _LightTexture0  s1       1
//   _LightTextureB0 s2       1
//

    ps_3_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c6, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c7, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    nrm_pp r0.xyz, v1
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    mad_pp r2.xyz, r1, r0.w, -r0
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c5.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c5.y, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r3, r1
    dp3_pp r0.x, r3, -r0
    mov r2, c4
    add_pp r0.y, r2.w, -c3.x
    mul_pp r0.z, r0.y, r0.y
    mul_pp r1.y, r0.z, r0.z
    mad_pp r1.z, r0.w, r1.y, -r0.w
    mad_pp r0.w, r1.z, r0.w, c4.w
    mad r0.w, r0.w, r0.w, c6.y
    rcp r0.w, r0.w
    mul r1.y, r1.y, c6.x
    mul_pp r0.w, r0.w, r1.y
    mad_pp r1.y, r0.y, -r0.y, c4.w
    mad_pp r1.z, r0_abs.x, r1.y, r0.z
    mad_pp r0.z, r1.x, r1.y, r0.z
    mul_pp r0.z, r0.z, r0_abs.x
    add_pp r0.x, -r0_abs.x, c4.w
    mad r0.z, r1.x, r1.z, r0.z
    add r0.z, r0.z, c5.w
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, -c5.z
    mul r0.z, r0.w, r0.z
    mul_pp r0.w, r0.z, c6.z
    mad r0.z, r0.z, -c6.z, c6.w
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    cmp_pp r0.z, r0.z, c7.x, r0.w
    mul_pp r0.z, r1.x, r0.z
    texld r3, v0, s0
    mad_pp r4.xyz, c1, r3, r2.x
    mul_pp r3.xyz, r3, c1
    mad_pp r2.xyw, c2.x, r4.xyzz, r2.y
    dp3_pp r0.w, r2.xyww, r2.xyww
    cmp r0.w, -r0.w, c7.y, c7.z
    mul_pp r0.z, r0.w, r0.z
    dp3 r0.w, v5, v5
    texld r4, r0.w, s2
    texld r5, v5, s1
    mul_pp r0.w, r4.x, r5.w
    mul_pp r4.xyz, r0.w, c0
    mul_pp r5.xyz, r0.z, r4
    add_pp r0.z, -r1.w, c4.w
    mul_pp r0.w, r1.w, r1.w
    dp2add_pp r0.y, r0.w, r0.y, c5.z
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    lrp_pp r1.yzw, r0.z, c4.w, r2.xxyw
    mul_pp r1.yzw, r1, r5.xxyz
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mad_pp r0.x, r0.y, r0.x, c4.w
    add_pp r0.z, -r1.x, c4.w
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.y, r0.y, r0.z, c4.w
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c2.x, -r2.z, r2.z
    mul_pp r2.xyz, r0.w, r3
    mad_pp oC0.xyz, r2, r0, r1.yzww
    mov_pp oC0.w, c4.w

// approximately 86 instruction slots used (3 texture, 83 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 27 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov r0.w, l(0)
  15: mov o3.xyzw, r0.wwwx
  16: mov o4.xyzw, r0.wwwy
  17: mov o5.w, r0.z
  18: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  19: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  20: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  21: dp3 r0.w, r0.xyzx, r0.xyzx
  22: rsq r0.w, r0.w
  23: mul o5.xyz, r0.wwww, r0.xyzx
  24: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  25: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  26: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  27: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  28: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  29: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  30: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  31: mad o6.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 75 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTextureB0" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v2.xyzx, v2.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v2.xyzx
   3: mov r1.x, v3.w
   4: mov r1.y, v4.w
   5: mov r1.z, v5.w
   6: dp3 r0.w, r1.xyzx, r1.xyzx
   7: rsq r0.w, r0.w
   8: mad r2.xyz, r1.xyzx, r0.wwww, -r0.xyzx
   9: mul r1.xyz, r0.wwww, r1.xyzx
  10: dp3 r0.w, r2.xyzx, r2.xyzx
  11: max r0.w, r0.w, l(0.001000)
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, v5.xyzx, v5.xyzx
  15: rsq r0.w, r0.w
  16: mul r3.xyz, r0.wwww, v5.xyzx
  17: dp3_sat r0.w, r3.xyzx, r2.xyzx
  18: dp3_sat r1.w, r1.xyzx, r2.xyzx
  19: dp3_sat r1.x, r3.xyzx, r1.xyzx
  20: dp3 r0.x, r3.xyzx, -r0.xyzx
  21: add r0.y, -cb0[8].w, l(1.000000)
  22: mul r0.z, r0.y, r0.y
  23: mul r1.y, r0.z, r0.z
  24: mad r1.z, r0.w, r1.y, -r0.w
  25: mad r0.w, r1.z, r0.w, l(1.000000)
  26: mad r0.w, r0.w, r0.w, l(0.000000)
  27: mul r1.y, r1.y, l(0.318310)
  28: div r0.w, r1.y, r0.w
  29: mad r1.y, -r0.y, r0.y, l(1.000000)
  30: mad r1.z, |r0.x|, r1.y, r0.z
  31: mad r0.z, r1.x, r1.y, r0.z
  32: mul r0.z, r0.z, |r0.x|
  33: add r0.x, -|r0.x|, l(1.000000)
  34: mad r0.z, r1.x, r1.z, r0.z
  35: add r0.z, r0.z, l(0.000010)
  36: div r0.z, l(0.500000), r0.z
  37: mul r0.z, r0.w, r0.z
  38: mul r0.z, r0.z, l(3.141593)
  39: max r0.z, r0.z, l(0.000100)
  40: sqrt r0.z, r0.z
  41: mul r0.z, r1.x, r0.z
  42: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
  43: mad r3.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  44: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  45: mad r3.xyz, cb0[8].zzzz, r3.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  46: dp3 r0.w, r3.xyzx, r3.xyzx
  47: ne r0.w, r0.w, l(0.000000)
  48: and r0.w, r0.w, l(0x3f800000)
  49: mul r0.z, r0.w, r0.z
  50: dp3 r0.w, v6.xyzx, v6.xyzx
  51: sample r4.xyzw, r0.wwww, t1.xyzw, s2
  52: sample r5.xyzw, v6.xyzx, t2.xyzw, s1
  53: mul r0.w, r4.x, r5.w
  54: mul r4.xyz, r0.wwww, cb0[2].xyzx
  55: mul r5.xyz, r0.zzzz, r4.xyzx
  56: add r0.z, -r1.w, l(1.000000)
  57: mul r0.w, r1.w, r1.w
  58: dp2 r0.y, r0.wwww, r0.yyyy
  59: add r0.y, r0.y, l(-0.500000)
  60: mul r0.w, r0.z, r0.z
  61: mul r0.w, r0.w, r0.w
  62: mul r0.z, r0.z, r0.w
  63: add r1.yzw, -r3.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
  64: mad r1.yzw, r1.yyzw, r0.zzzz, r3.xxyz
  65: mul r1.yzw, r1.yyzw, r5.xxyz
  66: mul r0.z, r0.x, r0.x
  67: mul r0.z, r0.z, r0.z
  68: mul r0.x, r0.x, r0.z
  69: mad r0.x, r0.y, r0.x, l(1.000000)
  70: add r0.z, -r1.x, l(1.000000)
  71: mul r0.w, r0.z, r0.z
  72: mul r0.w, r0.w, r0.w
  73: mul r0.z, r0.z, r0.w
  74: mad r0.y, r0.y, r0.z, l(1.000000)
  75: mul r0.x, r0.x, r0.y
  76: mul r0.x, r1.x, r0.x
  77: mul r0.xyz, r0.xxxx, r4.xyzx
  78: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  79: mul r2.xyz, r0.wwww, r2.xyzx
  80: mad o0.xyz, r2.xyzx, r0.xyzx, r1.yzwy
  81: mov o0.w, l(1.000000)
  82: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

-- Vertex shader for "d3d9":
// Stats: 32 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x2 unity_WorldToLight at 11
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 16
Vector4 _MainTex_ST at 15
Float _UVSec at 17
Vector4 _WorldSpaceCameraPos at 13
Vector4 _WorldSpaceLightPos0 at 14

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       4
//   unity_WorldToObject  c8       3
//   unity_WorldToLight   c11      2
//   _WorldSpaceCameraPos c13      1
//   _WorldSpaceLightPos0 c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xy
    mad r0, v0.xyzx, c18.xxxy, c18.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c13
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul o5.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    mad r0.xyz, r0, -c14.w, c14
    mov r0.w, c18.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 31 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 79 math, 2 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   _LightColor0   c0       1
//   _Color         c1       1
//   _Metallic      c2       1
//   _Glossiness    c3       1
//   _MainTex       s0       1
//   _LightTexture0 s1       1
//

    ps_3_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c6, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c7, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xy
    dcl_2d s0
    dcl_2d s1
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r0.yzw, v1.xxyz, -r0.x, r1.xxyz
    mul_pp r2.xyz, r0.x, v1
    dp3_pp r0.x, r0.yzww, r0.yzww
    add r1.w, -r0.x, c5.x
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c5.y, r0.x
    mul_pp r0.xyz, r0.x, r0.yzww
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r0
    dp3_sat_pp r0.x, r1, r0
    dp3_sat_pp r0.y, r3, r1
    dp3_pp r0.z, r3, -r2
    mov r1, c4
    add_pp r1.w, r1.w, -c3.x
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c4.w
    mad r0.w, r0.w, r0.w, c6.y
    rcp r0.w, r0.w
    mul r2.y, r2.y, c6.x
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.w, -r1.w, c4.w
    mad_pp r2.z, r0_abs.z, r2.y, r2.x
    mad_pp r2.x, r0.y, r2.y, r2.x
    mul_pp r2.x, r0_abs.z, r2.x
    add_pp r0.z, -r0_abs.z, c4.w
    mad r2.x, r0.y, r2.z, r2.x
    add r2.x, r2.x, c5.w
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, -c5.z
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c6.z
    mad r0.w, r0.w, -c6.z, c6.w
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c7.x, r2.x
    mul_pp r0.w, r0.y, r0.w
    texld r2, v0, s0
    mad_pp r3.xyz, c1, r2, r1.x
    mul_pp r2.xyz, r2, c1
    mad_pp r3.xyz, c2.x, r3, r1.y
    dp3_pp r1.x, r3, r3
    cmp r1.x, -r1.x, c7.y, c7.z
    mul_pp r0.w, r0.w, r1.x
    texld_pp r4, v5, s1
    mul_pp r4.xyz, r4.w, c0
    mul_pp r5.xyz, r0.w, r4
    add_pp r0.w, -r0.x, c4.w
    mul_pp r0.x, r0.x, r0.x
    dp2add_pp r0.x, r0.x, r1.w, c5.z
    mul_pp r1.x, r0.w, r0.w
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.w, r0.w, r1.x
    lrp_pp r1.xyw, r0.w, c4.w, r3.xyzz
    mul_pp r1.xyw, r1, r5.xyzz
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.z, r0.x, r0.z, c4.w
    add_pp r0.w, -r0.y, c4.w
    mul_pp r2.w, r0.w, r0.w
    mul_pp r2.w, r2.w, r2.w
    mul_pp r0.w, r0.w, r2.w
    mad_pp r0.x, r0.x, r0.w, c4.w
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c2.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r2
    mad_pp oC0.xyz, r2, r0, r1.xyww
    mov_pp oC0.w, c4.w

// approximately 80 instruction slots used (2 texture, 78 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 27 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov r0.w, l(0)
  15: mov o3.xyzw, r0.wwwx
  16: mov o4.xyzw, r0.wwwy
  17: mov o5.w, r0.z
  18: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  19: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  20: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  21: dp3 r0.w, r0.xyzx, r0.xyzx
  22: rsq r0.w, r0.w
  23: mul o5.xyz, r0.wwww, r0.xyzx
  24: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  25: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  26: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  27: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  28: mul r1.xy, r0.yyyy, cb0[12].xyxx
  29: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  30: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  31: mad o6.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 70 math, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mov r1.x, v3.w
   6: mov r1.y, v4.w
   7: mov r1.z, v5.w
   8: mad r2.xyz, -v2.xyzx, r0.wwww, r1.xyzx
   9: mul r3.xyz, r0.wwww, v2.xyzx
  10: dp3 r0.w, r0.xyzx, -r3.xyzx
  11: dp3 r1.w, r2.xyzx, r2.xyzx
  12: max r1.w, r1.w, l(0.001000)
  13: rsq r1.w, r1.w
  14: mul r2.xyz, r1.wwww, r2.xyzx
  15: dp3_sat r1.w, r0.xyzx, r2.xyzx
  16: dp3_sat r0.x, r0.xyzx, r1.xyzx
  17: dp3_sat r0.y, r1.xyzx, r2.xyzx
  18: add r0.z, -cb0[8].w, l(1.000000)
  19: mul r1.x, r0.z, r0.z
  20: mul r1.y, r1.x, r1.x
  21: mad r1.z, r1.w, r1.y, -r1.w
  22: mad r1.z, r1.z, r1.w, l(1.000000)
  23: mad r1.z, r1.z, r1.z, l(0.000000)
  24: mul r1.y, r1.y, l(0.318310)
  25: div r1.y, r1.y, r1.z
  26: mad r1.z, -r0.z, r0.z, l(1.000000)
  27: mad r1.w, |r0.w|, r1.z, r1.x
  28: mad r1.x, r0.x, r1.z, r1.x
  29: mul r1.x, |r0.w|, r1.x
  30: add r0.w, -|r0.w|, l(1.000000)
  31: mad r1.x, r0.x, r1.w, r1.x
  32: add r1.x, r1.x, l(0.000010)
  33: div r1.x, l(0.500000), r1.x
  34: mul r1.x, r1.y, r1.x
  35: mul r1.x, r1.x, l(3.141593)
  36: max r1.x, r1.x, l(0.000100)
  37: sqrt r1.x, r1.x
  38: mul r1.x, r0.x, r1.x
  39: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
  40: mad r1.yzw, cb0[4].xxyz, r2.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  41: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  42: mad r1.yzw, cb0[8].zzzz, r1.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  43: dp3 r2.w, r1.yzwy, r1.yzwy
  44: ne r2.w, r2.w, l(0.000000)
  45: and r2.w, r2.w, l(0x3f800000)
  46: mul r1.x, r1.x, r2.w
  47: sample r3.xyzw, v6.xyxx, t1.xyzw, s1
  48: mul r3.xyz, r3.wwww, cb0[2].xyzx
  49: mul r4.xyz, r1.xxxx, r3.xyzx
  50: add r1.x, -r0.y, l(1.000000)
  51: mul r0.y, r0.y, r0.y
  52: dp2 r0.y, r0.yyyy, r0.zzzz
  53: add r0.y, r0.y, l(-0.500000)
  54: mul r0.z, r1.x, r1.x
  55: mul r0.z, r0.z, r0.z
  56: mul r0.z, r1.x, r0.z
  57: add r5.xyz, -r1.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  58: mad r1.xyz, r5.xyzx, r0.zzzz, r1.yzwy
  59: mul r1.xyz, r1.xyzx, r4.xyzx
  60: mul r0.z, r0.w, r0.w
  61: mul r0.z, r0.z, r0.z
  62: mul r0.z, r0.w, r0.z
  63: mad r0.z, r0.y, r0.z, l(1.000000)
  64: add r0.w, -r0.x, l(1.000000)
  65: mul r1.w, r0.w, r0.w
  66: mul r1.w, r1.w, r1.w
  67: mul r0.w, r0.w, r1.w
  68: mad r0.y, r0.y, r0.w, l(1.000000)
  69: mul r0.y, r0.z, r0.y
  70: mul r0.x, r0.x, r0.y
  71: mul r0.xyz, r0.xxxx, r3.xyzx
  72: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  73: mul r2.xyz, r0.wwww, r2.xyzx
  74: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
  75: mov o0.w, l(1.000000)
  76: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH 
-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 4
Matrix4x4 unity_ObjectToWorld at 8
Matrix4x4 unity_WorldToLight at 12
Matrix4x3 unity_WorldToObject at 16
Matrix4x4 unity_WorldToShadow at 0
Vector4 _DetailAlbedoMap_ST at 22
Vector4 _MainTex_ST at 21
Float _UVSec at 23
Vector4 _WorldSpaceCameraPos at 19
Vector4 _WorldSpaceLightPos0 at 20

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToShadow  c0       4
//   glstate_matrix_mvp   c4       4
//   unity_ObjectToWorld  c8       4
//   unity_WorldToLight   c12      4
//   unity_WorldToObject  c16      3
//   _WorldSpaceCameraPos c19      1
//   _WorldSpaceLightPos0 c20      1
//   _MainTex_ST          c21      1
//   _DetailAlbedoMap_ST  c22      1
//   _UVSec               c23      1
//

    vs_3_0
    def c24, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    mad r0, v0.xyzx, c24.xxxy, c24.yyyx
    dp4 r3.x, c4, r0
    dp4 r3.y, c5, r0
    dp4 r3.z, c6, r0
    dp4 r3.w, c7, r0
    mad o1.xy, v2, c21, c21.zwzw
    abs r0.x, c23.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c22.xyxy, c22
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c19
    mul r1.xyz, c17, v1.y
    mad r1.xyz, v1.x, c16, r1
    mad r1.xyz, v1.z, c18, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul o5.xyz, r1.w, r1
    dp4 r0.w, c11, v0
    dp4 o6.x, c12, r0
    dp4 o6.y, c13, r0
    dp4 o6.z, c14, r0
    dp4 o6.w, c15, r0
    dp4 o7.x, c0, r0
    dp4 o7.y, c1, r0
    dp4 o7.z, c2, r0
    dp4 o7.w, c3, r0
    mad r0.xyz, r0, -c20.w, c20
    mov r0.w, c24.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 37 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 91 math, 4 textures
Vector4 _Color at 2
Float _Glossiness at 4
Vector4 _LightColor0 at 1
Vector4 _LightShadowData at 0
Float _Metallic at 3

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   _LightShadowData  c0       1
//   _LightColor0      c1       1
//   _Color            c2       1
//   _Metallic         c3       1
//   _Glossiness       c4       1
//   _MainTex          s0       1
//   _ShadowMapTexture s1       1
//   _LightTexture0    s2       1
//   _LightTextureB0   s3       1
//

    ps_3_0
    def c5, -0.220916301, 0.220916301, 0.779083729, 0.5
    def c6, 0, 1, 0.00100000005, 31.622776
    def c7, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c8, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    rcp r0.x, v5.w
    mad r0.xy, v5, r0.x, c5.w
    texld_pp r0, r0, s2
    dp3 r0.x, v5, v5
    texld_pp r1, r0.x, s3
    mul r0.x, r0.w, r1.x
    cmp r0.x, -v5.z, c6.x, r0.x
    texldp_pp r1, v6, s1
    mov r0.y, c6.y
    lrp_pp r2.x, r1.x, r0.y, c0.x
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.xzw, r0.x, c1.xyyz
    nrm_pp r1.xyz, v1
    mov_pp r2.x, v2.w
    mov_pp r2.y, v3.w
    mov_pp r2.z, v4.w
    dp3_pp r1.w, r2, r2
    rsq_pp r1.w, r1.w
    mad_pp r3.xyz, r2, r1.w, -r1
    mul_pp r2.xyz, r1.w, r2
    dp3_pp r1.w, r3, r3
    add r2.w, -r1.w, c6.z
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r2.w, c6.w, r1.w
    mul_pp r3.xyz, r1.w, r3
    nrm_pp r4.xyz, v4
    dp3_sat_pp r1.w, r4, r3
    dp3_sat_pp r2.w, r2, r3
    dp3_sat_pp r2.x, r4, r2
    dp3_pp r1.x, r4, -r1
    add_pp r0.y, r0.y, -c4.x
    mul_pp r1.y, r0.y, r0.y
    mul_pp r1.z, r1.y, r1.y
    mad_pp r2.y, r1.w, r1.z, -r1.w
    mad_pp r1.w, r2.y, r1.w, c6.y
    mad r1.w, r1.w, r1.w, c7.z
    rcp r1.w, r1.w
    mul r1.z, r1.z, c7.y
    mul_pp r1.z, r1.w, r1.z
    mad_pp r1.w, r0.y, -r0.y, c6.y
    mad_pp r2.y, r1_abs.x, r1.w, r1.y
    mad_pp r1.y, r2.x, r1.w, r1.y
    mul_pp r1.y, r1.y, r1_abs.x
    add_pp r1.x, -r1_abs.x, c6.y
    mad r1.y, r2.x, r2.y, r1.y
    add r1.y, r1.y, c7.x
    rcp r1.y, r1.y
    mul_pp r1.y, r1.y, c5.w
    mul r1.y, r1.z, r1.y
    mul_pp r1.z, r1.y, c7.w
    mad r1.y, r1.y, -c8.x, c8.y
    rsq r1.z, r1.z
    rcp_pp r1.z, r1.z
    cmp_pp r1.y, r1.y, c8.z, r1.z
    mul_pp r1.y, r2.x, r1.y
    texld r3, v0, s0
    mov r4.xyz, c5
    mad_pp r5.xyz, c2, r3, r4.x
    mul_pp r3.xyz, r3, c2
    mad_pp r4.xyw, c3.x, r5.xyzz, r4.y
    dp3_pp r1.z, r4.xyww, r4.xyww
    cmp r1.z, -r1.z, c6.x, c6.y
    mul_pp r1.y, r1.z, r1.y
    mul_pp r1.yzw, r0.xxzw, r1.y
    add_pp r2.y, -r2.w, c6.y
    mul_pp r2.z, r2.w, r2.w
    dp2add_pp r0.y, r2.z, r0.y, -c5.w
    mul_pp r2.z, r2.y, r2.y
    mul_pp r2.z, r2.z, r2.z
    mul_pp r2.y, r2.y, r2.z
    lrp_pp r5.xyz, r2.y, c6.y, r4.xyww
    mul_pp r1.yzw, r1, r5.xxyz
    mul_pp r2.y, r1.x, r1.x
    mul_pp r2.y, r2.y, r2.y
    mul_pp r1.x, r1.x, r2.y
    mad_pp r1.x, r0.y, r1.x, c6.y
    add_pp r2.y, -r2.x, c6.y
    mul_pp r2.z, r2.y, r2.y
    mul_pp r2.z, r2.z, r2.z
    mul_pp r2.y, r2.y, r2.z
    mad_pp r0.y, r0.y, r2.y, c6.y
    mul_pp r0.y, r1.x, r0.y
    mul_pp r0.y, r2.x, r0.y
    mul_pp r0.xyz, r0.y, r0.xzww
    mad_pp r0.w, c3.x, -r4.z, r4.z
    mul_pp r2.xyz, r0.w, r3
    mad_pp oC0.xyz, r2, r0, r1.yzww
    mov_pp oC0.w, c6.y

// approximately 93 instruction slots used (4 texture, 89 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 31 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 4 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[12], immediateIndexed
      dcl_constantbuffer CB4[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb4[1].xyzw
   1: mad r0.xyzw, cb4[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb4[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb4[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb4[13].xyzx
   9: mad r0.xyz, cb4[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb4[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb4[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov r0.w, l(0)
  15: mov o3.xyzw, r0.wwwx
  16: mov o4.xyzw, r0.wwwy
  17: mov o5.w, r0.z
  18: dp3 r0.x, v1.xyzx, cb4[16].xyzx
  19: dp3 r0.y, v1.xyzx, cb4[17].xyzx
  20: dp3 r0.z, v1.xyzx, cb4[18].xyzx
  21: dp3 r0.w, r0.xyzx, r0.xyzx
  22: rsq r0.w, r0.w
  23: mul o5.xyz, r0.wwww, r0.xyzx
  24: mul r0.xyzw, v0.yyyy, cb4[13].xyzw
  25: mad r0.xyzw, cb4[12].xyzw, v0.xxxx, r0.xyzw
  26: mad r0.xyzw, cb4[14].xyzw, v0.zzzz, r0.xyzw
  27: mad r0.xyzw, cb4[15].xyzw, v0.wwww, r0.xyzw
  28: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  29: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  30: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  31: mad o6.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  32: mul r1.xyzw, r0.yyyy, cb3[9].xyzw
  33: mad r1.xyzw, cb3[8].xyzw, r0.xxxx, r1.xyzw
  34: mad r1.xyzw, cb3[10].xyzw, r0.zzzz, r1.xyzw
  35: mad o7.xyzw, cb3[11].xyzw, r0.wwww, r1.xyzw
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 84 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2
Set 2D Texture "_ShadowMapTexture" to slot 3

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_input_ps linear v7.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: div r0.xy, v6.xyxx, v6.wwww
   1: add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   2: sample r0.xyzw, r0.xyxx, t1.xyzw, s2
   3: lt r0.x, l(0.000000), v6.z
   4: and r0.x, r0.x, l(0x3f800000)
   5: mul r0.x, r0.w, r0.x
   6: dp3 r0.y, v6.xyzx, v6.xyzx
   7: sample r1.xyzw, r0.yyyy, t2.xyzw, s3
   8: mul r0.x, r0.x, r1.x
   9: div r0.yzw, v7.xxyz, v7.wwww
  10: sample_c_lz r0.y, r0.yzyy, t3.xxxx, s1, r0.w
  11: add r0.z, -cb1[24].x, l(1.000000)
  12: mad r0.y, r0.y, r0.z, cb1[24].x
  13: mul r0.x, r0.y, r0.x
  14: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  15: dp3 r0.w, v2.xyzx, v2.xyzx
  16: rsq r0.w, r0.w
  17: mul r1.xyz, r0.wwww, v2.xyzx
  18: mov r2.x, v3.w
  19: mov r2.y, v4.w
  20: mov r2.z, v5.w
  21: dp3 r0.w, r2.xyzx, r2.xyzx
  22: rsq r0.w, r0.w
  23: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  24: mul r2.xyz, r0.wwww, r2.xyzx
  25: dp3 r0.w, r3.xyzx, r3.xyzx
  26: max r0.w, r0.w, l(0.001000)
  27: rsq r0.w, r0.w
  28: mul r3.xyz, r0.wwww, r3.xyzx
  29: dp3 r0.w, v5.xyzx, v5.xyzx
  30: rsq r0.w, r0.w
  31: mul r4.xyz, r0.wwww, v5.xyzx
  32: dp3_sat r0.w, r4.xyzx, r3.xyzx
  33: dp3_sat r1.w, r2.xyzx, r3.xyzx
  34: dp3_sat r2.x, r4.xyzx, r2.xyzx
  35: dp3 r1.x, r4.xyzx, -r1.xyzx
  36: add r1.y, -cb0[8].w, l(1.000000)
  37: mul r1.z, r1.y, r1.y
  38: mul r2.y, r1.z, r1.z
  39: mad r2.z, r0.w, r2.y, -r0.w
  40: mad r0.w, r2.z, r0.w, l(1.000000)
  41: mad r0.w, r0.w, r0.w, l(0.000000)
  42: mul r2.y, r2.y, l(0.318310)
  43: div r0.w, r2.y, r0.w
  44: mad r2.y, -r1.y, r1.y, l(1.000000)
  45: mad r2.z, |r1.x|, r2.y, r1.z
  46: mad r1.z, r2.x, r2.y, r1.z
  47: mul r1.z, r1.z, |r1.x|
  48: add r1.x, -|r1.x|, l(1.000000)
  49: mad r1.z, r2.x, r2.z, r1.z
  50: add r1.z, r1.z, l(0.000010)
  51: div r1.z, l(0.500000), r1.z
  52: mul r0.w, r0.w, r1.z
  53: mul r0.w, r0.w, l(3.141593)
  54: max r0.w, r0.w, l(0.000100)
  55: sqrt r0.w, r0.w
  56: mul r0.w, r2.x, r0.w
  57: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  58: mad r2.yzw, cb0[4].xxyz, r3.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  59: mul r3.xyz, r3.xyzx, cb0[4].xyzx
  60: mad r2.yzw, cb0[8].zzzz, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  61: dp3 r1.z, r2.yzwy, r2.yzwy
  62: ne r1.z, r1.z, l(0.000000)
  63: and r1.z, r1.z, l(0x3f800000)
  64: mul r0.w, r0.w, r1.z
  65: mul r4.xyz, r0.xyzx, r0.wwww
  66: add r0.w, -r1.w, l(1.000000)
  67: mul r1.z, r1.w, r1.w
  68: dp2 r1.y, r1.zzzz, r1.yyyy
  69: add r1.y, r1.y, l(-0.500000)
  70: mul r1.z, r0.w, r0.w
  71: mul r1.z, r1.z, r1.z
  72: mul r0.w, r0.w, r1.z
  73: add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  74: mad r2.yzw, r5.xxyz, r0.wwww, r2.yyzw
  75: mul r2.yzw, r2.yyzw, r4.xxyz
  76: mul r0.w, r1.x, r1.x
  77: mul r0.w, r0.w, r0.w
  78: mul r0.w, r1.x, r0.w
  79: mad r0.w, r1.y, r0.w, l(1.000000)
  80: add r1.x, -r2.x, l(1.000000)
  81: mul r1.z, r1.x, r1.x
  82: mul r1.z, r1.z, r1.z
  83: mul r1.x, r1.x, r1.z
  84: mad r1.x, r1.y, r1.x, l(1.000000)
  85: mul r0.w, r0.w, r1.x
  86: mul r0.w, r2.x, r0.w
  87: mul r0.xyz, r0.wwww, r0.xyzx
  88: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  89: mul r1.xyz, r0.wwww, r3.xyzx
  90: mad o0.xyz, r1.xyzx, r0.xyzx, r2.yzwy
  91: mov o0.w, l(1.000000)
  92: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN 
-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Vector4 _ProjectionParams at 11
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 10
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       3
//   unity_WorldToObject  c7       3
//   _WorldSpaceCameraPos c10      1
//   _ProjectionParams    c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mad r0.xyz, r0, -c12.w, c12
    mul r1.xyz, c8, v1.y
    mad r1.xyz, v1.x, c7, r1
    mad r1.xyz, v1.z, c9, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul o5.xyz, r1.w, r1
    mad r1, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r2.y, c1, r1
    mul r3.x, r2.y, c11.x
    mul r3.w, r3.x, c16.z
    dp4 r2.x, c0, r1
    dp4 r2.w, c3, r1
    dp4 r2.z, c2, r1
    mul r3.xz, r2.xyww, c16.z
    mov r4, r2
    mov o6.zw, r2
    add o6.xy, r3.z, r3.xwzw
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 79 math, 2 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   _LightColor0      c0       1
//   _Color            c1       1
//   _Metallic         c2       1
//   _Glossiness       c3       1
//   _MainTex          s0       1
//   _ShadowMapTexture s1       1
//

    ps_3_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c6, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c7, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5
    dcl_2d s0
    dcl_2d s1
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r0.yzw, v1.xxyz, -r0.x, r1.xxyz
    mul_pp r2.xyz, r0.x, v1
    dp3_pp r0.x, r0.yzww, r0.yzww
    add r1.w, -r0.x, c5.x
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c5.y, r0.x
    mul_pp r0.xyz, r0.x, r0.yzww
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r0
    dp3_sat_pp r0.x, r1, r0
    dp3_sat_pp r0.y, r3, r1
    dp3_pp r0.z, r3, -r2
    mov r1, c4
    add_pp r1.w, r1.w, -c3.x
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c4.w
    mad r0.w, r0.w, r0.w, c6.y
    rcp r0.w, r0.w
    mul r2.y, r2.y, c6.x
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.w, -r1.w, c4.w
    mad_pp r2.z, r0_abs.z, r2.y, r2.x
    mad_pp r2.x, r0.y, r2.y, r2.x
    mul_pp r2.x, r0_abs.z, r2.x
    add_pp r0.z, -r0_abs.z, c4.w
    mad r2.x, r0.y, r2.z, r2.x
    add r2.x, r2.x, c5.w
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, -c5.z
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c6.z
    mad r0.w, r0.w, -c6.z, c6.w
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c7.x, r2.x
    mul_pp r0.w, r0.y, r0.w
    texld r2, v0, s0
    mad_pp r3.xyz, c1, r2, r1.x
    mul_pp r2.xyz, r2, c1
    mad_pp r3.xyz, c2.x, r3, r1.y
    dp3_pp r1.x, r3, r3
    cmp r1.x, -r1.x, c7.y, c7.z
    mul_pp r0.w, r0.w, r1.x
    texldp_pp r4, v5, s1
    mul_pp r4.xyz, r4.x, c0
    mul_pp r5.xyz, r0.w, r4
    add_pp r0.w, -r0.x, c4.w
    mul_pp r0.x, r0.x, r0.x
    dp2add_pp r0.x, r0.x, r1.w, c5.z
    mul_pp r1.x, r0.w, r0.w
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.w, r0.w, r1.x
    lrp_pp r1.xyw, r0.w, c4.w, r3.xyzz
    mul_pp r1.xyw, r1, r5.xyzz
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.z, r0.x, r0.z, c4.w
    add_pp r0.w, -r0.y, c4.w
    mul_pp r2.w, r0.w, r0.w
    mul_pp r2.w, r2.w, r2.w
    mul_pp r0.w, r0.w, r2.w
    mad_pp r0.x, r0.x, r0.w, c4.w
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c2.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r2
    mad_pp oC0.xyz, r2, r0, r1.xyww
    mov_pp oC0.w, c4.w

// approximately 80 instruction slots used (2 texture, 78 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 22 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[9].w, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
   8: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mad r1.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  15: mov r1.w, l(0)
  16: mov o3.xyzw, r1.wwwx
  17: mov o4.xyzw, r1.wwwy
  18: mov o5.w, r1.z
  19: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  20: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  21: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  22: dp3 r1.w, r1.xyzx, r1.xyzx
  23: rsq r1.w, r1.w
  24: mul o5.xyz, r1.wwww, r1.xyzx
  25: mul r0.y, r0.y, cb1[5].x
  26: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  27: mov o6.zw, r0.zzzw
  28: add o6.xy, r1.zzzz, r1.xwxx
  29: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 71 math, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mov r1.x, v3.w
   6: mov r1.y, v4.w
   7: mov r1.z, v5.w
   8: mad r2.xyz, -v2.xyzx, r0.wwww, r1.xyzx
   9: mul r3.xyz, r0.wwww, v2.xyzx
  10: dp3 r0.w, r0.xyzx, -r3.xyzx
  11: dp3 r1.w, r2.xyzx, r2.xyzx
  12: max r1.w, r1.w, l(0.001000)
  13: rsq r1.w, r1.w
  14: mul r2.xyz, r1.wwww, r2.xyzx
  15: dp3_sat r1.w, r0.xyzx, r2.xyzx
  16: dp3_sat r0.x, r0.xyzx, r1.xyzx
  17: dp3_sat r0.y, r1.xyzx, r2.xyzx
  18: add r0.z, -cb0[8].w, l(1.000000)
  19: mul r1.x, r0.z, r0.z
  20: mul r1.y, r1.x, r1.x
  21: mad r1.z, r1.w, r1.y, -r1.w
  22: mad r1.z, r1.z, r1.w, l(1.000000)
  23: mad r1.z, r1.z, r1.z, l(0.000000)
  24: mul r1.y, r1.y, l(0.318310)
  25: div r1.y, r1.y, r1.z
  26: mad r1.z, -r0.z, r0.z, l(1.000000)
  27: mad r1.w, |r0.w|, r1.z, r1.x
  28: mad r1.x, r0.x, r1.z, r1.x
  29: mul r1.x, |r0.w|, r1.x
  30: add r0.w, -|r0.w|, l(1.000000)
  31: mad r1.x, r0.x, r1.w, r1.x
  32: add r1.x, r1.x, l(0.000010)
  33: div r1.x, l(0.500000), r1.x
  34: mul r1.x, r1.y, r1.x
  35: mul r1.x, r1.x, l(3.141593)
  36: max r1.x, r1.x, l(0.000100)
  37: sqrt r1.x, r1.x
  38: mul r1.x, r0.x, r1.x
  39: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
  40: mad r1.yzw, cb0[4].xxyz, r2.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  41: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  42: mad r1.yzw, cb0[8].zzzz, r1.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  43: dp3 r2.w, r1.yzwy, r1.yzwy
  44: ne r2.w, r2.w, l(0.000000)
  45: and r2.w, r2.w, l(0x3f800000)
  46: mul r1.x, r1.x, r2.w
  47: div r3.xy, v6.xyxx, v6.wwww
  48: sample r3.xyzw, r3.xyxx, t1.xyzw, s1
  49: mul r3.xyz, r3.xxxx, cb0[2].xyzx
  50: mul r4.xyz, r1.xxxx, r3.xyzx
  51: add r1.x, -r0.y, l(1.000000)
  52: mul r0.y, r0.y, r0.y
  53: dp2 r0.y, r0.yyyy, r0.zzzz
  54: add r0.y, r0.y, l(-0.500000)
  55: mul r0.z, r1.x, r1.x
  56: mul r0.z, r0.z, r0.z
  57: mul r0.z, r1.x, r0.z
  58: add r5.xyz, -r1.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  59: mad r1.xyz, r5.xyzx, r0.zzzz, r1.yzwy
  60: mul r1.xyz, r1.xyzx, r4.xyzx
  61: mul r0.z, r0.w, r0.w
  62: mul r0.z, r0.z, r0.z
  63: mul r0.z, r0.w, r0.z
  64: mad r0.z, r0.y, r0.z, l(1.000000)
  65: add r0.w, -r0.x, l(1.000000)
  66: mul r1.w, r0.w, r0.w
  67: mul r1.w, r1.w, r1.w
  68: mul r0.w, r0.w, r1.w
  69: mad r0.y, r0.y, r0.w, l(1.000000)
  70: mul r0.y, r0.z, r0.y
  71: mul r0.x, r0.x, r0.y
  72: mul r0.xyz, r0.xxxx, r3.xyzx
  73: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  74: mul r2.xyz, r0.wwww, r2.xyzx
  75: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
  76: mov o0.w, l(1.000000)
  77: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x2 unity_WorldToLight at 11
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Vector4 _ProjectionParams at 14
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 13
Vector4 _WorldSpaceLightPos0 at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       4
//   unity_WorldToObject  c8       3
//   unity_WorldToLight   c11      2
//   _WorldSpaceCameraPos c13      1
//   _ProjectionParams    c14      1
//   _WorldSpaceLightPos0 c15      1
//   _MainTex_ST          c16      1
//   _DetailAlbedoMap_ST  c17      1
//   _UVSec               c18      1
//

    vs_3_0
    def c19, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xy
    dcl_texcoord6 o7
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c13
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul o5.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    mad r0.xyz, r0, -c15.w, c15
    mad r1, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r2.y, c1, r1
    mul r3.x, r2.y, c14.x
    mul r3.w, r3.x, c19.z
    dp4 r2.x, c0, r1
    dp4 r2.w, c3, r1
    dp4 r2.z, c2, r1
    mul r3.xz, r2.xyww, c19.z
    mov r4, r2
    mov o7.zw, r2
    add o7.xy, r3.z, r3.xwzw
    mov r0.w, c19.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 37 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 80 math, 3 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   _LightColor0      c0       1
//   _Color            c1       1
//   _Metallic         c2       1
//   _Glossiness       c3       1
//   _MainTex          s0       1
//   _ShadowMapTexture s1       1
//   _LightTexture0    s2       1
//

    ps_3_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c6, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c7, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xy
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r0.yzw, v1.xxyz, -r0.x, r1.xxyz
    mul_pp r2.xyz, r0.x, v1
    dp3_pp r0.x, r0.yzww, r0.yzww
    add r1.w, -r0.x, c5.x
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c5.y, r0.x
    mul_pp r0.xyz, r0.x, r0.yzww
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r0
    dp3_sat_pp r0.x, r1, r0
    dp3_sat_pp r0.y, r3, r1
    dp3_pp r0.z, r3, -r2
    mov r1, c4
    add_pp r1.w, r1.w, -c3.x
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c4.w
    mad r0.w, r0.w, r0.w, c6.y
    rcp r0.w, r0.w
    mul r2.y, r2.y, c6.x
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.w, -r1.w, c4.w
    mad_pp r2.z, r0_abs.z, r2.y, r2.x
    mad_pp r2.x, r0.y, r2.y, r2.x
    mul_pp r2.x, r0_abs.z, r2.x
    add_pp r0.z, -r0_abs.z, c4.w
    mad r2.x, r0.y, r2.z, r2.x
    add r2.x, r2.x, c5.w
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, -c5.z
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c6.z
    mad r0.w, r0.w, -c6.z, c6.w
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c7.x, r2.x
    mul_pp r0.w, r0.y, r0.w
    texld r2, v0, s0
    mad_pp r3.xyz, c1, r2, r1.x
    mul_pp r2.xyz, r2, c1
    mad_pp r3.xyz, c2.x, r3, r1.y
    dp3_pp r1.x, r3, r3
    cmp r1.x, -r1.x, c7.y, c7.z
    mul_pp r0.w, r0.w, r1.x
    texld r4, v5, s2
    texldp_pp r5, v6, s1
    mul_pp r1.x, r4.w, r5.x
    mul_pp r4.xyz, r1.x, c0
    mul_pp r5.xyz, r0.w, r4
    add_pp r0.w, -r0.x, c4.w
    mul_pp r0.x, r0.x, r0.x
    dp2add_pp r0.x, r0.x, r1.w, c5.z
    mul_pp r1.x, r0.w, r0.w
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.w, r0.w, r1.x
    lrp_pp r1.xyw, r0.w, c4.w, r3.xyzz
    mul_pp r1.xyw, r1, r5.xyzz
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.z, r0.x, r0.z, c4.w
    add_pp r0.w, -r0.y, c4.w
    mul_pp r2.w, r0.w, r0.w
    mul_pp r2.w, r2.w, r2.w
    mul_pp r0.w, r0.w, r2.w
    mad_pp r0.x, r0.x, r0.w, c4.w
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c2.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r2
    mad_pp oC0.xyz, r2, r0, r1.xyww
    mov_pp oC0.w, c4.w

// approximately 82 instruction slots used (3 texture, 79 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 30 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[9].w, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
   8: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mad r1.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  15: mov r1.w, l(0)
  16: mov o3.xyzw, r1.wwwx
  17: mov o4.xyzw, r1.wwwy
  18: mov o5.w, r1.z
  19: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  20: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  21: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  22: dp3 r1.w, r1.xyzx, r1.xyzx
  23: rsq r1.w, r1.w
  24: mul o5.xyz, r1.wwww, r1.xyzx
  25: mul r1.xyzw, v0.yyyy, cb3[13].xyzw
  26: mad r1.xyzw, cb3[12].xyzw, v0.xxxx, r1.xyzw
  27: mad r1.xyzw, cb3[14].xyzw, v0.zzzz, r1.xyzw
  28: mad r1.xyzw, cb3[15].xyzw, v0.wwww, r1.xyzw
  29: mul r2.xy, r1.yyyy, cb0[12].xyxx
  30: mad r1.xy, cb0[11].xyxx, r1.xxxx, r2.xyxx
  31: mad r1.xy, cb0[13].xyxx, r1.zzzz, r1.xyxx
  32: mad o6.xy, cb0[14].xyxx, r1.wwww, r1.xyxx
  33: mul r0.y, r0.y, cb1[5].x
  34: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  35: mov o7.zw, r0.zzzw
  36: add o7.xy, r1.zzzz, r1.xwxx
  37: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 72 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_ShadowMapTexture" to slot 2

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, v2.xyzx, v2.xyzx
   4: rsq r0.w, r0.w
   5: mov r1.x, v3.w
   6: mov r1.y, v4.w
   7: mov r1.z, v5.w
   8: mad r2.xyz, -v2.xyzx, r0.wwww, r1.xyzx
   9: mul r3.xyz, r0.wwww, v2.xyzx
  10: dp3 r0.w, r0.xyzx, -r3.xyzx
  11: dp3 r1.w, r2.xyzx, r2.xyzx
  12: max r1.w, r1.w, l(0.001000)
  13: rsq r1.w, r1.w
  14: mul r2.xyz, r1.wwww, r2.xyzx
  15: dp3_sat r1.w, r0.xyzx, r2.xyzx
  16: dp3_sat r0.x, r0.xyzx, r1.xyzx
  17: dp3_sat r0.y, r1.xyzx, r2.xyzx
  18: add r0.z, -cb0[8].w, l(1.000000)
  19: mul r1.x, r0.z, r0.z
  20: mul r1.y, r1.x, r1.x
  21: mad r1.z, r1.w, r1.y, -r1.w
  22: mad r1.z, r1.z, r1.w, l(1.000000)
  23: mad r1.z, r1.z, r1.z, l(0.000000)
  24: mul r1.y, r1.y, l(0.318310)
  25: div r1.y, r1.y, r1.z
  26: mad r1.z, -r0.z, r0.z, l(1.000000)
  27: mad r1.w, |r0.w|, r1.z, r1.x
  28: mad r1.x, r0.x, r1.z, r1.x
  29: mul r1.x, |r0.w|, r1.x
  30: add r0.w, -|r0.w|, l(1.000000)
  31: mad r1.x, r0.x, r1.w, r1.x
  32: add r1.x, r1.x, l(0.000010)
  33: div r1.x, l(0.500000), r1.x
  34: mul r1.x, r1.y, r1.x
  35: mul r1.x, r1.x, l(3.141593)
  36: max r1.x, r1.x, l(0.000100)
  37: sqrt r1.x, r1.x
  38: mul r1.x, r0.x, r1.x
  39: sample r2.xyzw, v1.xyxx, t0.xyzw, s0
  40: mad r1.yzw, cb0[4].xxyz, r2.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  41: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  42: mad r1.yzw, cb0[8].zzzz, r1.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  43: dp3 r2.w, r1.yzwy, r1.yzwy
  44: ne r2.w, r2.w, l(0.000000)
  45: and r2.w, r2.w, l(0x3f800000)
  46: mul r1.x, r1.x, r2.w
  47: div r3.xy, v7.xyxx, v7.wwww
  48: sample r3.xyzw, r3.xyxx, t2.xyzw, s1
  49: sample r4.xyzw, v6.xyxx, t1.xyzw, s2
  50: mul r2.w, r3.x, r4.w
  51: mul r3.xyz, r2.wwww, cb0[2].xyzx
  52: mul r4.xyz, r1.xxxx, r3.xyzx
  53: add r1.x, -r0.y, l(1.000000)
  54: mul r0.y, r0.y, r0.y
  55: dp2 r0.y, r0.yyyy, r0.zzzz
  56: add r0.y, r0.y, l(-0.500000)
  57: mul r0.z, r1.x, r1.x
  58: mul r0.z, r0.z, r0.z
  59: mul r0.z, r1.x, r0.z
  60: add r5.xyz, -r1.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  61: mad r1.xyz, r5.xyzx, r0.zzzz, r1.yzwy
  62: mul r1.xyz, r1.xyzx, r4.xyzx
  63: mul r0.z, r0.w, r0.w
  64: mul r0.z, r0.z, r0.z
  65: mul r0.z, r0.w, r0.z
  66: mad r0.z, r0.y, r0.z, l(1.000000)
  67: add r0.w, -r0.x, l(1.000000)
  68: mul r1.w, r0.w, r0.w
  69: mul r1.w, r1.w, r1.w
  70: mul r0.w, r0.w, r1.w
  71: mad r0.y, r0.y, r0.w, l(1.000000)
  72: mul r0.y, r0.z, r0.y
  73: mul r0.x, r0.x, r0.y
  74: mul r0.xyz, r0.xxxx, r3.xyzx
  75: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  76: mul r2.xyz, r0.wwww, r2.xyzx
  77: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
  78: mov o0.w, l(1.000000)
  79: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE 
-- Vertex shader for "d3d9":
// Stats: 34 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToLight at 11
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 18
Vector4 _LightPositionRange at 16
Vector4 _MainTex_ST at 17
Float _UVSec at 19
Vector4 _WorldSpaceCameraPos at 14
Vector4 _WorldSpaceLightPos0 at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       4
//   unity_WorldToObject  c8       3
//   unity_WorldToLight   c11      3
//   _WorldSpaceCameraPos c14      1
//   _WorldSpaceLightPos0 c15      1
//   _LightPositionRange  c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xyz
    mad r0, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul o5.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    add o7.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    mov r0.w, c20.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 33 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 91 math, 3 textures
Vector4 _Color at 3
Float _Glossiness at 5
Vector4 _LightColor0 at 2
Vector4 _LightPositionRange at 0
Vector4 _LightShadowData at 1
Float _Metallic at 4

Set 2D Texture "_MainTex" to slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   _LightPositionRange c0       1
//   _LightShadowData    c1       1
//   _LightColor0        c2       1
//   _Color              c3       1
//   _Metallic           c4       1
//   _Glossiness         c5       1
//   _MainTex            s0       1
//   _ShadowMapTexture   s1       1
//   _LightTexture0      s2       1
//

    ps_3_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 0.970000029
    def c7, 1, 0.00100000005, 31.622776, -0.5
    def c8, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c9, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    def c10, 0, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dp3 r0.x, v6, v6
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    mul r0.x, r0.x, c0.w
    texld r1, v6, s1
    mad r0.x, r0.x, -c6.w, r1.x
    mov r1.x, c7.x
    cmp_pp r0.x, r0.x, r1.x, c1.x
    dp3 r0.y, v5, v5
    texld r2, r0.y, s2
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.xyz, r0.x, c2
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c7.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c7.z, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    add_pp r1.x, r1.x, -c5.x
    mul_pp r2.x, r1.x, r1.x
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c7.x
    mad r0.w, r0.w, r0.w, c8.z
    rcp r0.w, r0.w
    mul r2.y, r2.y, c8.y
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.x, -r1.x, c7.x
    mad_pp r2.z, r1_abs.w, r2.y, r2.x
    mad_pp r2.x, r1.z, r2.y, r2.x
    mul_pp r2.x, r1_abs.w, r2.x
    add_pp r1.w, -r1_abs.w, c7.x
    mad r2.x, r1.z, r2.z, r2.x
    add r2.x, r2.x, c8.x
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, -c7.w
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c8.w
    mad r0.w, r0.w, -c9.x, c9.y
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c9.z, r2.x
    mul_pp r0.w, r1.z, r0.w
    texld r2, v0, s0
    mov r3.xyz, c6
    mad_pp r4.xyz, c3, r2, r3.x
    mul_pp r2.xyz, r2, c3
    mad_pp r3.xyw, c4.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c10.x, c10.y
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c7.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c7.w
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c7.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c7.x
    add_pp r1.y, -r1.z, c7.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c7.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c4.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp oC0.xyz, r1, r0, r3.xyww
    mov_pp oC0.w, c7.x

// approximately 93 instruction slots used (3 texture, 90 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 28 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  15: mov r1.w, l(0)
  16: mov o3.xyzw, r1.wwwx
  17: mov o4.xyzw, r1.wwwy
  18: mov o5.w, r1.z
  19: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  20: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  21: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  22: dp3 r0.w, r0.xyzx, r0.xyzx
  23: rsq r0.w, r0.w
  24: mul o5.xyz, r0.wwww, r0.xyzx
  25: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  26: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  27: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  28: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  29: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  30: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  31: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  32: mad o6.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 80 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set CUBE Texture "_ShadowMapTexture" to slot 2

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v7.xyzx, v7.xyzx
   1: sqrt r0.x, r0.x
   2: mul r0.x, r0.x, cb1[1].w
   3: mul r0.x, r0.x, l(0.970000)
   4: sample r1.xyzw, v7.xyzx, t2.xyzw, s1
   5: lt r0.x, r1.x, r0.x
   6: movc r0.x, r0.x, cb2[24].x, l(1.000000)
   7: dp3 r0.y, v6.xyzx, v6.xyzx
   8: sample r1.xyzw, r0.yyyy, t1.xyzw, s2
   9: mul r0.x, r0.x, r1.x
  10: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  11: dp3 r0.w, v2.xyzx, v2.xyzx
  12: rsq r0.w, r0.w
  13: mul r1.xyz, r0.wwww, v2.xyzx
  14: mov r2.x, v3.w
  15: mov r2.y, v4.w
  16: mov r2.z, v5.w
  17: dp3 r0.w, r2.xyzx, r2.xyzx
  18: rsq r0.w, r0.w
  19: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  20: mul r2.xyz, r0.wwww, r2.xyzx
  21: dp3 r0.w, r3.xyzx, r3.xyzx
  22: max r0.w, r0.w, l(0.001000)
  23: rsq r0.w, r0.w
  24: mul r3.xyz, r0.wwww, r3.xyzx
  25: dp3 r0.w, v5.xyzx, v5.xyzx
  26: rsq r0.w, r0.w
  27: mul r4.xyz, r0.wwww, v5.xyzx
  28: dp3_sat r0.w, r4.xyzx, r3.xyzx
  29: dp3_sat r1.w, r2.xyzx, r3.xyzx
  30: dp3_sat r2.x, r4.xyzx, r2.xyzx
  31: dp3 r1.x, r4.xyzx, -r1.xyzx
  32: add r1.y, -cb0[8].w, l(1.000000)
  33: mul r1.z, r1.y, r1.y
  34: mul r2.y, r1.z, r1.z
  35: mad r2.z, r0.w, r2.y, -r0.w
  36: mad r0.w, r2.z, r0.w, l(1.000000)
  37: mad r0.w, r0.w, r0.w, l(0.000000)
  38: mul r2.y, r2.y, l(0.318310)
  39: div r0.w, r2.y, r0.w
  40: mad r2.y, -r1.y, r1.y, l(1.000000)
  41: mad r2.z, |r1.x|, r2.y, r1.z
  42: mad r1.z, r2.x, r2.y, r1.z
  43: mul r1.z, r1.z, |r1.x|
  44: add r1.x, -|r1.x|, l(1.000000)
  45: mad r1.z, r2.x, r2.z, r1.z
  46: add r1.z, r1.z, l(0.000010)
  47: div r1.z, l(0.500000), r1.z
  48: mul r0.w, r0.w, r1.z
  49: mul r0.w, r0.w, l(3.141593)
  50: max r0.w, r0.w, l(0.000100)
  51: sqrt r0.w, r0.w
  52: mul r0.w, r2.x, r0.w
  53: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  54: mad r2.yzw, cb0[4].xxyz, r3.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  55: mul r3.xyz, r3.xyzx, cb0[4].xyzx
  56: mad r2.yzw, cb0[8].zzzz, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  57: dp3 r1.z, r2.yzwy, r2.yzwy
  58: ne r1.z, r1.z, l(0.000000)
  59: and r1.z, r1.z, l(0x3f800000)
  60: mul r0.w, r0.w, r1.z
  61: mul r4.xyz, r0.xyzx, r0.wwww
  62: add r0.w, -r1.w, l(1.000000)
  63: mul r1.z, r1.w, r1.w
  64: dp2 r1.y, r1.zzzz, r1.yyyy
  65: add r1.y, r1.y, l(-0.500000)
  66: mul r1.z, r0.w, r0.w
  67: mul r1.z, r1.z, r1.z
  68: mul r0.w, r0.w, r1.z
  69: add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  70: mad r2.yzw, r5.xxyz, r0.wwww, r2.yyzw
  71: mul r2.yzw, r2.yyzw, r4.xxyz
  72: mul r0.w, r1.x, r1.x
  73: mul r0.w, r0.w, r0.w
  74: mul r0.w, r1.x, r0.w
  75: mad r0.w, r1.y, r0.w, l(1.000000)
  76: add r1.x, -r2.x, l(1.000000)
  77: mul r1.z, r1.x, r1.x
  78: mul r1.z, r1.z, r1.z
  79: mul r1.x, r1.x, r1.z
  80: mad r1.x, r1.y, r1.x, l(1.000000)
  81: mul r0.w, r0.w, r1.x
  82: mul r0.w, r2.x, r0.w
  83: mul r0.xyz, r0.wwww, r0.xyzx
  84: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  85: mul r1.xyz, r0.wwww, r3.xyzx
  86: mad o0.xyz, r1.xyzx, r0.xyzx, r2.yzwy
  87: mov o0.w, l(1.000000)
  88: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE 
-- Vertex shader for "d3d9":
// Stats: 34 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToLight at 11
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 18
Vector4 _LightPositionRange at 16
Vector4 _MainTex_ST at 17
Float _UVSec at 19
Vector4 _WorldSpaceCameraPos at 14
Vector4 _WorldSpaceLightPos0 at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       4
//   unity_WorldToObject  c8       3
//   unity_WorldToLight   c11      3
//   _WorldSpaceCameraPos c14      1
//   _WorldSpaceLightPos0 c15      1
//   _LightPositionRange  c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xyz
    mad r0, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul o5.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    add o7.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    mov r0.w, c20.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 33 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 92 math, 4 textures
Vector4 _Color at 3
Float _Glossiness at 5
Vector4 _LightColor0 at 2
Vector4 _LightPositionRange at 0
Vector4 _LightShadowData at 1
Float _Metallic at 4

Set 2D Texture "_MainTex" to slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   _LightPositionRange c0       1
//   _LightShadowData    c1       1
//   _LightColor0        c2       1
//   _Color              c3       1
//   _Metallic           c4       1
//   _Glossiness         c5       1
//   _MainTex            s0       1
//   _ShadowMapTexture   s1       1
//   _LightTexture0      s2       1
//   _LightTextureB0     s3       1
//

    ps_3_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 0.970000029
    def c7, 1, 0.00100000005, 31.622776, -0.5
    def c8, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c9, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    def c10, 0, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_cube s2
    dcl_2d s3
    dp3 r0.x, v6, v6
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    mul r0.x, r0.x, c0.w
    texld r1, v6, s1
    mad r0.x, r0.x, -c6.w, r1.x
    mov r1.x, c7.x
    cmp_pp r0.x, r0.x, r1.x, c1.x
    dp3 r0.y, v5, v5
    texld r2, r0.y, s3
    texld r3, v5, s2
    mul r0.y, r2.x, r3.w
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c2
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c7.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c7.z, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    add_pp r1.x, r1.x, -c5.x
    mul_pp r2.x, r1.x, r1.x
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c7.x
    mad r0.w, r0.w, r0.w, c8.z
    rcp r0.w, r0.w
    mul r2.y, r2.y, c8.y
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.x, -r1.x, c7.x
    mad_pp r2.z, r1_abs.w, r2.y, r2.x
    mad_pp r2.x, r1.z, r2.y, r2.x
    mul_pp r2.x, r1_abs.w, r2.x
    add_pp r1.w, -r1_abs.w, c7.x
    mad r2.x, r1.z, r2.z, r2.x
    add r2.x, r2.x, c8.x
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, -c7.w
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c8.w
    mad r0.w, r0.w, -c9.x, c9.y
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c9.z, r2.x
    mul_pp r0.w, r1.z, r0.w
    texld r2, v0, s0
    mov r3.xyz, c6
    mad_pp r4.xyz, c3, r2, r3.x
    mul_pp r2.xyz, r2, c3
    mad_pp r3.xyw, c4.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c10.x, c10.y
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c7.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c7.w
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c7.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c7.x
    add_pp r1.y, -r1.z, c7.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c7.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c4.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp oC0.xyz, r1, r0, r3.xyww
    mov_pp oC0.w, c7.x

// approximately 95 instruction slots used (4 texture, 91 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 28 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  15: mov r1.w, l(0)
  16: mov o3.xyzw, r1.wwwx
  17: mov o4.xyzw, r1.wwwy
  18: mov o5.w, r1.z
  19: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  20: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  21: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  22: dp3 r0.w, r0.xyzx, r0.xyzx
  23: rsq r0.w, r0.w
  24: mul o5.xyz, r0.wwww, r0.xyzx
  25: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  26: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  27: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  28: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  29: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  30: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  31: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  32: mad o6.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 81 math, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTextureB0" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 3

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v7.xyzx, v7.xyzx
   1: sqrt r0.x, r0.x
   2: mul r0.x, r0.x, cb1[1].w
   3: mul r0.x, r0.x, l(0.970000)
   4: sample r1.xyzw, v7.xyzx, t3.xyzw, s1
   5: lt r0.x, r1.x, r0.x
   6: movc r0.x, r0.x, cb2[24].x, l(1.000000)
   7: dp3 r0.y, v6.xyzx, v6.xyzx
   8: sample r1.xyzw, r0.yyyy, t1.xyzw, s3
   9: sample r2.xyzw, v6.xyzx, t2.xyzw, s2
  10: mul r0.y, r1.x, r2.w
  11: mul r0.x, r0.x, r0.y
  12: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  13: dp3 r0.w, v2.xyzx, v2.xyzx
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, v2.xyzx
  16: mov r2.x, v3.w
  17: mov r2.y, v4.w
  18: mov r2.z, v5.w
  19: dp3 r0.w, r2.xyzx, r2.xyzx
  20: rsq r0.w, r0.w
  21: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  22: mul r2.xyz, r0.wwww, r2.xyzx
  23: dp3 r0.w, r3.xyzx, r3.xyzx
  24: max r0.w, r0.w, l(0.001000)
  25: rsq r0.w, r0.w
  26: mul r3.xyz, r0.wwww, r3.xyzx
  27: dp3 r0.w, v5.xyzx, v5.xyzx
  28: rsq r0.w, r0.w
  29: mul r4.xyz, r0.wwww, v5.xyzx
  30: dp3_sat r0.w, r4.xyzx, r3.xyzx
  31: dp3_sat r1.w, r2.xyzx, r3.xyzx
  32: dp3_sat r2.x, r4.xyzx, r2.xyzx
  33: dp3 r1.x, r4.xyzx, -r1.xyzx
  34: add r1.y, -cb0[8].w, l(1.000000)
  35: mul r1.z, r1.y, r1.y
  36: mul r2.y, r1.z, r1.z
  37: mad r2.z, r0.w, r2.y, -r0.w
  38: mad r0.w, r2.z, r0.w, l(1.000000)
  39: mad r0.w, r0.w, r0.w, l(0.000000)
  40: mul r2.y, r2.y, l(0.318310)
  41: div r0.w, r2.y, r0.w
  42: mad r2.y, -r1.y, r1.y, l(1.000000)
  43: mad r2.z, |r1.x|, r2.y, r1.z
  44: mad r1.z, r2.x, r2.y, r1.z
  45: mul r1.z, r1.z, |r1.x|
  46: add r1.x, -|r1.x|, l(1.000000)
  47: mad r1.z, r2.x, r2.z, r1.z
  48: add r1.z, r1.z, l(0.000010)
  49: div r1.z, l(0.500000), r1.z
  50: mul r0.w, r0.w, r1.z
  51: mul r0.w, r0.w, l(3.141593)
  52: max r0.w, r0.w, l(0.000100)
  53: sqrt r0.w, r0.w
  54: mul r0.w, r2.x, r0.w
  55: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  56: mad r2.yzw, cb0[4].xxyz, r3.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  57: mul r3.xyz, r3.xyzx, cb0[4].xyzx
  58: mad r2.yzw, cb0[8].zzzz, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  59: dp3 r1.z, r2.yzwy, r2.yzwy
  60: ne r1.z, r1.z, l(0.000000)
  61: and r1.z, r1.z, l(0x3f800000)
  62: mul r0.w, r0.w, r1.z
  63: mul r4.xyz, r0.xyzx, r0.wwww
  64: add r0.w, -r1.w, l(1.000000)
  65: mul r1.z, r1.w, r1.w
  66: dp2 r1.y, r1.zzzz, r1.yyyy
  67: add r1.y, r1.y, l(-0.500000)
  68: mul r1.z, r0.w, r0.w
  69: mul r1.z, r1.z, r1.z
  70: mul r0.w, r0.w, r1.z
  71: add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  72: mad r2.yzw, r5.xxyz, r0.wwww, r2.yyzw
  73: mul r2.yzw, r2.yyzw, r4.xxyz
  74: mul r0.w, r1.x, r1.x
  75: mul r0.w, r0.w, r0.w
  76: mul r0.w, r1.x, r0.w
  77: mad r0.w, r1.y, r0.w, l(1.000000)
  78: add r1.x, -r2.x, l(1.000000)
  79: mul r1.z, r1.x, r1.x
  80: mul r1.z, r1.z, r1.z
  81: mul r1.x, r1.x, r1.z
  82: mad r1.x, r1.y, r1.x, l(1.000000)
  83: mul r0.w, r0.w, r1.x
  84: mul r0.w, r2.x, r0.w
  85: mul r0.xyz, r0.wwww, r0.xyzx
  86: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  87: mul r1.xyz, r0.wwww, r3.xyzx
  88: mad o0.xyz, r1.xyzx, r0.xyzx, r2.yzwy
  89: mov o0.w, l(1.000000)
  90: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH SHADOWS_SOFT 
-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 4
Matrix4x4 unity_ObjectToWorld at 8
Matrix4x4 unity_WorldToLight at 12
Matrix4x3 unity_WorldToObject at 16
Matrix4x4 unity_WorldToShadow at 0
Vector4 _DetailAlbedoMap_ST at 22
Vector4 _MainTex_ST at 21
Float _UVSec at 23
Vector4 _WorldSpaceCameraPos at 19
Vector4 _WorldSpaceLightPos0 at 20

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToShadow  c0       4
//   glstate_matrix_mvp   c4       4
//   unity_ObjectToWorld  c8       4
//   unity_WorldToLight   c12      4
//   unity_WorldToObject  c16      3
//   _WorldSpaceCameraPos c19      1
//   _WorldSpaceLightPos0 c20      1
//   _MainTex_ST          c21      1
//   _DetailAlbedoMap_ST  c22      1
//   _UVSec               c23      1
//

    vs_3_0
    def c24, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    mad r0, v0.xyzx, c24.xxxy, c24.yyyx
    dp4 r3.x, c4, r0
    dp4 r3.y, c5, r0
    dp4 r3.z, c6, r0
    dp4 r3.w, c7, r0
    mad o1.xy, v2, c21, c21.zwzw
    abs r0.x, c23.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c22.xyxy, c22
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add o2.xyz, r0, -c19
    mul r1.xyz, c17, v1.y
    mad r1.xyz, v1.x, c16, r1
    mad r1.xyz, v1.z, c18, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul o5.xyz, r1.w, r1
    dp4 r0.w, c11, v0
    dp4 o6.x, c12, r0
    dp4 o6.y, c13, r0
    dp4 o6.z, c14, r0
    dp4 o6.w, c15, r0
    dp4 o7.x, c0, r0
    dp4 o7.y, c1, r0
    dp4 o7.z, c2, r0
    dp4 o7.w, c3, r0
    mad r0.xyz, r0, -c20.w, c20
    mov r0.w, c24.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 37 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 100 math, 7 textures
Vector4 _Color at 6
Float _Glossiness at 8
Vector4 _LightColor0 at 5
Vector4 _LightShadowData at 4
Float _Metallic at 7
Vector4 _ShadowOffsets[4] at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 _ShadowOffsets[4];
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   _ShadowOffsets    c0       4
//   _LightShadowData  c4       1
//   _LightColor0      c5       1
//   _Color            c6       1
//   _Metallic         c7       1
//   _Glossiness       c8       1
//   _MainTex          s0       1
//   _ShadowMapTexture s1       1
//   _LightTexture0    s2       1
//   _LightTextureB0   s3       1
//

    ps_3_0
    def c9, -0.220916301, 0.220916301, 0.779083729, 0.5
    def c10, 0, 1, 0.25, 0.00100000005
    def c11, 31.622776, 9.99999975e-006, 0.318309873, 1.00000001e-007
    def c12, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    mov r0.y, c10.y
    rcp r0.x, v6.w
    mad r1, v6, r0.x, c0
    texldp_pp r1, r1, s1
    mad r2, v6, r0.x, c1
    texldp_pp r2, r2, s1
    mov_pp r1.y, r2.x
    mad r2, v6, r0.x, c2
    mad r3, v6, r0.x, c3
    texldp_pp r3, r3, s1
    mov_pp r1.w, r3.x
    texldp_pp r2, r2, s1
    mov_pp r1.z, r2.x
    lrp_pp r2, r1, r0.y, c4.x
    dp4_pp r0.x, r2, c10.z
    rcp r0.z, v5.w
    mad r0.zw, v5.xyxy, r0.z, c9.w
    texld_pp r1, r0.zwzw, s2
    dp3 r0.z, v5, v5
    texld_pp r2, r0.z, s3
    mul r0.z, r1.w, r2.x
    cmp r0.z, -v5.z, c10.x, r0.z
    mul_pp r0.x, r0.x, r0.z
    mul_pp r0.xzw, r0.x, c5.xyyz
    nrm_pp r1.xyz, v1
    mov_pp r2.x, v2.w
    mov_pp r2.y, v3.w
    mov_pp r2.z, v4.w
    dp3_pp r1.w, r2, r2
    rsq_pp r1.w, r1.w
    mad_pp r3.xyz, r2, r1.w, -r1
    mul_pp r2.xyz, r1.w, r2
    dp3_pp r1.w, r3, r3
    add r2.w, -r1.w, c10.w
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r2.w, c11.x, r1.w
    mul_pp r3.xyz, r1.w, r3
    nrm_pp r4.xyz, v4
    dp3_sat_pp r1.w, r4, r3
    dp3_sat_pp r2.w, r2, r3
    dp3_sat_pp r2.x, r4, r2
    dp3_pp r1.x, r4, -r1
    add_pp r0.y, r0.y, -c8.x
    mul_pp r1.y, r0.y, r0.y
    mul_pp r1.z, r1.y, r1.y
    mad_pp r2.y, r1.w, r1.z, -r1.w
    mad_pp r1.w, r2.y, r1.w, c10.y
    mad r1.w, r1.w, r1.w, c11.w
    rcp r1.w, r1.w
    mul r1.z, r1.z, c11.z
    mul_pp r1.z, r1.w, r1.z
    mad_pp r1.w, r0.y, -r0.y, c10.y
    mad_pp r2.y, r1_abs.x, r1.w, r1.y
    mad_pp r1.y, r2.x, r1.w, r1.y
    mul_pp r1.y, r1.y, r1_abs.x
    add_pp r1.x, -r1_abs.x, c10.y
    mad r1.y, r2.x, r2.y, r1.y
    add r1.y, r1.y, c11.y
    rcp r1.y, r1.y
    mul_pp r1.y, r1.y, c9.w
    mul r1.y, r1.z, r1.y
    mul_pp r1.z, r1.y, c12.x
    mad r1.y, r1.y, -c12.x, c12.y
    rsq r1.z, r1.z
    rcp_pp r1.z, r1.z
    cmp_pp r1.y, r1.y, c12.z, r1.z
    mul_pp r1.y, r2.x, r1.y
    texld r3, v0, s0
    mov r4.xyz, c9
    mad_pp r5.xyz, c6, r3, r4.x
    mul_pp r3.xyz, r3, c6
    mad_pp r4.xyw, c7.x, r5.xyzz, r4.y
    dp3_pp r1.z, r4.xyww, r4.xyww
    cmp r1.z, -r1.z, c10.x, c10.y
    mul_pp r1.y, r1.z, r1.y
    mul_pp r1.yzw, r0.xxzw, r1.y
    add_pp r2.y, -r2.w, c10.y
    mul_pp r2.z, r2.w, r2.w
    dp2add_pp r0.y, r2.z, r0.y, -c9.w
    mul_pp r2.z, r2.y, r2.y
    mul_pp r2.z, r2.z, r2.z
    mul_pp r2.y, r2.y, r2.z
    lrp_pp r5.xyz, r2.y, c10.y, r4.xyww
    mul_pp r1.yzw, r1, r5.xxyz
    mul_pp r2.y, r1.x, r1.x
    mul_pp r2.y, r2.y, r2.y
    mul_pp r1.x, r1.x, r2.y
    mad_pp r1.x, r0.y, r1.x, c10.y
    add_pp r2.y, -r2.x, c10.y
    mul_pp r2.z, r2.y, r2.y
    mul_pp r2.z, r2.z, r2.z
    mul_pp r2.y, r2.y, r2.z
    mad_pp r0.y, r0.y, r2.y, c10.y
    mul_pp r0.y, r1.x, r0.y
    mul_pp r0.y, r2.x, r0.y
    mul_pp r0.xyz, r0.y, r0.xzww
    mad_pp r0.w, c7.x, -r4.z, r4.z
    mul_pp r2.xyz, r0.w, r3
    mad_pp oC0.xyz, r2, r0, r1.yzww
    mov_pp oC0.w, c10.y

// approximately 105 instruction slots used (7 texture, 98 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 31 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 240
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 4 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[12], immediateIndexed
      dcl_constantbuffer CB4[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb4[1].xyzw
   1: mad r0.xyzw, cb4[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb4[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb4[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb4[13].xyzx
   9: mad r0.xyz, cb4[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb4[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb4[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: mov r0.w, l(0)
  15: mov o3.xyzw, r0.wwwx
  16: mov o4.xyzw, r0.wwwy
  17: mov o5.w, r0.z
  18: dp3 r0.x, v1.xyzx, cb4[16].xyzx
  19: dp3 r0.y, v1.xyzx, cb4[17].xyzx
  20: dp3 r0.z, v1.xyzx, cb4[18].xyzx
  21: dp3 r0.w, r0.xyzx, r0.xyzx
  22: rsq r0.w, r0.w
  23: mul o5.xyz, r0.wwww, r0.xyzx
  24: mul r0.xyzw, v0.yyyy, cb4[13].xyzw
  25: mad r0.xyzw, cb4[12].xyzw, v0.xxxx, r0.xyzw
  26: mad r0.xyzw, cb4[14].xyzw, v0.zzzz, r0.xyzw
  27: mad r0.xyzw, cb4[15].xyzw, v0.wwww, r0.xyzw
  28: mul r1.xyzw, r0.yyyy, cb0[16].xyzw
  29: mad r1.xyzw, cb0[15].xyzw, r0.xxxx, r1.xyzw
  30: mad r1.xyzw, cb0[17].xyzw, r0.zzzz, r1.xyzw
  31: mad o6.xyzw, cb0[18].xyzw, r0.wwww, r1.xyzw
  32: mul r1.xyzw, r0.yyyy, cb3[9].xyzw
  33: mad r1.xyzw, cb3[8].xyzw, r0.xxxx, r1.xyzw
  34: mad r1.xyzw, cb3[10].xyzw, r0.zzzz, r1.xyzw
  35: mad o7.xyzw, cb3[11].xyzw, r0.wwww, r1.xyzw
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 89 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2
Set 2D Texture "_ShadowMapTexture" to slot 3

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Vector4 _ShadowOffsets[4] at 176
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_input_ps linear v7.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.x, -cb1[24].x, l(1.000000)
   1: div r0.yzw, v7.xxyz, v7.wwww
   2: add r1.xyz, r0.yzwy, cb0[11].xyzx
   3: sample_c_lz r1.x, r1.xyxx, t3.xxxx, s1, r1.z
   4: add r2.xyz, r0.yzwy, cb0[12].xyzx
   5: sample_c_lz r1.y, r2.xyxx, t3.xxxx, s1, r2.z
   6: add r2.xyz, r0.yzwy, cb0[13].xyzx
   7: add r0.yzw, r0.yyzw, cb0[14].xxyz
   8: sample_c_lz r1.w, r0.yzyy, t3.xxxx, s1, r0.w
   9: sample_c_lz r1.z, r2.xyxx, t3.xxxx, s1, r2.z
  10: mad r0.xyzw, r1.xyzw, r0.xxxx, cb1[24].xxxx
  11: dp4 r0.x, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  12: div r0.yz, v6.xxyx, v6.wwww
  13: add r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  14: sample r1.xyzw, r0.yzyy, t1.xyzw, s2
  15: lt r0.y, l(0.000000), v6.z
  16: and r0.y, r0.y, l(0x3f800000)
  17: mul r0.y, r1.w, r0.y
  18: dp3 r0.z, v6.xyzx, v6.xyzx
  19: sample r1.xyzw, r0.zzzz, t2.xyzw, s3
  20: mul r0.y, r0.y, r1.x
  21: mul r0.x, r0.x, r0.y
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: dp3 r0.w, v2.xyzx, v2.xyzx
  24: rsq r0.w, r0.w
  25: mul r1.xyz, r0.wwww, v2.xyzx
  26: mov r2.x, v3.w
  27: mov r2.y, v4.w
  28: mov r2.z, v5.w
  29: dp3 r0.w, r2.xyzx, r2.xyzx
  30: rsq r0.w, r0.w
  31: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  32: mul r2.xyz, r0.wwww, r2.xyzx
  33: dp3 r0.w, r3.xyzx, r3.xyzx
  34: max r0.w, r0.w, l(0.001000)
  35: rsq r0.w, r0.w
  36: mul r3.xyz, r0.wwww, r3.xyzx
  37: dp3 r0.w, v5.xyzx, v5.xyzx
  38: rsq r0.w, r0.w
  39: mul r4.xyz, r0.wwww, v5.xyzx
  40: dp3_sat r0.w, r4.xyzx, r3.xyzx
  41: dp3_sat r1.w, r2.xyzx, r3.xyzx
  42: dp3_sat r2.x, r4.xyzx, r2.xyzx
  43: dp3 r1.x, r4.xyzx, -r1.xyzx
  44: add r1.y, -cb0[8].w, l(1.000000)
  45: mul r1.z, r1.y, r1.y
  46: mul r2.y, r1.z, r1.z
  47: mad r2.z, r0.w, r2.y, -r0.w
  48: mad r0.w, r2.z, r0.w, l(1.000000)
  49: mad r0.w, r0.w, r0.w, l(0.000000)
  50: mul r2.y, r2.y, l(0.318310)
  51: div r0.w, r2.y, r0.w
  52: mad r2.y, -r1.y, r1.y, l(1.000000)
  53: mad r2.z, |r1.x|, r2.y, r1.z
  54: mad r1.z, r2.x, r2.y, r1.z
  55: mul r1.z, r1.z, |r1.x|
  56: add r1.x, -|r1.x|, l(1.000000)
  57: mad r1.z, r2.x, r2.z, r1.z
  58: add r1.z, r1.z, l(0.000010)
  59: div r1.z, l(0.500000), r1.z
  60: mul r0.w, r0.w, r1.z
  61: mul r0.w, r0.w, l(3.141593)
  62: max r0.w, r0.w, l(0.000100)
  63: sqrt r0.w, r0.w
  64: mul r0.w, r2.x, r0.w
  65: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  66: mad r2.yzw, cb0[4].xxyz, r3.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  67: mul r3.xyz, r3.xyzx, cb0[4].xyzx
  68: mad r2.yzw, cb0[8].zzzz, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  69: dp3 r1.z, r2.yzwy, r2.yzwy
  70: ne r1.z, r1.z, l(0.000000)
  71: and r1.z, r1.z, l(0x3f800000)
  72: mul r0.w, r0.w, r1.z
  73: mul r4.xyz, r0.xyzx, r0.wwww
  74: add r0.w, -r1.w, l(1.000000)
  75: mul r1.z, r1.w, r1.w
  76: dp2 r1.y, r1.zzzz, r1.yyyy
  77: add r1.y, r1.y, l(-0.500000)
  78: mul r1.z, r0.w, r0.w
  79: mul r1.z, r1.z, r1.z
  80: mul r0.w, r0.w, r1.z
  81: add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  82: mad r2.yzw, r5.xxyz, r0.wwww, r2.yyzw
  83: mul r2.yzw, r2.yyzw, r4.xxyz
  84: mul r0.w, r1.x, r1.x
  85: mul r0.w, r0.w, r0.w
  86: mul r0.w, r1.x, r0.w
  87: mad r0.w, r1.y, r0.w, l(1.000000)
  88: add r1.x, -r2.x, l(1.000000)
  89: mul r1.z, r1.x, r1.x
  90: mul r1.z, r1.z, r1.z
  91: mul r1.x, r1.x, r1.z
  92: mad r1.x, r1.y, r1.x, l(1.000000)
  93: mul r0.w, r0.w, r1.x
  94: mul r0.w, r2.x, r0.w
  95: mul r0.xyz, r0.wwww, r0.xyzx
  96: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  97: mul r1.xyz, r0.wwww, r3.xyzx
  98: mad o0.xyz, r1.xyzx, r0.xyzx, r2.yzwy
  99: mov o0.w, l(1.000000)
 100: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE SHADOWS_SOFT 
-- Vertex shader for "d3d9":
// Stats: 34 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToLight at 11
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 18
Vector4 _LightPositionRange at 16
Vector4 _MainTex_ST at 17
Float _UVSec at 19
Vector4 _WorldSpaceCameraPos at 14
Vector4 _WorldSpaceLightPos0 at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       4
//   unity_WorldToObject  c8       3
//   unity_WorldToLight   c11      3
//   _WorldSpaceCameraPos c14      1
//   _WorldSpaceLightPos0 c15      1
//   _LightPositionRange  c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xyz
    mad r0, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul o5.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    add o7.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    mov r0.w, c20.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 33 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 99 math, 6 textures
Vector4 _Color at 3
Float _Glossiness at 5
Vector4 _LightColor0 at 2
Vector4 _LightPositionRange at 0
Vector4 _LightShadowData at 1
Float _Metallic at 4

Set 2D Texture "_MainTex" to slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   _LightPositionRange c0       1
//   _LightShadowData    c1       1
//   _LightColor0        c2       1
//   _Color              c3       1
//   _Metallic           c4       1
//   _Glossiness         c5       1
//   _MainTex            s0       1
//   _ShadowMapTexture   s1       1
//   _LightTexture0      s2       1
//

    ps_3_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 0.0078125
    def c7, -0.0078125, 0.0078125, 0.970000029, 1
    def c8, 0.25, 0.00100000005, 31.622776, -0.5
    def c9, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c10, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    def c11, 0, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dp3 r0.x, v6, v6
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    mul r0.x, r0.x, c0.w
    add r0.yzw, c6.w, v6.xxyz
    texld r1, r0.yzww, s1
    add r0.yzw, c7.xxxy, v6.xxyz
    texld r2, r0.yzww, s1
    mov r1.y, r2.x
    add r0.yzw, c7.xxyx, v6.xxyz
    texld r2, r0.yzww, s1
    mov r1.z, r2.x
    add r0.yzw, c7.xyxx, v6.xxyz
    texld r2, r0.yzww, s1
    mov r1.w, r2.x
    mad r0, r0.x, -c7.z, r1
    mov r1.w, c7.w
    cmp_pp r0, r0, r1.w, c1.x
    dp4_pp r0.x, r0, c8.x
    dp3 r0.y, v5, v5
    texld r2, r0.y, s2
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.xyz, r0.x, c2
    nrm_pp r1.xyz, v1
    mov_pp r2.x, v2.w
    mov_pp r2.y, v3.w
    mov_pp r2.z, v4.w
    dp3_pp r0.w, r2, r2
    rsq_pp r0.w, r0.w
    mad_pp r3.xyz, r2, r0.w, -r1
    mul_pp r2.xyz, r0.w, r2
    dp3_pp r0.w, r3, r3
    add r2.w, -r0.w, c8.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c8.z, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r3
    dp3_sat_pp r2.w, r2, r3
    dp3_sat_pp r2.x, r4, r2
    dp3_pp r1.x, r4, -r1
    add_pp r1.y, r1.w, -c5.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.w, r1.z, r1.z
    mad_pp r2.y, r0.w, r1.w, -r0.w
    mad_pp r0.w, r2.y, r0.w, c7.w
    mad r0.w, r0.w, r0.w, c9.z
    rcp r0.w, r0.w
    mul r1.w, r1.w, c9.y
    mul_pp r0.w, r0.w, r1.w
    mad_pp r1.w, r1.y, -r1.y, c7.w
    mad_pp r2.y, r1_abs.x, r1.w, r1.z
    mad_pp r1.z, r2.x, r1.w, r1.z
    mul_pp r1.z, r1.z, r1_abs.x
    add_pp r1.x, -r1_abs.x, c7.w
    mad r1.z, r2.x, r2.y, r1.z
    add r1.z, r1.z, c9.x
    rcp r1.z, r1.z
    mul_pp r1.z, r1.z, -c8.w
    mul r0.w, r0.w, r1.z
    mul_pp r1.z, r0.w, c9.w
    mad r0.w, r0.w, -c10.x, c10.y
    rsq r1.z, r1.z
    rcp_pp r1.z, r1.z
    cmp_pp r0.w, r0.w, c10.z, r1.z
    mul_pp r0.w, r2.x, r0.w
    texld r3, v0, s0
    mov r4.xyz, c6
    mad_pp r5.xyz, c3, r3, r4.x
    mul_pp r3.xyz, r3, c3
    mad_pp r4.xyw, c4.x, r5.xyzz, r4.y
    dp3_pp r1.z, r4.xyww, r4.xyww
    cmp r1.z, -r1.z, c11.x, c11.y
    mul_pp r0.w, r0.w, r1.z
    mul_pp r5.xyz, r0, r0.w
    add_pp r0.w, -r2.w, c7.w
    mul_pp r1.z, r2.w, r2.w
    dp2add_pp r1.y, r1.z, r1.y, c8.w
    mul_pp r1.z, r0.w, r0.w
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.z
    lrp_pp r2.yzw, r0.w, c7.w, r4.xxyw
    mul_pp r2.yzw, r2, r5.xxyz
    mul_pp r0.w, r1.x, r1.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r0.w, r1.y, r0.w, c7.w
    add_pp r1.x, -r2.x, c7.w
    mul_pp r1.z, r1.x, r1.x
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.x, r1.x, r1.z
    mad_pp r1.x, r1.y, r1.x, c7.w
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c4.x, -r4.z, r4.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2.yzww
    mov_pp oC0.w, c7.w

// approximately 104 instruction slots used (6 texture, 98 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 28 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  15: mov r1.w, l(0)
  16: mov o3.xyzw, r1.wwwx
  17: mov o4.xyzw, r1.wwwy
  18: mov o5.w, r1.z
  19: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  20: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  21: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  22: dp3 r0.w, r0.xyzx, r0.xyzx
  23: rsq r0.w, r0.w
  24: mul o5.xyz, r0.wwww, r0.xyzx
  25: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  26: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  27: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  28: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  29: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  30: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  31: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  32: mad o6.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 85 math, 6 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set CUBE Texture "_ShadowMapTexture" to slot 2

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v7.xyzx, v7.xyzx
   1: sqrt r0.x, r0.x
   2: mul r0.x, r0.x, cb1[1].w
   3: mul r0.x, r0.x, l(0.970000)
   4: add r0.yzw, v7.xxyz, l(0.000000, 0.007813, 0.007813, 0.007813)
   5: sample r1.xyzw, r0.yzwy, t2.xyzw, s1
   6: add r0.yzw, v7.xxyz, l(0.000000, -0.007813, -0.007813, 0.007813)
   7: sample r2.xyzw, r0.yzwy, t2.xyzw, s1
   8: mov r1.y, r2.x
   9: add r0.yzw, v7.xxyz, l(0.000000, -0.007813, 0.007813, -0.007813)
  10: sample r2.xyzw, r0.yzwy, t2.xyzw, s1
  11: mov r1.z, r2.x
  12: add r0.yzw, v7.xxyz, l(0.000000, 0.007813, -0.007813, -0.007813)
  13: sample r2.xyzw, r0.yzwy, t2.xyzw, s1
  14: mov r1.w, r2.x
  15: lt r0.xyzw, r1.xyzw, r0.xxxx
  16: movc r0.xyzw, r0.xyzw, cb2[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  17: dp4 r0.x, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  18: dp3 r0.y, v6.xyzx, v6.xyzx
  19: sample r1.xyzw, r0.yyyy, t1.xyzw, s2
  20: mul r0.x, r0.x, r1.x
  21: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  22: dp3 r0.w, v2.xyzx, v2.xyzx
  23: rsq r0.w, r0.w
  24: mul r1.xyz, r0.wwww, v2.xyzx
  25: mov r2.x, v3.w
  26: mov r2.y, v4.w
  27: mov r2.z, v5.w
  28: dp3 r0.w, r2.xyzx, r2.xyzx
  29: rsq r0.w, r0.w
  30: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  31: mul r2.xyz, r0.wwww, r2.xyzx
  32: dp3 r0.w, r3.xyzx, r3.xyzx
  33: max r0.w, r0.w, l(0.001000)
  34: rsq r0.w, r0.w
  35: mul r3.xyz, r0.wwww, r3.xyzx
  36: dp3 r0.w, v5.xyzx, v5.xyzx
  37: rsq r0.w, r0.w
  38: mul r4.xyz, r0.wwww, v5.xyzx
  39: dp3_sat r0.w, r4.xyzx, r3.xyzx
  40: dp3_sat r1.w, r2.xyzx, r3.xyzx
  41: dp3_sat r2.x, r4.xyzx, r2.xyzx
  42: dp3 r1.x, r4.xyzx, -r1.xyzx
  43: add r1.y, -cb0[8].w, l(1.000000)
  44: mul r1.z, r1.y, r1.y
  45: mul r2.y, r1.z, r1.z
  46: mad r2.z, r0.w, r2.y, -r0.w
  47: mad r0.w, r2.z, r0.w, l(1.000000)
  48: mad r0.w, r0.w, r0.w, l(0.000000)
  49: mul r2.y, r2.y, l(0.318310)
  50: div r0.w, r2.y, r0.w
  51: mad r2.y, -r1.y, r1.y, l(1.000000)
  52: mad r2.z, |r1.x|, r2.y, r1.z
  53: mad r1.z, r2.x, r2.y, r1.z
  54: mul r1.z, r1.z, |r1.x|
  55: add r1.x, -|r1.x|, l(1.000000)
  56: mad r1.z, r2.x, r2.z, r1.z
  57: add r1.z, r1.z, l(0.000010)
  58: div r1.z, l(0.500000), r1.z
  59: mul r0.w, r0.w, r1.z
  60: mul r0.w, r0.w, l(3.141593)
  61: max r0.w, r0.w, l(0.000100)
  62: sqrt r0.w, r0.w
  63: mul r0.w, r2.x, r0.w
  64: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  65: mad r2.yzw, cb0[4].xxyz, r3.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  66: mul r3.xyz, r3.xyzx, cb0[4].xyzx
  67: mad r2.yzw, cb0[8].zzzz, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  68: dp3 r1.z, r2.yzwy, r2.yzwy
  69: ne r1.z, r1.z, l(0.000000)
  70: and r1.z, r1.z, l(0x3f800000)
  71: mul r0.w, r0.w, r1.z
  72: mul r4.xyz, r0.xyzx, r0.wwww
  73: add r0.w, -r1.w, l(1.000000)
  74: mul r1.z, r1.w, r1.w
  75: dp2 r1.y, r1.zzzz, r1.yyyy
  76: add r1.y, r1.y, l(-0.500000)
  77: mul r1.z, r0.w, r0.w
  78: mul r1.z, r1.z, r1.z
  79: mul r0.w, r0.w, r1.z
  80: add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  81: mad r2.yzw, r5.xxyz, r0.wwww, r2.yyzw
  82: mul r2.yzw, r2.yyzw, r4.xxyz
  83: mul r0.w, r1.x, r1.x
  84: mul r0.w, r0.w, r0.w
  85: mul r0.w, r1.x, r0.w
  86: mad r0.w, r1.y, r0.w, l(1.000000)
  87: add r1.x, -r2.x, l(1.000000)
  88: mul r1.z, r1.x, r1.x
  89: mul r1.z, r1.z, r1.z
  90: mul r1.x, r1.x, r1.z
  91: mad r1.x, r1.y, r1.x, l(1.000000)
  92: mul r0.w, r0.w, r1.x
  93: mul r0.w, r2.x, r0.w
  94: mul r0.xyz, r0.wwww, r0.xyzx
  95: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  96: mul r1.xyz, r0.wwww, r3.xyzx
  97: mad o0.xyz, r1.xyzx, r0.xyzx, r2.yzwy
  98: mov o0.w, l(1.000000)
  99: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
-- Vertex shader for "d3d9":
// Stats: 34 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToLight at 11
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 18
Vector4 _LightPositionRange at 16
Vector4 _MainTex_ST at 17
Float _UVSec at 19
Vector4 _WorldSpaceCameraPos at 14
Vector4 _WorldSpaceLightPos0 at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       4
//   unity_WorldToObject  c8       3
//   unity_WorldToLight   c11      3
//   _WorldSpaceCameraPos c14      1
//   _WorldSpaceLightPos0 c15      1
//   _LightPositionRange  c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xyz
    mad r0, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c14
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul o5.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 o6.x, c11, r0
    dp4 o6.y, c12, r0
    dp4 o6.z, c13, r0
    add o7.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    mov r0.w, c20.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 33 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 100 math, 7 textures
Vector4 _Color at 3
Float _Glossiness at 5
Vector4 _LightColor0 at 2
Vector4 _LightPositionRange at 0
Vector4 _LightShadowData at 1
Float _Metallic at 4

Set 2D Texture "_MainTex" to slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   _LightPositionRange c0       1
//   _LightShadowData    c1       1
//   _LightColor0        c2       1
//   _Color              c3       1
//   _Metallic           c4       1
//   _Glossiness         c5       1
//   _MainTex            s0       1
//   _ShadowMapTexture   s1       1
//   _LightTexture0      s2       1
//   _LightTextureB0     s3       1
//

    ps_3_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 0.0078125
    def c7, -0.0078125, 0.0078125, 0.970000029, 1
    def c8, 0.25, 0.00100000005, 31.622776, -0.5
    def c9, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c10, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    def c11, 0, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_cube s2
    dcl_2d s3
    dp3 r0.x, v6, v6
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    mul r0.x, r0.x, c0.w
    add r0.yzw, c6.w, v6.xxyz
    texld r1, r0.yzww, s1
    add r0.yzw, c7.xxxy, v6.xxyz
    texld r2, r0.yzww, s1
    mov r1.y, r2.x
    add r0.yzw, c7.xxyx, v6.xxyz
    texld r2, r0.yzww, s1
    mov r1.z, r2.x
    add r0.yzw, c7.xyxx, v6.xxyz
    texld r2, r0.yzww, s1
    mov r1.w, r2.x
    mad r0, r0.x, -c7.z, r1
    mov r1.w, c7.w
    cmp_pp r0, r0, r1.w, c1.x
    dp4_pp r0.x, r0, c8.x
    dp3 r0.y, v5, v5
    texld r2, r0.y, s3
    texld r3, v5, s2
    mul r0.y, r2.x, r3.w
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c2
    nrm_pp r1.xyz, v1
    mov_pp r2.x, v2.w
    mov_pp r2.y, v3.w
    mov_pp r2.z, v4.w
    dp3_pp r0.w, r2, r2
    rsq_pp r0.w, r0.w
    mad_pp r3.xyz, r2, r0.w, -r1
    mul_pp r2.xyz, r0.w, r2
    dp3_pp r0.w, r3, r3
    add r2.w, -r0.w, c8.y
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c8.z, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r3
    dp3_sat_pp r2.w, r2, r3
    dp3_sat_pp r2.x, r4, r2
    dp3_pp r1.x, r4, -r1
    add_pp r1.y, r1.w, -c5.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r1.w, r1.z, r1.z
    mad_pp r2.y, r0.w, r1.w, -r0.w
    mad_pp r0.w, r2.y, r0.w, c7.w
    mad r0.w, r0.w, r0.w, c9.z
    rcp r0.w, r0.w
    mul r1.w, r1.w, c9.y
    mul_pp r0.w, r0.w, r1.w
    mad_pp r1.w, r1.y, -r1.y, c7.w
    mad_pp r2.y, r1_abs.x, r1.w, r1.z
    mad_pp r1.z, r2.x, r1.w, r1.z
    mul_pp r1.z, r1.z, r1_abs.x
    add_pp r1.x, -r1_abs.x, c7.w
    mad r1.z, r2.x, r2.y, r1.z
    add r1.z, r1.z, c9.x
    rcp r1.z, r1.z
    mul_pp r1.z, r1.z, -c8.w
    mul r0.w, r0.w, r1.z
    mul_pp r1.z, r0.w, c9.w
    mad r0.w, r0.w, -c10.x, c10.y
    rsq r1.z, r1.z
    rcp_pp r1.z, r1.z
    cmp_pp r0.w, r0.w, c10.z, r1.z
    mul_pp r0.w, r2.x, r0.w
    texld r3, v0, s0
    mov r4.xyz, c6
    mad_pp r5.xyz, c3, r3, r4.x
    mul_pp r3.xyz, r3, c3
    mad_pp r4.xyw, c4.x, r5.xyzz, r4.y
    dp3_pp r1.z, r4.xyww, r4.xyww
    cmp r1.z, -r1.z, c11.x, c11.y
    mul_pp r0.w, r0.w, r1.z
    mul_pp r5.xyz, r0, r0.w
    add_pp r0.w, -r2.w, c7.w
    mul_pp r1.z, r2.w, r2.w
    dp2add_pp r1.y, r1.z, r1.y, c8.w
    mul_pp r1.z, r0.w, r0.w
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.z
    lrp_pp r2.yzw, r0.w, c7.w, r4.xxyw
    mul_pp r2.yzw, r2, r5.xxyz
    mul_pp r0.w, r1.x, r1.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r0.w, r1.y, r0.w, c7.w
    add_pp r1.x, -r2.x, c7.w
    mul_pp r1.z, r1.x, r1.x
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.x, r1.x, r1.z
    mad_pp r1.x, r1.y, r1.x, c7.w
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c4.x, -r4.z, r4.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2.yzww
    mov_pp oC0.w, c7.w

// approximately 106 instruction slots used (7 texture, 99 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 28 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  15: mov r1.w, l(0)
  16: mov o3.xyzw, r1.wwwx
  17: mov o4.xyzw, r1.wwwy
  18: mov o5.w, r1.z
  19: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  20: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  21: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  22: dp3 r0.w, r0.xyzx, r0.xyzx
  23: rsq r0.w, r0.w
  24: mul o5.xyz, r0.wwww, r0.xyzx
  25: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  26: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  27: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  28: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  29: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  30: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  31: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  32: mad o6.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 86 math, 7 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTextureB0" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 3

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v7.xyzx, v7.xyzx
   1: sqrt r0.x, r0.x
   2: mul r0.x, r0.x, cb1[1].w
   3: mul r0.x, r0.x, l(0.970000)
   4: add r0.yzw, v7.xxyz, l(0.000000, 0.007813, 0.007813, 0.007813)
   5: sample r1.xyzw, r0.yzwy, t3.xyzw, s1
   6: add r0.yzw, v7.xxyz, l(0.000000, -0.007813, -0.007813, 0.007813)
   7: sample r2.xyzw, r0.yzwy, t3.xyzw, s1
   8: mov r1.y, r2.x
   9: add r0.yzw, v7.xxyz, l(0.000000, -0.007813, 0.007813, -0.007813)
  10: sample r2.xyzw, r0.yzwy, t3.xyzw, s1
  11: mov r1.z, r2.x
  12: add r0.yzw, v7.xxyz, l(0.000000, 0.007813, -0.007813, -0.007813)
  13: sample r2.xyzw, r0.yzwy, t3.xyzw, s1
  14: mov r1.w, r2.x
  15: lt r0.xyzw, r1.xyzw, r0.xxxx
  16: movc r0.xyzw, r0.xyzw, cb2[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  17: dp4 r0.x, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  18: dp3 r0.y, v6.xyzx, v6.xyzx
  19: sample r1.xyzw, r0.yyyy, t1.xyzw, s3
  20: sample r2.xyzw, v6.xyzx, t2.xyzw, s2
  21: mul r0.y, r1.x, r2.w
  22: mul r0.x, r0.x, r0.y
  23: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  24: dp3 r0.w, v2.xyzx, v2.xyzx
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, v2.xyzx
  27: mov r2.x, v3.w
  28: mov r2.y, v4.w
  29: mov r2.z, v5.w
  30: dp3 r0.w, r2.xyzx, r2.xyzx
  31: rsq r0.w, r0.w
  32: mad r3.xyz, r2.xyzx, r0.wwww, -r1.xyzx
  33: mul r2.xyz, r0.wwww, r2.xyzx
  34: dp3 r0.w, r3.xyzx, r3.xyzx
  35: max r0.w, r0.w, l(0.001000)
  36: rsq r0.w, r0.w
  37: mul r3.xyz, r0.wwww, r3.xyzx
  38: dp3 r0.w, v5.xyzx, v5.xyzx
  39: rsq r0.w, r0.w
  40: mul r4.xyz, r0.wwww, v5.xyzx
  41: dp3_sat r0.w, r4.xyzx, r3.xyzx
  42: dp3_sat r1.w, r2.xyzx, r3.xyzx
  43: dp3_sat r2.x, r4.xyzx, r2.xyzx
  44: dp3 r1.x, r4.xyzx, -r1.xyzx
  45: add r1.y, -cb0[8].w, l(1.000000)
  46: mul r1.z, r1.y, r1.y
  47: mul r2.y, r1.z, r1.z
  48: mad r2.z, r0.w, r2.y, -r0.w
  49: mad r0.w, r2.z, r0.w, l(1.000000)
  50: mad r0.w, r0.w, r0.w, l(0.000000)
  51: mul r2.y, r2.y, l(0.318310)
  52: div r0.w, r2.y, r0.w
  53: mad r2.y, -r1.y, r1.y, l(1.000000)
  54: mad r2.z, |r1.x|, r2.y, r1.z
  55: mad r1.z, r2.x, r2.y, r1.z
  56: mul r1.z, r1.z, |r1.x|
  57: add r1.x, -|r1.x|, l(1.000000)
  58: mad r1.z, r2.x, r2.z, r1.z
  59: add r1.z, r1.z, l(0.000010)
  60: div r1.z, l(0.500000), r1.z
  61: mul r0.w, r0.w, r1.z
  62: mul r0.w, r0.w, l(3.141593)
  63: max r0.w, r0.w, l(0.000100)
  64: sqrt r0.w, r0.w
  65: mul r0.w, r2.x, r0.w
  66: sample r3.xyzw, v1.xyxx, t0.xyzw, s0
  67: mad r2.yzw, cb0[4].xxyz, r3.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  68: mul r3.xyz, r3.xyzx, cb0[4].xyzx
  69: mad r2.yzw, cb0[8].zzzz, r2.yyzw, l(0.000000, 0.220916, 0.220916, 0.220916)
  70: dp3 r1.z, r2.yzwy, r2.yzwy
  71: ne r1.z, r1.z, l(0.000000)
  72: and r1.z, r1.z, l(0x3f800000)
  73: mul r0.w, r0.w, r1.z
  74: mul r4.xyz, r0.xyzx, r0.wwww
  75: add r0.w, -r1.w, l(1.000000)
  76: mul r1.z, r1.w, r1.w
  77: dp2 r1.y, r1.zzzz, r1.yyyy
  78: add r1.y, r1.y, l(-0.500000)
  79: mul r1.z, r0.w, r0.w
  80: mul r1.z, r1.z, r1.z
  81: mul r0.w, r0.w, r1.z
  82: add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  83: mad r2.yzw, r5.xxyz, r0.wwww, r2.yyzw
  84: mul r2.yzw, r2.yyzw, r4.xxyz
  85: mul r0.w, r1.x, r1.x
  86: mul r0.w, r0.w, r0.w
  87: mul r0.w, r1.x, r0.w
  88: mad r0.w, r1.y, r0.w, l(1.000000)
  89: add r1.x, -r2.x, l(1.000000)
  90: mul r1.z, r1.x, r1.x
  91: mul r1.z, r1.z, r1.z
  92: mul r1.x, r1.x, r1.z
  93: mad r1.x, r1.y, r1.x, l(1.000000)
  94: mul r0.w, r0.w, r1.x
  95: mul r0.w, r2.x, r0.w
  96: mul r0.xyz, r0.wwww, r0.xyzx
  97: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  98: mul r1.xyz, r0.wwww, r3.xyzx
  99: mad o0.xyz, r1.xyzx, r0.xyzx, r2.yzwy
 100: mov o0.w, l(1.000000)
 101: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //         d3d9: 26 avg math (11..42)
 //        d3d11: 22 avg math (9..35)
 // Stats for Fragment shader:
 //         d3d9: 3 avg math (1..5)
 //        d3d11: 4 math
 Pass {
  Name "SHADOWCASTER"
  Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: SHADOWS_DEPTH 
-- Vertex shader for "d3d9":
// Stats: 42 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_MatrixVP at 4
Matrix4x3 unity_ObjectToWorld at 8
Matrix4x3 unity_WorldToObject at 11
Vector4 _WorldSpaceLightPos0 at 14
Vector4 unity_LightShadowBias at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_LightShadowBias;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   glstate_matrix_mvp    c0       4
//   unity_MatrixVP        c4       4
//   unity_ObjectToWorld   c8       3
//   unity_WorldToObject   c11      3
//   _WorldSpaceLightPos0  c14      1
//   unity_LightShadowBias c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_position o0
    abs r0.x, c15.z
    slt r0.x, -r0.x, r0.x
    mul r0.yzw, c12.xxyz, v1.y
    mad r0.yzw, v1.x, c11.xxyz, r0
    mad r0.yzw, v1.z, c13.xxyz, r0
    nrm r1.xyz, r0.yzww
    mad r2, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r3.x, c8, r2
    dp4 r3.y, c9, r2
    dp4 r3.z, c10, r2
    mad r0.yzw, r3.xxyz, -c14.w, c14.xxyz
    nrm r4.xyz, r0.yzww
    dp3 r0.y, r1, r4
    mad r0.y, r0.y, -r0.y, c16.x
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    mul r0.y, r0.y, c15.z
    mad r1.xyz, r1, -r0.y, r3
    mov r1.w, c16.x
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    dp4 r1.x, c0, r2
    dp4 r1.y, c1, r2
    dp4 r1.z, c2, r2
    dp4 r1.w, c3, r2
    lrp r2, r0.x, r3, r1
    rcp r0.x, r2.w
    mul_sat r0.x, r0.x, c15.x
    add r0.x, r0.x, r2.z
    mov r5.xyw, r2
    max r0.y, r0.x, c16.y
    add r0.y, -r0.x, r0.y
    mad r5.z, c15.y, r0.y, r0.x
    mad o0.xy, r5.w, c255, r5
    mov o0.zw, r5

// approximately 41 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 1 math
Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
    ps_3_0
    def c0, 0, 0, 0, 0
    mov_pp oC0, c0.x

// approximately 1 instruction slot used


-- Vertex shader for "d3d11":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityLighting" (720 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 2 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}
Constant Buffer "UnityPerFrame" (352 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[19], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: mul r0.xyz, v0.yyyy, cb2[13].xyzx
   1: mad r0.xyz, cb2[12].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[14].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[15].xyzx
   4: mad r1.xyz, -r0.xyzx, cb0[0].wwww, cb0[0].xyzx
   5: dp3 r0.w, r1.xyzx, r1.xyzx
   6: rsq r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: dp3 r2.x, v1.xyzx, cb2[16].xyzx
   9: dp3 r2.y, v1.xyzx, cb2[17].xyzx
  10: dp3 r2.z, v1.xyzx, cb2[18].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r1.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r2.xyzx, r0.wwww, r0.xyzx
  19: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  20: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  21: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  22: add r0.xyzw, r0.xyzw, cb3[20].xyzw
  23: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
  24: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
  25: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
  26: add r1.xyzw, r1.xyzw, cb2[3].xyzw
  27: ne r2.x, cb1[5].z, l(0.000000)
  28: movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw
  29: div r1.x, cb1[5].x, r0.w
  30: min r1.x, r1.x, l(0.000000)
  31: max r1.x, r1.x, l(-1.000000)
  32: add r0.z, r0.z, r1.x
  33: min r1.x, r0.w, r0.z
  34: mov o0.xyw, r0.xyxw
  35: add r0.x, -r0.z, r1.x
  36: mad o0.z, cb1[5].y, r0.x, r0.z
  37: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SHADOWS_CUBE 
-- Vertex shader for "d3d9":
// Stats: 11 math
Uses vertex data channel "Vertex"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Vector4 _LightPositionRange at 7

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _LightPositionRange;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   _LightPositionRange c7       1
//

    vs_3_0
    def c8, 1, 0, 0, 0
    dcl_position v0
    dcl_texcoord o0.xyz
    dcl_position o1
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o0.xyz, r0, -c7
    mad r0, v0.xyzx, c8.xxxy, c8.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    mad o1.xy, r1.w, c255, r1
    mov o1.zw, r1

// approximately 11 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 5 math
Vector4 _LightPositionRange at 0
Vector4 unity_LightShadowBias at 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _LightPositionRange;
//   float4 unity_LightShadowBias;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   _LightPositionRange   c0       1
//   unity_LightShadowBias c1       1
//

    ps_3_0
    dcl_texcoord v0.xyz
    dp3 r0.x, v0, v0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.x, r0.x, c1.x
    mul_pp oC0, r0.x, c0.w

// approximately 5 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 9 math
Uses vertex data channel "Vertex"

Constant Buffer "UnityLighting" (720 bytes) on slot 0 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 1 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// SV_POSITION              0   xyzw        1      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[2], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyzw
      dcl_output o0.xyz
      dcl_output_siv o1.xyzw, position
      dcl_temps 1
   0: mul r0.xyz, v0.yyyy, cb1[13].xyzx
   1: mad r0.xyz, cb1[12].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[14].xyzx, v0.zzzz, r0.xyzx
   3: mad r0.xyz, cb1[15].xyzx, v0.wwww, r0.xyzx
   4: add o0.xyz, r0.xyzx, -cb0[1].xyzx
   5: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   6: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   8: add o1.xyzw, r0.xyzw, cb1[3].xyzw
   9: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 4 math
Constant Buffer "UnityLighting" (720 bytes) on slot 0 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[2], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_input_ps linear v0.xyz
      dcl_output o0.xyzw
      dcl_temps 1
   0: dp3 r0.x, v0.xyzx, v0.xyzx
   1: sqrt r0.x, r0.x
   2: add r0.x, r0.x, cb1[5].x
   3: mul o0.xyzw, r0.xxxx, cb0[1].wwww
   4: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //         d3d9: 44 avg math (37..48)
 //        d3d11: 31 avg math (25..35)
 // Stats for Fragment shader:
 //         d3d9: 34 avg math (32..36), 2 avg texture (2..3)
 //        d3d11: 42 avg math (41..43), 5 avg texture (5..6), 2 branch
 Pass {
  Name "DEFERRED"
  Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" "PerformanceChecks"="False" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
No keywords set in this variant.
-- Vertex shader for "d3d9":
// Stats: 37 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 16
Vector4 _MainTex_ST at 15
Float _UVSec at 17
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHBb at 13
Vector4 unity_SHBg at 12
Vector4 unity_SHBr at 11
Vector4 unity_SHC at 14

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       3
//   unity_WorldToObject  c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    mad r0, v0.xyzx, c18.xxxy, c18.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.y
    mov o4, c18.y
    mov o5.w, c18.y
    mov o6.w, c18.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 35 math, 2 textures
Vector4 _Color at 3
Float _Glossiness at 5
Float _Metallic at 4
Float _OcclusionStrength at 6
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_SHAr         c0       1
//   unity_SHAg         c1       1
//   unity_SHAb         c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   _OcclusionStrength c6       1
//   _MainTex           s0       1
//   _OcclusionMap      s1       1
//

    ps_3_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 0, 0.416666657, 1.05499995, -0.0549999997
    def c9, 0.5, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c7
    mad_pp r2.xyz, c3, r0, r1.x
    mul_pp r0.xyz, r0, c3
    mad_pp oC1.xyz, c4.x, r2, r1.y
    nrm_pp r2.xyz, v1
    mov_pp r2.w, c7.w
    dp4_pp r3.x, c0, r2
    dp4_pp r3.y, c1, r2
    dp4_pp r3.z, c2, r2
    mad_pp oC2, r2, c9.xxxy, c9.xxxz
    add_pp r2.xyz, r3, v2
    max_pp r3.xyz, r2, c8.x
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c8.y
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c8.z, c8.w
    max_pp r3.xyz, r2, c8.x
    texld_pp r2, v0, s1
    add_pp r0.w, r1.w, -c6.x
    mad_pp r2.w, r2.y, c6.x, r0.w
    mul_pp r1.xyw, r2.w, r3.xyzz
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r0
    mul_pp r0.xyz, r1.xyww, r2
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c5.x
    mov_pp oC3.w, c7.w

// approximately 37 instruction slots used (2 texture, 35 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 25 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  17: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  18: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul r0.xyz, r0.wwww, r0.xyzx
  22: mov o5.xyz, r0.xyzx
  23: mov o5.w, l(0)
  24: mul r0.w, r0.y, r0.y
  25: mad r0.w, r0.x, r0.x, -r0.w
  26: mul r1.xyzw, r0.yzzx, r0.xyzz
  27: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  28: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  29: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  30: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  31: mov o6.w, l(0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 42 math, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v7.yyyy, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v7.xxxx, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v7.zzzz, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   movc r2.xyz, r2.xxxx, r2.yzwy, v7.xyzx
  20:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  21:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  22:   mul r2.y, r2.y, l(0.250000)
  23:   mul r3.x, cb2[0].z, l(0.500000)
  24:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  25:   max r2.y, r2.y, r3.x
  26:   min r2.x, r3.y, r2.y
  27:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  28:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  29:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  30:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  31:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  32:   mov r1.w, l(1.000000)
  33:   dp4 r3.x, r3.xyzw, r1.xyzw
  34:   dp4 r3.y, r4.xyzw, r1.xyzw
  35:   dp4 r3.z, r2.xyzw, r1.xyzw
  36: else 
  37:   mov r1.w, l(1.000000)
  38:   dp4 r3.x, cb1[38].xyzw, r1.xyzw
  39:   dp4 r3.y, cb1[39].xyzw, r1.xyzw
  40:   dp4 r3.z, cb1[40].xyzw, r1.xyzw
  41: endif 
  42: add r2.xyz, r3.xyzx, v6.xyzx
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r2.xyz, r2.xyzx
  45: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r2.xyz, r2.xyzx
  47: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mul r2.xyz, r0.wwww, r2.xyzx
  50: mul r2.xyz, r0.xyzx, r2.xyzx
  51: exp o3.xyz, -r2.xyzx
  52: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  53: mov o0.xyzw, r0.xyzw
  54: mov o1.w, cb0[8].w
  55: mov o2.w, l(1.000000)
  56: mov o3.w, l(1.000000)
  57: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

//////////////////////////////////////////////////////
Keywords set in this variant: _EMISSION 
-- Vertex shader for "d3d9":
// Stats: 37 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 16
Vector4 _MainTex_ST at 15
Float _UVSec at 17
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHBb at 13
Vector4 unity_SHBg at 12
Vector4 unity_SHBr at 11
Vector4 unity_SHC at 14

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       3
//   unity_WorldToObject  c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    mad r0, v0.xyzx, c18.xxxy, c18.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.y
    mov o4, c18.y
    mov o5.w, c18.y
    mov o6.w, c18.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 36 math, 3 textures
Vector4 _Color at 3
Vector4 _EmissionColor at 7
Float _Glossiness at 5
Float _Metallic at 4
Float _OcclusionStrength at 6
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "_EmissionMap" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_SHAr         c0       1
//   unity_SHAg         c1       1
//   unity_SHAb         c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   _OcclusionStrength c6       1
//   _EmissionColor     c7       1
//   _MainTex           s0       1
//   _OcclusionMap      s1       1
//   _EmissionMap       s2       1
//

    ps_3_0
    def c8, -0.220916301, 0.220916301, 0.779083729, 1
    def c9, 0, 0.416666657, 1.05499995, -0.0549999997
    def c10, 0.5, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c8
    mad_pp r2.xyz, c3, r0, r1.x
    mul_pp r0.xyz, r0, c3
    mad_pp oC1.xyz, c4.x, r2, r1.y
    nrm_pp r2.xyz, v1
    mov_pp r2.w, c8.w
    dp4_pp r3.x, c0, r2
    dp4_pp r3.y, c1, r2
    dp4_pp r3.z, c2, r2
    mad_pp oC2, r2, c10.xxxy, c10.xxxz
    add_pp r2.xyz, r3, v2
    max_pp r3.xyz, r2, c9.x
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c9.y
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c9.z, c9.w
    max_pp r3.xyz, r2, c9.x
    texld_pp r2, v0, s1
    add_pp r0.w, r1.w, -c6.x
    mad_pp r2.w, r2.y, c6.x, r0.w
    mul_pp r1.xyw, r2.w, r3.xyzz
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c7
    mad_pp r0.xyz, r2, r1.xyww, r0
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c5.x
    mov_pp oC3.w, c8.w

// approximately 39 instruction slots used (3 texture, 36 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 25 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  17: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  18: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul r0.xyz, r0.wwww, r0.xyzx
  22: mov o5.xyz, r0.xyzx
  23: mov o5.w, l(0)
  24: mul r0.w, r0.y, r0.y
  25: mad r0.w, r0.x, r0.x, -r0.w
  26: mul r1.xyzw, r0.yzzx, r0.xyzz
  27: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  28: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  29: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  30: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  31: mov o6.w, l(0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 43 math, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "_EmissionMap" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v7.yyyy, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v7.xxxx, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v7.zzzz, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   movc r2.xyz, r2.xxxx, r2.yzwy, v7.xyzx
  20:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  21:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  22:   mul r2.y, r2.y, l(0.250000)
  23:   mul r3.x, cb2[0].z, l(0.500000)
  24:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  25:   max r2.y, r2.y, r3.x
  26:   min r2.x, r3.y, r2.y
  27:   sample r3.xyzw, r2.xzwx, t3.xyzw, s0
  28:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  29:   sample r4.xyzw, r4.xyzx, t3.xyzw, s0
  30:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  31:   sample r2.xyzw, r2.xyzx, t3.xyzw, s0
  32:   mov r1.w, l(1.000000)
  33:   dp4 r3.x, r3.xyzw, r1.xyzw
  34:   dp4 r3.y, r4.xyzw, r1.xyzw
  35:   dp4 r3.z, r2.xyzw, r1.xyzw
  36: else 
  37:   mov r1.w, l(1.000000)
  38:   dp4 r3.x, cb1[38].xyzw, r1.xyzw
  39:   dp4 r3.y, cb1[39].xyzw, r1.xyzw
  40:   dp4 r3.z, cb1[40].xyzw, r1.xyzw
  41: endif 
  42: add r2.xyz, r3.xyzx, v6.xyzx
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r2.xyz, r2.xyzx
  45: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r2.xyz, r2.xyzx
  47: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mul r2.xyz, r0.wwww, r2.xyzx
  50: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  51: mul r3.xyz, r3.xyzx, cb0[10].xyzx
  52: mad r2.xyz, r0.xyzx, r2.xyzx, r3.xyzx
  53: exp o3.xyz, -r2.xyzx
  54: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  55: mov o0.xyzw, r0.xyzw
  56: mov o1.w, cb0[8].w
  57: mov o2.w, l(1.000000)
  58: mov o3.w, l(1.000000)
  59: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

-- Vertex shader for "d3d9":
// Stats: 48 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord3"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHBb at 13
Vector4 unity_SHBg at 12
Vector4 unity_SHBr at 11
Vector4 unity_SHC at 14
Vector4 unity_WorldTransformParams at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   unity_ObjectToWorld        c4       3
//   unity_WorldToObject        c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, v1.x, c7.xxyz, r0
    mad r0.yzw, v1.z, c9.xxyz, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.y
    mov o4.w, c19.y
    mov o5.w, c19.y
    mov o6.w, c19.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 47 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 35 math, 2 textures
Vector4 _Color at 3
Float _Glossiness at 5
Float _Metallic at 4
Float _OcclusionStrength at 6
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_SHAr         c0       1
//   unity_SHAg         c1       1
//   unity_SHAb         c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   _OcclusionStrength c6       1
//   _MainTex           s0       1
//   _OcclusionMap      s1       1
//

    ps_3_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 0, 0.416666657, 1.05499995, -0.0549999997
    def c9, 0.5, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c7
    mad_pp r2.xyz, c3, r0, r1.x
    mul_pp r0.xyz, r0, c3
    mad_pp oC1.xyz, c4.x, r2, r1.y
    nrm_pp r2.xyz, v1
    mov_pp r2.w, c7.w
    dp4_pp r3.x, c0, r2
    dp4_pp r3.y, c1, r2
    dp4_pp r3.z, c2, r2
    mad_pp oC2, r2, c9.xxxy, c9.xxxz
    add_pp r2.xyz, r3, v2
    max_pp r3.xyz, r2, c8.x
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c8.y
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c8.z, c8.w
    max_pp r3.xyz, r2, c8.x
    texld_pp r2, v0, s1
    add_pp r0.w, r1.w, -c6.x
    mad_pp r2.w, r2.y, c6.x, r0.w
    mul_pp r1.xyw, r2.w, r3.xyzz
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r0
    mul_pp r0.xyz, r1.xyww, r2
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c5.x
    mov_pp oC3.w, c7.w

// approximately 37 instruction slots used (2 texture, 35 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
  Vector4 unity_WorldTransformParams at 336
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  25: dp3 r0.w, r1.xyzx, r1.xyzx
  26: rsq r0.w, r0.w
  27: mul r1.xyz, r0.wwww, r1.xyzx
  28: mul r2.xyz, r0.yzxy, r1.zxyz
  29: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  30: mul r0.w, v4.w, cb3[21].w
  31: mul o4.xyz, r0.wwww, r0.xyzx
  32: mov o4.w, l(0)
  33: mov o5.xyz, r1.xyzx
  34: mov o5.w, l(0)
  35: mul r0.x, r1.y, r1.y
  36: mad r0.x, r1.x, r1.x, -r0.x
  37: mul r1.xyzw, r1.yzzx, r1.xyzz
  38: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  39: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  40: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  41: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  42: mov o6.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 42 math, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v7.yyyy, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v7.xxxx, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v7.zzzz, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   movc r2.xyz, r2.xxxx, r2.yzwy, v7.xyzx
  20:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  21:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  22:   mul r2.y, r2.y, l(0.250000)
  23:   mul r3.x, cb2[0].z, l(0.500000)
  24:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  25:   max r2.y, r2.y, r3.x
  26:   min r2.x, r3.y, r2.y
  27:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  28:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  29:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  30:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  31:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  32:   mov r1.w, l(1.000000)
  33:   dp4 r3.x, r3.xyzw, r1.xyzw
  34:   dp4 r3.y, r4.xyzw, r1.xyzw
  35:   dp4 r3.z, r2.xyzw, r1.xyzw
  36: else 
  37:   mov r1.w, l(1.000000)
  38:   dp4 r3.x, cb1[38].xyzw, r1.xyzw
  39:   dp4 r3.y, cb1[39].xyzw, r1.xyzw
  40:   dp4 r3.z, cb1[40].xyzw, r1.xyzw
  41: endif 
  42: add r2.xyz, r3.xyzx, v6.xyzx
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r2.xyz, r2.xyzx
  45: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r2.xyz, r2.xyzx
  47: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mul r2.xyz, r0.wwww, r2.xyzx
  50: mul r2.xyz, r0.xyzx, r2.xyzx
  51: exp o3.xyz, -r2.xyzx
  52: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  53: mov o0.xyzw, r0.xyzw
  54: mov o1.w, cb0[8].w
  55: mov o2.w, l(1.000000)
  56: mov o3.w, l(1.000000)
  57: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRLIGHTMAP_COMBINED _EMISSION 
-- Vertex shader for "d3d9":
// Stats: 48 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord3"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHBb at 13
Vector4 unity_SHBg at 12
Vector4 unity_SHBr at 11
Vector4 unity_SHC at 14
Vector4 unity_WorldTransformParams at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   unity_ObjectToWorld        c4       3
//   unity_WorldToObject        c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, v1.x, c7.xxyz, r0
    mad r0.yzw, v1.z, c9.xxyz, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.y
    mov o4.w, c19.y
    mov o5.w, c19.y
    mov o6.w, c19.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 47 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 36 math, 3 textures
Vector4 _Color at 3
Vector4 _EmissionColor at 7
Float _Glossiness at 5
Float _Metallic at 4
Float _OcclusionStrength at 6
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "_EmissionMap" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_SHAr         c0       1
//   unity_SHAg         c1       1
//   unity_SHAb         c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   _OcclusionStrength c6       1
//   _EmissionColor     c7       1
//   _MainTex           s0       1
//   _OcclusionMap      s1       1
//   _EmissionMap       s2       1
//

    ps_3_0
    def c8, -0.220916301, 0.220916301, 0.779083729, 1
    def c9, 0, 0.416666657, 1.05499995, -0.0549999997
    def c10, 0.5, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c8
    mad_pp r2.xyz, c3, r0, r1.x
    mul_pp r0.xyz, r0, c3
    mad_pp oC1.xyz, c4.x, r2, r1.y
    nrm_pp r2.xyz, v1
    mov_pp r2.w, c8.w
    dp4_pp r3.x, c0, r2
    dp4_pp r3.y, c1, r2
    dp4_pp r3.z, c2, r2
    mad_pp oC2, r2, c10.xxxy, c10.xxxz
    add_pp r2.xyz, r3, v2
    max_pp r3.xyz, r2, c9.x
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c9.y
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c9.z, c9.w
    max_pp r3.xyz, r2, c9.x
    texld_pp r2, v0, s1
    add_pp r0.w, r1.w, -c6.x
    mad_pp r2.w, r2.y, c6.x, r0.w
    mul_pp r1.xyw, r2.w, r3.xyzz
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c7
    mad_pp r0.xyz, r2, r1.xyww, r0
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c5.x
    mov_pp oC3.w, c8.w

// approximately 39 instruction slots used (3 texture, 36 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
  Vector4 unity_WorldTransformParams at 336
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  25: dp3 r0.w, r1.xyzx, r1.xyzx
  26: rsq r0.w, r0.w
  27: mul r1.xyz, r0.wwww, r1.xyzx
  28: mul r2.xyz, r0.yzxy, r1.zxyz
  29: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  30: mul r0.w, v4.w, cb3[21].w
  31: mul o4.xyz, r0.wwww, r0.xyzx
  32: mov o4.w, l(0)
  33: mov o5.xyz, r1.xyzx
  34: mov o5.w, l(0)
  35: mul r0.x, r1.y, r1.y
  36: mad r0.x, r1.x, r1.x, -r0.x
  37: mul r1.xyzw, r1.yzzx, r1.xyzz
  38: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  39: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  40: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  41: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  42: mov o6.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 43 math, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "_EmissionMap" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v7.yyyy, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v7.xxxx, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v7.zzzz, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   movc r2.xyz, r2.xxxx, r2.yzwy, v7.xyzx
  20:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  21:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  22:   mul r2.y, r2.y, l(0.250000)
  23:   mul r3.x, cb2[0].z, l(0.500000)
  24:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  25:   max r2.y, r2.y, r3.x
  26:   min r2.x, r3.y, r2.y
  27:   sample r3.xyzw, r2.xzwx, t3.xyzw, s0
  28:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  29:   sample r4.xyzw, r4.xyzx, t3.xyzw, s0
  30:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  31:   sample r2.xyzw, r2.xyzx, t3.xyzw, s0
  32:   mov r1.w, l(1.000000)
  33:   dp4 r3.x, r3.xyzw, r1.xyzw
  34:   dp4 r3.y, r4.xyzw, r1.xyzw
  35:   dp4 r3.z, r2.xyzw, r1.xyzw
  36: else 
  37:   mov r1.w, l(1.000000)
  38:   dp4 r3.x, cb1[38].xyzw, r1.xyzw
  39:   dp4 r3.y, cb1[39].xyzw, r1.xyzw
  40:   dp4 r3.z, cb1[40].xyzw, r1.xyzw
  41: endif 
  42: add r2.xyz, r3.xyzx, v6.xyzx
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r2.xyz, r2.xyzx
  45: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r2.xyz, r2.xyzx
  47: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mul r2.xyz, r0.wwww, r2.xyzx
  50: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  51: mul r3.xyz, r3.xyzx, cb0[10].xyzx
  52: mad r2.xyz, r0.xyzx, r2.xyzx, r3.xyzx
  53: exp o3.xyz, -r2.xyzx
  54: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  55: mov o0.xyzw, r0.xyzw
  56: mov o1.w, cb0[8].w
  57: mov o2.w, l(1.000000)
  58: mov o3.w, l(1.000000)
  59: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

-- Vertex shader for "d3d9":
// Stats: 48 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord3"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHBb at 13
Vector4 unity_SHBg at 12
Vector4 unity_SHBr at 11
Vector4 unity_SHC at 14
Vector4 unity_WorldTransformParams at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   unity_ObjectToWorld        c4       3
//   unity_WorldToObject        c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, v1.x, c7.xxyz, r0
    mad r0.yzw, v1.z, c9.xxyz, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.y
    mov o4.w, c19.y
    mov o5.w, c19.y
    mov o6.w, c19.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 47 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 35 math, 2 textures
Vector4 _Color at 3
Float _Glossiness at 5
Float _Metallic at 4
Float _OcclusionStrength at 6
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_SHAr         c0       1
//   unity_SHAg         c1       1
//   unity_SHAb         c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   _OcclusionStrength c6       1
//   _MainTex           s0       1
//   _OcclusionMap      s1       1
//

    ps_3_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 0, 0.416666657, 1.05499995, -0.0549999997
    def c9, 0.5, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c7
    mad_pp r2.xyz, c3, r0, r1.x
    mul_pp r0.xyz, r0, c3
    mad_pp oC1.xyz, c4.x, r2, r1.y
    nrm_pp r2.xyz, v1
    mov_pp r2.w, c7.w
    dp4_pp r3.x, c0, r2
    dp4_pp r3.y, c1, r2
    dp4_pp r3.z, c2, r2
    mad_pp oC2, r2, c9.xxxy, c9.xxxz
    add_pp r2.xyz, r3, v2
    max_pp r3.xyz, r2, c8.x
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c8.y
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c8.z, c8.w
    max_pp r3.xyz, r2, c8.x
    texld_pp r2, v0, s1
    add_pp r0.w, r1.w, -c6.x
    mad_pp r2.w, r2.y, c6.x, r0.w
    mul_pp r1.xyw, r2.w, r3.xyzz
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r0
    mul_pp r0.xyz, r1.xyww, r2
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c5.x
    mov_pp oC3.w, c7.w

// approximately 37 instruction slots used (2 texture, 35 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
  Vector4 unity_WorldTransformParams at 336
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  25: dp3 r0.w, r1.xyzx, r1.xyzx
  26: rsq r0.w, r0.w
  27: mul r1.xyz, r0.wwww, r1.xyzx
  28: mul r2.xyz, r0.yzxy, r1.zxyz
  29: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  30: mul r0.w, v4.w, cb3[21].w
  31: mul o4.xyz, r0.wwww, r0.xyzx
  32: mov o4.w, l(0)
  33: mov o5.xyz, r1.xyzx
  34: mov o5.w, l(0)
  35: mul r0.x, r1.y, r1.y
  36: mad r0.x, r1.x, r1.x, -r0.x
  37: mul r1.xyzw, r1.yzzx, r1.xyzz
  38: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  39: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  40: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  41: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  42: mov o6.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 42 math, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v7.yyyy, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v7.xxxx, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v7.zzzz, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   movc r2.xyz, r2.xxxx, r2.yzwy, v7.xyzx
  20:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  21:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  22:   mul r2.y, r2.y, l(0.250000)
  23:   mul r3.x, cb2[0].z, l(0.500000)
  24:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  25:   max r2.y, r2.y, r3.x
  26:   min r2.x, r3.y, r2.y
  27:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  28:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  29:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  30:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  31:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  32:   mov r1.w, l(1.000000)
  33:   dp4 r3.x, r3.xyzw, r1.xyzw
  34:   dp4 r3.y, r4.xyzw, r1.xyzw
  35:   dp4 r3.z, r2.xyzw, r1.xyzw
  36: else 
  37:   mov r1.w, l(1.000000)
  38:   dp4 r3.x, cb1[38].xyzw, r1.xyzw
  39:   dp4 r3.y, cb1[39].xyzw, r1.xyzw
  40:   dp4 r3.z, cb1[40].xyzw, r1.xyzw
  41: endif 
  42: add r2.xyz, r3.xyzx, v6.xyzx
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r2.xyz, r2.xyzx
  45: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r2.xyz, r2.xyzx
  47: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mul r2.xyz, r0.wwww, r2.xyzx
  50: mul r2.xyz, r0.xyzx, r2.xyzx
  51: exp o3.xyz, -r2.xyzx
  52: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  53: mov o0.xyzw, r0.xyzw
  54: mov o1.w, cb0[8].w
  55: mov o2.w, l(1.000000)
  56: mov o3.w, l(1.000000)
  57: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRLIGHTMAP_SEPARATE _EMISSION 
-- Vertex shader for "d3d9":
// Stats: 48 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord3"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHBb at 13
Vector4 unity_SHBg at 12
Vector4 unity_SHBr at 11
Vector4 unity_SHC at 14
Vector4 unity_WorldTransformParams at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   unity_ObjectToWorld        c4       3
//   unity_WorldToObject        c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, v1.x, c7.xxyz, r0
    mad r0.yzw, v1.z, c9.xxyz, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.y
    mov o4.w, c19.y
    mov o5.w, c19.y
    mov o6.w, c19.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 47 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 36 math, 3 textures
Vector4 _Color at 3
Vector4 _EmissionColor at 7
Float _Glossiness at 5
Float _Metallic at 4
Float _OcclusionStrength at 6
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "_EmissionMap" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_SHAr         c0       1
//   unity_SHAg         c1       1
//   unity_SHAb         c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   _OcclusionStrength c6       1
//   _EmissionColor     c7       1
//   _MainTex           s0       1
//   _OcclusionMap      s1       1
//   _EmissionMap       s2       1
//

    ps_3_0
    def c8, -0.220916301, 0.220916301, 0.779083729, 1
    def c9, 0, 0.416666657, 1.05499995, -0.0549999997
    def c10, 0.5, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c8
    mad_pp r2.xyz, c3, r0, r1.x
    mul_pp r0.xyz, r0, c3
    mad_pp oC1.xyz, c4.x, r2, r1.y
    nrm_pp r2.xyz, v1
    mov_pp r2.w, c8.w
    dp4_pp r3.x, c0, r2
    dp4_pp r3.y, c1, r2
    dp4_pp r3.z, c2, r2
    mad_pp oC2, r2, c10.xxxy, c10.xxxz
    add_pp r2.xyz, r3, v2
    max_pp r3.xyz, r2, c9.x
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c9.y
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c9.z, c9.w
    max_pp r3.xyz, r2, c9.x
    texld_pp r2, v0, s1
    add_pp r0.w, r1.w, -c6.x
    mad_pp r2.w, r2.y, c6.x, r0.w
    mul_pp r1.xyw, r2.w, r3.xyzz
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c7
    mad_pp r0.xyz, r2, r1.xyww, r0
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c5.x
    mov_pp oC3.w, c8.w

// approximately 39 instruction slots used (3 texture, 36 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
  Vector4 unity_WorldTransformParams at 336
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  25: dp3 r0.w, r1.xyzx, r1.xyzx
  26: rsq r0.w, r0.w
  27: mul r1.xyz, r0.wwww, r1.xyzx
  28: mul r2.xyz, r0.yzxy, r1.zxyz
  29: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  30: mul r0.w, v4.w, cb3[21].w
  31: mul o4.xyz, r0.wwww, r0.xyzx
  32: mov o4.w, l(0)
  33: mov o5.xyz, r1.xyzx
  34: mov o5.w, l(0)
  35: mul r0.x, r1.y, r1.y
  36: mad r0.x, r1.x, r1.x, -r0.x
  37: mul r1.xyzw, r1.yzzx, r1.xyzz
  38: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  39: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  40: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  41: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  42: mov o6.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 43 math, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "_EmissionMap" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v7.yyyy, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v7.xxxx, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v7.zzzz, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   movc r2.xyz, r2.xxxx, r2.yzwy, v7.xyzx
  20:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  21:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  22:   mul r2.y, r2.y, l(0.250000)
  23:   mul r3.x, cb2[0].z, l(0.500000)
  24:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  25:   max r2.y, r2.y, r3.x
  26:   min r2.x, r3.y, r2.y
  27:   sample r3.xyzw, r2.xzwx, t3.xyzw, s0
  28:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  29:   sample r4.xyzw, r4.xyzx, t3.xyzw, s0
  30:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  31:   sample r2.xyzw, r2.xyzx, t3.xyzw, s0
  32:   mov r1.w, l(1.000000)
  33:   dp4 r3.x, r3.xyzw, r1.xyzw
  34:   dp4 r3.y, r4.xyzw, r1.xyzw
  35:   dp4 r3.z, r2.xyzw, r1.xyzw
  36: else 
  37:   mov r1.w, l(1.000000)
  38:   dp4 r3.x, cb1[38].xyzw, r1.xyzw
  39:   dp4 r3.y, cb1[39].xyzw, r1.xyzw
  40:   dp4 r3.z, cb1[40].xyzw, r1.xyzw
  41: endif 
  42: add r2.xyz, r3.xyzx, v6.xyzx
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r2.xyz, r2.xyzx
  45: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r2.xyz, r2.xyzx
  47: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mul r2.xyz, r0.wwww, r2.xyzx
  50: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  51: mul r3.xyz, r3.xyzx, cb0[10].xyzx
  52: mad r2.xyz, r0.xyzx, r2.xyzx, r3.xyzx
  53: exp o3.xyz, -r2.xyzx
  54: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  55: mov o0.xyzw, r0.xyzw
  56: mov o1.w, cb0[8].w
  57: mov o2.w, l(1.000000)
  58: mov o3.w, l(1.000000)
  59: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

//////////////////////////////////////////////////////
Keywords set in this variant: UNITY_HDR_ON 
-- Vertex shader for "d3d9":
// Stats: 37 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 16
Vector4 _MainTex_ST at 15
Float _UVSec at 17
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHBb at 13
Vector4 unity_SHBg at 12
Vector4 unity_SHBr at 11
Vector4 unity_SHC at 14

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       3
//   unity_WorldToObject  c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    mad r0, v0.xyzx, c18.xxxy, c18.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.y
    mov o4, c18.y
    mov o5.w, c18.y
    mov o6.w, c18.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 32 math, 2 textures
Vector4 _Color at 3
Float _Glossiness at 5
Float _Metallic at 4
Float _OcclusionStrength at 6
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_SHAr         c0       1
//   unity_SHAg         c1       1
//   unity_SHAb         c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   _OcclusionStrength c6       1
//   _MainTex           s0       1
//   _OcclusionMap      s1       1
//

    ps_3_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 0, 0.416666657, 1.05499995, -0.0549999997
    def c9, 0.5, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c7
    mad_pp r2.xyz, c3, r0, r1.x
    mul_pp r0.xyz, r0, c3
    mad_pp oC1.xyz, c4.x, r2, r1.y
    nrm_pp r2.xyz, v1
    mov_pp r2.w, c7.w
    dp4_pp r3.x, c0, r2
    dp4_pp r3.y, c1, r2
    dp4_pp r3.z, c2, r2
    mad_pp oC2, r2, c9.xxxy, c9.xxxz
    add_pp r2.xyz, r3, v2
    max_pp r3.xyz, r2, c8.x
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c8.y
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c8.z, c8.w
    max_pp r3.xyz, r2, c8.x
    texld_pp r2, v0, s1
    add_pp r0.w, r1.w, -c6.x
    mad_pp r2.w, r2.y, c6.x, r0.w
    mul_pp r1.xyw, r2.w, r3.xyzz
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r0
    mul_pp oC3.xyz, r1.xyww, r2
    mov_pp oC0, r2
    mov_pp oC1.w, c5.x
    mov_pp oC3.w, c7.w

// approximately 34 instruction slots used (2 texture, 32 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 25 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  17: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  18: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul r0.xyz, r0.wwww, r0.xyzx
  22: mov o5.xyz, r0.xyzx
  23: mov o5.w, l(0)
  24: mul r0.w, r0.y, r0.y
  25: mad r0.w, r0.x, r0.x, -r0.w
  26: mul r1.xyzw, r0.yzzx, r0.xyzz
  27: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  28: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  29: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  30: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  31: mov o6.w, l(0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 41 math, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v7.yyyy, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v7.xxxx, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v7.zzzz, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   movc r2.xyz, r2.xxxx, r2.yzwy, v7.xyzx
  20:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  21:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  22:   mul r2.y, r2.y, l(0.250000)
  23:   mul r3.x, cb2[0].z, l(0.500000)
  24:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  25:   max r2.y, r2.y, r3.x
  26:   min r2.x, r3.y, r2.y
  27:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  28:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  29:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  30:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  31:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  32:   mov r1.w, l(1.000000)
  33:   dp4 r3.x, r3.xyzw, r1.xyzw
  34:   dp4 r3.y, r4.xyzw, r1.xyzw
  35:   dp4 r3.z, r2.xyzw, r1.xyzw
  36: else 
  37:   mov r1.w, l(1.000000)
  38:   dp4 r3.x, cb1[38].xyzw, r1.xyzw
  39:   dp4 r3.y, cb1[39].xyzw, r1.xyzw
  40:   dp4 r3.z, cb1[40].xyzw, r1.xyzw
  41: endif 
  42: add r2.xyz, r3.xyzx, v6.xyzx
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r2.xyz, r2.xyzx
  45: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r2.xyz, r2.xyzx
  47: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mul r2.xyz, r0.wwww, r2.xyzx
  50: mul o3.xyz, r0.xyzx, r2.xyzx
  51: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  52: mov o0.xyzw, r0.xyzw
  53: mov o1.w, cb0[8].w
  54: mov o2.w, l(1.000000)
  55: mov o3.w, l(1.000000)
  56: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

//////////////////////////////////////////////////////
Keywords set in this variant: _EMISSION UNITY_HDR_ON 
-- Vertex shader for "d3d9":
// Stats: 37 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 16
Vector4 _MainTex_ST at 15
Float _UVSec at 17
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHBb at 13
Vector4 unity_SHBg at 12
Vector4 unity_SHBr at 11
Vector4 unity_SHC at 14

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       3
//   unity_WorldToObject  c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHBr           c11      1
//   unity_SHBg           c12      1
//   unity_SHBb           c13      1
//   unity_SHC            c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_3_0
    def c18, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    mad r0, v0.xyzx, c18.xxxy, c18.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c15, c15.zwzw
    abs r0.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.xyz, c8, v1.y
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3, c18.y
    mov o4, c18.y
    mov o5.w, c18.y
    mov o6.w, c18.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 33 math, 3 textures
Vector4 _Color at 3
Vector4 _EmissionColor at 7
Float _Glossiness at 5
Float _Metallic at 4
Float _OcclusionStrength at 6
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "_EmissionMap" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_SHAr         c0       1
//   unity_SHAg         c1       1
//   unity_SHAb         c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   _OcclusionStrength c6       1
//   _EmissionColor     c7       1
//   _MainTex           s0       1
//   _OcclusionMap      s1       1
//   _EmissionMap       s2       1
//

    ps_3_0
    def c8, -0.220916301, 0.220916301, 0.779083729, 1
    def c9, 0, 0.416666657, 1.05499995, -0.0549999997
    def c10, 0.5, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c8
    mad_pp r2.xyz, c3, r0, r1.x
    mul_pp r0.xyz, r0, c3
    mad_pp oC1.xyz, c4.x, r2, r1.y
    nrm_pp r2.xyz, v1
    mov_pp r2.w, c8.w
    dp4_pp r3.x, c0, r2
    dp4_pp r3.y, c1, r2
    dp4_pp r3.z, c2, r2
    mad_pp oC2, r2, c10.xxxy, c10.xxxz
    add_pp r2.xyz, r3, v2
    max_pp r3.xyz, r2, c9.x
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c9.y
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c9.z, c9.w
    max_pp r3.xyz, r2, c9.x
    texld_pp r2, v0, s1
    add_pp r0.w, r1.w, -c6.x
    mad_pp r2.w, r2.y, c6.x, r0.w
    mul_pp r1.xyw, r2.w, r3.xyzz
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c7
    mad_pp oC3.xyz, r2, r1.xyww, r0
    mov_pp oC0, r2
    mov_pp oC1.w, c5.x
    mov_pp oC3.w, c8.w

// approximately 36 instruction slots used (3 texture, 33 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 25 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mov o3.xyzw, l(0,0,0,0)
  15: mov o4.xyzw, l(0,0,0,0)
  16: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  17: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  18: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul r0.xyz, r0.wwww, r0.xyzx
  22: mov o5.xyz, r0.xyzx
  23: mov o5.w, l(0)
  24: mul r0.w, r0.y, r0.y
  25: mad r0.w, r0.x, r0.x, -r0.w
  26: mul r1.xyzw, r0.yzzx, r0.xyzz
  27: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  28: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  29: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  30: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  31: mov o6.w, l(0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 42 math, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "_EmissionMap" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v7.yyyy, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v7.xxxx, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v7.zzzz, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   movc r2.xyz, r2.xxxx, r2.yzwy, v7.xyzx
  20:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  21:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  22:   mul r2.y, r2.y, l(0.250000)
  23:   mul r3.x, cb2[0].z, l(0.500000)
  24:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  25:   max r2.y, r2.y, r3.x
  26:   min r2.x, r3.y, r2.y
  27:   sample r3.xyzw, r2.xzwx, t3.xyzw, s0
  28:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  29:   sample r4.xyzw, r4.xyzx, t3.xyzw, s0
  30:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  31:   sample r2.xyzw, r2.xyzx, t3.xyzw, s0
  32:   mov r1.w, l(1.000000)
  33:   dp4 r3.x, r3.xyzw, r1.xyzw
  34:   dp4 r3.y, r4.xyzw, r1.xyzw
  35:   dp4 r3.z, r2.xyzw, r1.xyzw
  36: else 
  37:   mov r1.w, l(1.000000)
  38:   dp4 r3.x, cb1[38].xyzw, r1.xyzw
  39:   dp4 r3.y, cb1[39].xyzw, r1.xyzw
  40:   dp4 r3.z, cb1[40].xyzw, r1.xyzw
  41: endif 
  42: add r2.xyz, r3.xyzx, v6.xyzx
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r2.xyz, r2.xyzx
  45: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r2.xyz, r2.xyzx
  47: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mul r2.xyz, r0.wwww, r2.xyzx
  50: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  51: mul r3.xyz, r3.xyzx, cb0[10].xyzx
  52: mad o3.xyz, r0.xyzx, r2.xyzx, r3.xyzx
  53: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  54: mov o0.xyzw, r0.xyzw
  55: mov o1.w, cb0[8].w
  56: mov o2.w, l(1.000000)
  57: mov o3.w, l(1.000000)
  58: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

-- Vertex shader for "d3d9":
// Stats: 48 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord3"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHBb at 13
Vector4 unity_SHBg at 12
Vector4 unity_SHBr at 11
Vector4 unity_SHC at 14
Vector4 unity_WorldTransformParams at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   unity_ObjectToWorld        c4       3
//   unity_WorldToObject        c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, v1.x, c7.xxyz, r0
    mad r0.yzw, v1.z, c9.xxyz, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.y
    mov o4.w, c19.y
    mov o5.w, c19.y
    mov o6.w, c19.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 47 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 32 math, 2 textures
Vector4 _Color at 3
Float _Glossiness at 5
Float _Metallic at 4
Float _OcclusionStrength at 6
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_SHAr         c0       1
//   unity_SHAg         c1       1
//   unity_SHAb         c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   _OcclusionStrength c6       1
//   _MainTex           s0       1
//   _OcclusionMap      s1       1
//

    ps_3_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 0, 0.416666657, 1.05499995, -0.0549999997
    def c9, 0.5, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c7
    mad_pp r2.xyz, c3, r0, r1.x
    mul_pp r0.xyz, r0, c3
    mad_pp oC1.xyz, c4.x, r2, r1.y
    nrm_pp r2.xyz, v1
    mov_pp r2.w, c7.w
    dp4_pp r3.x, c0, r2
    dp4_pp r3.y, c1, r2
    dp4_pp r3.z, c2, r2
    mad_pp oC2, r2, c9.xxxy, c9.xxxz
    add_pp r2.xyz, r3, v2
    max_pp r3.xyz, r2, c8.x
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c8.y
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c8.z, c8.w
    max_pp r3.xyz, r2, c8.x
    texld_pp r2, v0, s1
    add_pp r0.w, r1.w, -c6.x
    mad_pp r2.w, r2.y, c6.x, r0.w
    mul_pp r1.xyw, r2.w, r3.xyzz
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r0
    mul_pp oC3.xyz, r1.xyww, r2
    mov_pp oC0, r2
    mov_pp oC1.w, c5.x
    mov_pp oC3.w, c7.w

// approximately 34 instruction slots used (2 texture, 32 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
  Vector4 unity_WorldTransformParams at 336
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  25: dp3 r0.w, r1.xyzx, r1.xyzx
  26: rsq r0.w, r0.w
  27: mul r1.xyz, r0.wwww, r1.xyzx
  28: mul r2.xyz, r0.yzxy, r1.zxyz
  29: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  30: mul r0.w, v4.w, cb3[21].w
  31: mul o4.xyz, r0.wwww, r0.xyzx
  32: mov o4.w, l(0)
  33: mov o5.xyz, r1.xyzx
  34: mov o5.w, l(0)
  35: mul r0.x, r1.y, r1.y
  36: mad r0.x, r1.x, r1.x, -r0.x
  37: mul r1.xyzw, r1.yzzx, r1.xyzz
  38: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  39: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  40: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  41: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  42: mov o6.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 41 math, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v7.yyyy, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v7.xxxx, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v7.zzzz, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   movc r2.xyz, r2.xxxx, r2.yzwy, v7.xyzx
  20:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  21:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  22:   mul r2.y, r2.y, l(0.250000)
  23:   mul r3.x, cb2[0].z, l(0.500000)
  24:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  25:   max r2.y, r2.y, r3.x
  26:   min r2.x, r3.y, r2.y
  27:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  28:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  29:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  30:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  31:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  32:   mov r1.w, l(1.000000)
  33:   dp4 r3.x, r3.xyzw, r1.xyzw
  34:   dp4 r3.y, r4.xyzw, r1.xyzw
  35:   dp4 r3.z, r2.xyzw, r1.xyzw
  36: else 
  37:   mov r1.w, l(1.000000)
  38:   dp4 r3.x, cb1[38].xyzw, r1.xyzw
  39:   dp4 r3.y, cb1[39].xyzw, r1.xyzw
  40:   dp4 r3.z, cb1[40].xyzw, r1.xyzw
  41: endif 
  42: add r2.xyz, r3.xyzx, v6.xyzx
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r2.xyz, r2.xyzx
  45: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r2.xyz, r2.xyzx
  47: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mul r2.xyz, r0.wwww, r2.xyzx
  50: mul o3.xyz, r0.xyzx, r2.xyzx
  51: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  52: mov o0.xyzw, r0.xyzw
  53: mov o1.w, cb0[8].w
  54: mov o2.w, l(1.000000)
  55: mov o3.w, l(1.000000)
  56: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRLIGHTMAP_COMBINED _EMISSION UNITY_HDR_ON 
-- Vertex shader for "d3d9":
// Stats: 48 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord3"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHBb at 13
Vector4 unity_SHBg at 12
Vector4 unity_SHBr at 11
Vector4 unity_SHC at 14
Vector4 unity_WorldTransformParams at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   unity_ObjectToWorld        c4       3
//   unity_WorldToObject        c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, v1.x, c7.xxyz, r0
    mad r0.yzw, v1.z, c9.xxyz, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.y
    mov o4.w, c19.y
    mov o5.w, c19.y
    mov o6.w, c19.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 47 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 33 math, 3 textures
Vector4 _Color at 3
Vector4 _EmissionColor at 7
Float _Glossiness at 5
Float _Metallic at 4
Float _OcclusionStrength at 6
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "_EmissionMap" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_SHAr         c0       1
//   unity_SHAg         c1       1
//   unity_SHAb         c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   _OcclusionStrength c6       1
//   _EmissionColor     c7       1
//   _MainTex           s0       1
//   _OcclusionMap      s1       1
//   _EmissionMap       s2       1
//

    ps_3_0
    def c8, -0.220916301, 0.220916301, 0.779083729, 1
    def c9, 0, 0.416666657, 1.05499995, -0.0549999997
    def c10, 0.5, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c8
    mad_pp r2.xyz, c3, r0, r1.x
    mul_pp r0.xyz, r0, c3
    mad_pp oC1.xyz, c4.x, r2, r1.y
    nrm_pp r2.xyz, v1
    mov_pp r2.w, c8.w
    dp4_pp r3.x, c0, r2
    dp4_pp r3.y, c1, r2
    dp4_pp r3.z, c2, r2
    mad_pp oC2, r2, c10.xxxy, c10.xxxz
    add_pp r2.xyz, r3, v2
    max_pp r3.xyz, r2, c9.x
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c9.y
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c9.z, c9.w
    max_pp r3.xyz, r2, c9.x
    texld_pp r2, v0, s1
    add_pp r0.w, r1.w, -c6.x
    mad_pp r2.w, r2.y, c6.x, r0.w
    mul_pp r1.xyw, r2.w, r3.xyzz
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c7
    mad_pp oC3.xyz, r2, r1.xyww, r0
    mov_pp oC0, r2
    mov_pp oC1.w, c5.x
    mov_pp oC3.w, c8.w

// approximately 36 instruction slots used (3 texture, 33 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
  Vector4 unity_WorldTransformParams at 336
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  25: dp3 r0.w, r1.xyzx, r1.xyzx
  26: rsq r0.w, r0.w
  27: mul r1.xyz, r0.wwww, r1.xyzx
  28: mul r2.xyz, r0.yzxy, r1.zxyz
  29: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  30: mul r0.w, v4.w, cb3[21].w
  31: mul o4.xyz, r0.wwww, r0.xyzx
  32: mov o4.w, l(0)
  33: mov o5.xyz, r1.xyzx
  34: mov o5.w, l(0)
  35: mul r0.x, r1.y, r1.y
  36: mad r0.x, r1.x, r1.x, -r0.x
  37: mul r1.xyzw, r1.yzzx, r1.xyzz
  38: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  39: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  40: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  41: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  42: mov o6.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 42 math, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "_EmissionMap" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v7.yyyy, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v7.xxxx, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v7.zzzz, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   movc r2.xyz, r2.xxxx, r2.yzwy, v7.xyzx
  20:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  21:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  22:   mul r2.y, r2.y, l(0.250000)
  23:   mul r3.x, cb2[0].z, l(0.500000)
  24:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  25:   max r2.y, r2.y, r3.x
  26:   min r2.x, r3.y, r2.y
  27:   sample r3.xyzw, r2.xzwx, t3.xyzw, s0
  28:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  29:   sample r4.xyzw, r4.xyzx, t3.xyzw, s0
  30:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  31:   sample r2.xyzw, r2.xyzx, t3.xyzw, s0
  32:   mov r1.w, l(1.000000)
  33:   dp4 r3.x, r3.xyzw, r1.xyzw
  34:   dp4 r3.y, r4.xyzw, r1.xyzw
  35:   dp4 r3.z, r2.xyzw, r1.xyzw
  36: else 
  37:   mov r1.w, l(1.000000)
  38:   dp4 r3.x, cb1[38].xyzw, r1.xyzw
  39:   dp4 r3.y, cb1[39].xyzw, r1.xyzw
  40:   dp4 r3.z, cb1[40].xyzw, r1.xyzw
  41: endif 
  42: add r2.xyz, r3.xyzx, v6.xyzx
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r2.xyz, r2.xyzx
  45: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r2.xyz, r2.xyzx
  47: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mul r2.xyz, r0.wwww, r2.xyzx
  50: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  51: mul r3.xyz, r3.xyzx, cb0[10].xyzx
  52: mad o3.xyz, r0.xyzx, r2.xyzx, r3.xyzx
  53: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  54: mov o0.xyzw, r0.xyzw
  55: mov o1.w, cb0[8].w
  56: mov o2.w, l(1.000000)
  57: mov o3.w, l(1.000000)
  58: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

-- Vertex shader for "d3d9":
// Stats: 48 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord3"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHBb at 13
Vector4 unity_SHBg at 12
Vector4 unity_SHBr at 11
Vector4 unity_SHC at 14
Vector4 unity_WorldTransformParams at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   unity_ObjectToWorld        c4       3
//   unity_WorldToObject        c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, v1.x, c7.xxyz, r0
    mad r0.yzw, v1.z, c9.xxyz, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.y
    mov o4.w, c19.y
    mov o5.w, c19.y
    mov o6.w, c19.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 47 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 32 math, 2 textures
Vector4 _Color at 3
Float _Glossiness at 5
Float _Metallic at 4
Float _OcclusionStrength at 6
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_SHAr         c0       1
//   unity_SHAg         c1       1
//   unity_SHAb         c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   _OcclusionStrength c6       1
//   _MainTex           s0       1
//   _OcclusionMap      s1       1
//

    ps_3_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 0, 0.416666657, 1.05499995, -0.0549999997
    def c9, 0.5, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c7
    mad_pp r2.xyz, c3, r0, r1.x
    mul_pp r0.xyz, r0, c3
    mad_pp oC1.xyz, c4.x, r2, r1.y
    nrm_pp r2.xyz, v1
    mov_pp r2.w, c7.w
    dp4_pp r3.x, c0, r2
    dp4_pp r3.y, c1, r2
    dp4_pp r3.z, c2, r2
    mad_pp oC2, r2, c9.xxxy, c9.xxxz
    add_pp r2.xyz, r3, v2
    max_pp r3.xyz, r2, c8.x
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c8.y
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c8.z, c8.w
    max_pp r3.xyz, r2, c8.x
    texld_pp r2, v0, s1
    add_pp r0.w, r1.w, -c6.x
    mad_pp r2.w, r2.y, c6.x, r0.w
    mul_pp r1.xyw, r2.w, r3.xyzz
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r0
    mul_pp oC3.xyz, r1.xyww, r2
    mov_pp oC0, r2
    mov_pp oC1.w, c5.x
    mov_pp oC3.w, c7.w

// approximately 34 instruction slots used (2 texture, 32 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
  Vector4 unity_WorldTransformParams at 336
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  25: dp3 r0.w, r1.xyzx, r1.xyzx
  26: rsq r0.w, r0.w
  27: mul r1.xyz, r0.wwww, r1.xyzx
  28: mul r2.xyz, r0.yzxy, r1.zxyz
  29: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  30: mul r0.w, v4.w, cb3[21].w
  31: mul o4.xyz, r0.wwww, r0.xyzx
  32: mov o4.w, l(0)
  33: mov o5.xyz, r1.xyzx
  34: mov o5.w, l(0)
  35: mul r0.x, r1.y, r1.y
  36: mad r0.x, r1.x, r1.x, -r0.x
  37: mul r1.xyzw, r1.yzzx, r1.xyzz
  38: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  39: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  40: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  41: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  42: mov o6.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 41 math, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v7.yyyy, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v7.xxxx, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v7.zzzz, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   movc r2.xyz, r2.xxxx, r2.yzwy, v7.xyzx
  20:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  21:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  22:   mul r2.y, r2.y, l(0.250000)
  23:   mul r3.x, cb2[0].z, l(0.500000)
  24:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  25:   max r2.y, r2.y, r3.x
  26:   min r2.x, r3.y, r2.y
  27:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  28:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  29:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  30:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  31:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  32:   mov r1.w, l(1.000000)
  33:   dp4 r3.x, r3.xyzw, r1.xyzw
  34:   dp4 r3.y, r4.xyzw, r1.xyzw
  35:   dp4 r3.z, r2.xyzw, r1.xyzw
  36: else 
  37:   mov r1.w, l(1.000000)
  38:   dp4 r3.x, cb1[38].xyzw, r1.xyzw
  39:   dp4 r3.y, cb1[39].xyzw, r1.xyzw
  40:   dp4 r3.z, cb1[40].xyzw, r1.xyzw
  41: endif 
  42: add r2.xyz, r3.xyzx, v6.xyzx
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r2.xyz, r2.xyzx
  45: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r2.xyz, r2.xyzx
  47: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mul r2.xyz, r0.wwww, r2.xyzx
  50: mul o3.xyz, r0.xyzx, r2.xyzx
  51: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  52: mov o0.xyzw, r0.xyzw
  53: mov o1.w, cb0[8].w
  54: mov o2.w, l(1.000000)
  55: mov o3.w, l(1.000000)
  56: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRLIGHTMAP_SEPARATE _EMISSION UNITY_HDR_ON 
-- Vertex shader for "d3d9":
// Stats: 48 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord3"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHBb at 13
Vector4 unity_SHBg at 12
Vector4 unity_SHBr at 11
Vector4 unity_SHC at 14
Vector4 unity_WorldTransformParams at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   glstate_matrix_mvp         c0       4
//   unity_ObjectToWorld        c4       3
//   unity_WorldToObject        c7       3
//   _WorldSpaceCameraPos       c10      1
//   unity_SHBr                 c11      1
//   unity_SHBg                 c12      1
//   unity_SHBb                 c13      1
//   unity_SHC                  c14      1
//   unity_WorldTransformParams c15      1
//   _MainTex_ST                c16      1
//   _DetailAlbedoMap_ST        c17      1
//   _UVSec                     c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_tangent v4
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c10
    mov o7.xyz, r0
    mul r0.x, c15.w, v4.w
    dp3 r1.x, c4, v4
    dp3 r1.y, c5, v4
    dp3 r1.z, c6, v4
    nrm r2.xyz, r1
    mul r0.yzw, c8.xxyz, v1.y
    mad r0.yzw, v1.x, c7.xxyz, r0
    mad r0.yzw, v1.z, c9.xxyz, r0
    nrm r1.xyz, r0.yzww
    mul r0.yzw, r2.xyzx, r1.xzxy
    mad r0.yzw, r1.xyzx, r2.xzxy, -r0
    mov o3.xyz, r2
    mul o4.xyz, r0.x, r0.yzww
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    mov o5.xyz, r1
    dp4 r1.x, c11, r2
    dp4 r1.y, c12, r2
    dp4 r1.z, c13, r2
    mad o6.xyz, c14, r0.x, r1
    mov o3.w, c19.y
    mov o4.w, c19.y
    mov o5.w, c19.y
    mov o6.w, c19.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 47 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 33 math, 3 textures
Vector4 _Color at 3
Vector4 _EmissionColor at 7
Float _Glossiness at 5
Float _Metallic at 4
Float _OcclusionStrength at 6
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "_EmissionMap" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_SHAr         c0       1
//   unity_SHAg         c1       1
//   unity_SHAb         c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   _OcclusionStrength c6       1
//   _EmissionColor     c7       1
//   _MainTex           s0       1
//   _OcclusionMap      s1       1
//   _EmissionMap       s2       1
//

    ps_3_0
    def c8, -0.220916301, 0.220916301, 0.779083729, 1
    def c9, 0, 0.416666657, 1.05499995, -0.0549999997
    def c10, 0.5, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, v0, s0
    mov r1, c8
    mad_pp r2.xyz, c3, r0, r1.x
    mul_pp r0.xyz, r0, c3
    mad_pp oC1.xyz, c4.x, r2, r1.y
    nrm_pp r2.xyz, v1
    mov_pp r2.w, c8.w
    dp4_pp r3.x, c0, r2
    dp4_pp r3.y, c1, r2
    dp4_pp r3.z, c2, r2
    mad_pp oC2, r2, c10.xxxy, c10.xxxz
    add_pp r2.xyz, r3, v2
    max_pp r3.xyz, r2, c9.x
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c9.y
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c9.z, c9.w
    max_pp r3.xyz, r2, c9.x
    texld_pp r2, v0, s1
    add_pp r0.w, r1.w, -c6.x
    mad_pp r2.w, r2.y, c6.x, r0.w
    mul_pp r1.xyw, r2.w, r3.xyzz
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r0
    texld r0, v0, s2
    mul_pp r0.xyz, r0, c7
    mad_pp oC3.xyz, r2, r1.xyww, r0
    mov_pp oC0, r2
    mov_pp oC1.w, c5.x
    mov_pp oC3.w, c8.w

// approximately 36 instruction slots used (3 texture, 33 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord3"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
  Vector4 unity_WorldTransformParams at 336
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[22], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyz
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  13: mov o7.xyz, r0.xyzx
  14: mul r0.xyz, v4.yyyy, cb3[13].xyzx
  15: mad r0.xyz, cb3[12].xyzx, v4.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[14].xyzx, v4.zzzz, r0.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov o3.xyz, r0.xyzx
  21: mov o3.w, l(0)
  22: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  25: dp3 r0.w, r1.xyzx, r1.xyzx
  26: rsq r0.w, r0.w
  27: mul r1.xyz, r0.wwww, r1.xyzx
  28: mul r2.xyz, r0.yzxy, r1.zxyz
  29: mad r0.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
  30: mul r0.w, v4.w, cb3[21].w
  31: mul o4.xyz, r0.wwww, r0.xyzx
  32: mov o4.w, l(0)
  33: mov o5.xyz, r1.xyzx
  34: mov o5.w, l(0)
  35: mul r0.x, r1.y, r1.y
  36: mad r0.x, r1.x, r1.x, -r0.x
  37: mul r1.xyzw, r1.yzzx, r1.xyzz
  38: dp4 r2.x, cb2[41].xyzw, r1.xyzw
  39: dp4 r2.y, cb2[42].xyzw, r1.xyzw
  40: dp4 r2.z, cb2[43].xyzw, r1.xyzw
  41: mad o6.xyz, cb2[44].xyzx, r0.xxxx, r2.xyzx
  42: mov o6.w, l(0)
  43: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 42 math, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "_EmissionMap" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v7.yyyy, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v7.xxxx, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v7.zzzz, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   movc r2.xyz, r2.xxxx, r2.yzwy, v7.xyzx
  20:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  21:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  22:   mul r2.y, r2.y, l(0.250000)
  23:   mul r3.x, cb2[0].z, l(0.500000)
  24:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  25:   max r2.y, r2.y, r3.x
  26:   min r2.x, r3.y, r2.y
  27:   sample r3.xyzw, r2.xzwx, t3.xyzw, s0
  28:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  29:   sample r4.xyzw, r4.xyzx, t3.xyzw, s0
  30:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  31:   sample r2.xyzw, r2.xyzx, t3.xyzw, s0
  32:   mov r1.w, l(1.000000)
  33:   dp4 r3.x, r3.xyzw, r1.xyzw
  34:   dp4 r3.y, r4.xyzw, r1.xyzw
  35:   dp4 r3.z, r2.xyzw, r1.xyzw
  36: else 
  37:   mov r1.w, l(1.000000)
  38:   dp4 r3.x, cb1[38].xyzw, r1.xyzw
  39:   dp4 r3.y, cb1[39].xyzw, r1.xyzw
  40:   dp4 r3.z, cb1[40].xyzw, r1.xyzw
  41: endif 
  42: add r2.xyz, r3.xyzx, v6.xyzx
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r2.xyz, r2.xyzx
  45: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r2.xyz, r2.xyzx
  47: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mul r2.xyz, r0.wwww, r2.xyzx
  50: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  51: mul r3.xyz, r3.xyzx, cb0[10].xyzx
  52: mad o3.xyz, r0.xyzx, r2.xyzx, r3.xyzx
  53: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  54: mov o0.xyzw, r0.xyzw
  55: mov o1.w, cb0[8].w
  56: mov o2.w, l(1.000000)
  57: mov o3.w, l(1.000000)
  58: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Compile errors generating this shader.

-- Fragment shader for "d3d11_9x":
// Compile errors generating this shader.

 }
}
SubShader { 
 LOD 150
 Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }


 // Stats for Vertex shader:
 //         d3d9: 71 avg math (54..88)
 //        d3d11: 50 avg math (38..62)
 //     d3d11_9x: 48 avg math (38..59)
 // Stats for Fragment shader:
 //         d3d9: 48 avg math (47..49), 5 avg texture (4..6)
 //        d3d11: 39 avg math (38..41), 4 avg texture (3..5)
 //     d3d11_9x: 38 avg math (38..39), 3 avg texture (3..4)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite [_ZWrite]
  Blend [_SrcBlend] [_DstBlend]
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL 
-- Vertex shader for "d3d9":
// Stats: 54 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 19
Vector4 _MainTex_ST at 18
Float _UVSec at 20
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHAb at 13
Vector4 unity_SHAg at 12
Vector4 unity_SHAr at 11
Vector4 unity_SHBb at 16
Vector4 unity_SHBg at 15
Vector4 unity_SHBr at 14
Vector4 unity_SHC at 17

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       3
//   unity_WorldToObject  c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHAr           c11      1
//   unity_SHAg           c12      1
//   unity_SHAb           c13      1
//   unity_SHBr           c14      1
//   unity_SHBg           c15      1
//   unity_SHBb           c16      1
//   unity_SHC            c17      1
//   _MainTex_ST          c18      1
//   _DetailAlbedoMap_ST  c19      1
//   _UVSec               c20      1
//

    vs_2_0
    def c21, 1, 0, 0.416666657, 0
    def c22, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c21.xxxy, c21.yyyx
    dp4 r4.x, c0, r0
    dp4 r4.y, c1, r0
    dp4 r4.z, c2, r0
    dp4 r4.w, c3, r0
    mad oT0.xy, v2, c18, c18.zwzw
    mul r0.x, c20.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r0.xyz, r0, -c10
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r0
    mul r0.xyz, v1.y, c8
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c14, r2
    dp4 r3.y, c15, r2
    dp4 r3.z, c16, r2
    mad r0.xyz, c17, r0.x, r3
    mov r1.w, c21.x
    dp4 r2.x, c11, r1
    dp4 r2.y, c12, r1
    dp4 r2.z, c13, r1
    mov oT4.xyz, r1
    add r0.xyz, r0, r2
    max r0.xyz, r0, c21.y
    mov r0.w, c21.z
    lit r1, r0.xxww
    mov r1.x, r1.z
    lit r2, r0.yyww
    lit r0, r0.zzww
    mov r1.z, r0.z
    mov r1.y, r2.z
    mad r0.xyz, r1, c22.x, c22.y
    max oT5.xyz, r0, c21.y
    mov oT2, c21.y
    mov oT3, c21.y
    mov oT4.w, c21.y
    mov oT5.w, c21.y
    mad oPos.xy, r4.w, c255, r4
    mov oPos.zw, r4

// approximately 53 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 47 math, 4 textures
Vector4 _Color at 3
Float _Glossiness at 5
Vector4 _LightColor0 at 2
Float _Metallic at 4
Vector4 _WorldSpaceLightPos0 at 0
Vector4 unity_SpecCube0_HDR at 1

Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float4 _WorldSpaceLightPos0;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceLightPos0 c0       1
//   unity_SpecCube0_HDR  c1       1
//   _LightColor0         c2       1
//   _Color               c3       1
//   _Metallic            c4       1
//   _Glossiness          c5       1
//   unity_SpecCube0      s0       1
//   unity_NHxRoughness   s1       1
//   _MainTex             s2       1
//   _OcclusionMap        s3       1
//

    ps_2_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 1
    def c7, 0.699999988, 1.70000005, 6, 16
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t4.xyz
    dcl_pp t5.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    mov r0, c6
    add r1.w, -r0.w, c1.w
    mul r1.x, r1.w, r1.w
    add_pp r1.y, r0.w, -c5.x
    mad_pp r1.z, r1.y, -c7.x, c7.y
    mul_pp r1.y, r1.z, r1.y
    mul_pp r2.w, r1.y, c7.z
    nrm_pp r3.xyz, t4
    dp3_pp r3.w, t1, r3
    add_pp r3.w, r3.w, r3.w
    mad_pp r2.xyz, r3, -r3.w, t1
    dp3_pp r3.w, -t1, r3
    add_pp r1.y, r3.w, r3.w
    mov_sat_pp r3.w, r3.w
    add_pp r4.y, -r3.w, c6.w
    mad_pp r5.xyz, r3, -r1.y, -t1
    dp3_pp r4.x, r5, c0
    mul_pp r1.yz, r4.zxyw, r4.zxyw
    mul_pp r4.xy, r1.yzxw, r1.yzxw
    add_pp r4.z, r0.w, -c5.x
    mov_pp r5.x, r4.x
    mov_pp r5.y, r4.z
    texldb_pp r2, r2, s0
    texld_pp r6, t0, s3
    texld r7, t0, s2
    texld r5, r5, s1
    cmp_pp r0.w, -r1.x, r2.w, c6.w
    mul_pp r0.w, r0.w, c1.x
    mul_pp r1.xyz, r2, r0.w
    mul_pp r1.xyz, r6.y, r1
    mul_pp r2.xyz, r6.y, t5
    dp3_sat_pp r0.w, r3, c0
    mul_pp r3.xyz, r0.w, c2
    mad_pp r1.w, c4.x, -r0.z, r0.z
    add_pp r2.w, -r1.w, c6.w
    add_sat_pp r2.w, r2.w, c5.x
    mad_pp r5.yzw, c3.wzyx, r7.wzyx, r0.x
    mul_pp r6.xyz, r7, c3
    mul_pp r6.xyz, r1.w, r6
    mad_pp r0.xyz, c4.x, r5.wzyx, r0.y
    lrp_pp r5.yzw, r4.y, r2.w, r0.wzyx
    mul_pp r1.xyz, r1, r5.wzyx
    mad_pp r1.xyz, r2, r6, r1
    mul_pp r0.w, r5.x, c7.w
    mad_pp r0.xyz, r0.w, r0, r6
    mad_pp r0.xyz, r0, r3, r1
    mov r0.w, c6.w
    mov_pp oC0, r0

// approximately 50 instruction slots used (4 texture, 46 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r0.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.w, l(0)
  19: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  20: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  21: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  22: dp3 r0.w, r0.xyzx, r0.xyzx
  23: rsq r0.w, r0.w
  24: mul r0.xyz, r0.wwww, r0.xyzx
  25: mov o5.xyz, r0.xyzx
  26: mul r1.x, r0.y, r0.y
  27: mad r1.x, r0.x, r0.x, -r1.x
  28: mul r2.xyzw, r0.yzzx, r0.xyzz
  29: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  30: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  31: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  32: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  33: mov r0.w, l(1.000000)
  34: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  35: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  36: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  37: add r0.xyz, r1.xyzx, r2.xyzx
  38: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  39: log r0.xyz, r0.xyzx
  40: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  41: exp r0.xyz, r0.xyzx
  42: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  43: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: mov o6.w, l(0)
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 38 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_l r2.xyzw, r2.xyzx, t3.xyzw, s0, r0.x
  11: eq r0.x, cb2[3].w, l(1.000000)
  12: movc r0.x, r0.x, r2.w, l(1.000000)
  13: mul r0.x, r0.x, cb2[3].x
  14: mul r2.xyz, r2.xyzx, r0.xxxx
  15: sample r3.xyzw, v1.xyxx, t1.xyzw, s3
  16: mul r2.xyz, r2.xyzx, r3.yyyy
  17: mul r3.xyz, r3.yyyy, v6.xyzx
  18: dp3 r0.x, -v2.xyzx, r1.xyzx
  19: add r1.w, r0.x, r0.x
  20: mov_sat r0.x, r0.x
  21: add r4.y, -r0.x, l(1.000000)
  22: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  23: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  24: mul r1.xyz, r0.xxxx, cb0[2].xyzx
  25: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  26: mul r4.xy, r4.xyxx, r4.xyxx
  27: mul r0.yz, r4.xxyx, r4.xxyx
  28: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
  29: add r1.w, -r0.x, cb0[8].w
  30: add_sat r1.w, r1.w, l(1.000000)
  31: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  32: mad r5.xyz, cb0[4].xyzx, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  33: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  34: mul r4.xyz, r0.xxxx, r4.xyzx
  35: mad r5.xyz, cb0[8].zzzz, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  36: add r6.xyz, r1.wwww, -r5.xyzx
  37: mad r6.xyz, r0.zzzz, r6.xyzx, r5.xyzx
  38: sample r0.xyzw, r0.ywyy, t2.xyzw, s1
  39: mul r0.x, r0.x, l(16.000000)
  40: mad r0.xyz, r0.xxxx, r5.xyzx, r4.xyzx
  41: mul r2.xyz, r2.xyzx, r6.xyzx
  42: mad r2.xyz, r3.xyzx, r4.xyzx, r2.xyzx
  43: mad o0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  44: mov o0.w, l(1.000000)
  45: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         2  ( FLT, FLT, FLT, FLT)
// c3         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2            38         7  ( FLT, FLT, FLT, FLT)
// c12        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c16        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c23, 1, 0, 0.416666657, 0
          def c24, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.w, c3.w
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c17
   7:     mad r0.xyz, c16, v0.x, r0
   8:     mad r0.xyz, c18, v0.z, r0
   9:     mad r0.xyz, c19, v0.w, r0
  10:     add r0.xyz, r0, -c4
  11:     dp3 r0.w, r0, r0
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r0
  14:     dp3 r0.x, v1, c20
  15:     dp3 r0.y, v1, c21
  16:     dp3 r0.z, v1, c22
  17:     nrm r1.xyz, r0
  20:     mul r0.x, r1.y, r1.y
  21:     mad r0.x, r1.x, r1.x, -r0.x
  22:     mul r2, r1.yzzx, r1.xyzz
  23:     dp4 r3.x, c8, r2
  24:     dp4 r3.y, c9, r2
  25:     dp4 r3.z, c10, r2
  26:     mad r0.xyz, c11, r0.x, r3
  27:     mov r1.w, c23.x
  28:     dp4 r2.x, c5, r1
  29:     dp4 r2.y, c6, r1
  30:     dp4 r2.z, c7, r1
  31:     mov oT4.xyz, r1
  32:     add r0.xyz, r0, r2
  33:     max r0.xyz, r0, c23.y
  34:     mov r0.w, c23.z
  35:     lit r1, r0.xxww
  36:     mov r1.x, r1.z
  37:     lit r2, r0.yyww
  38:     lit r0, r0.zzww
  39:     mov r1.z, r0.z
  40:     mov r1.y, r2.z
  41:     mad r0.xyz, r1, c24.x, c24.y
  42:     max oT5.xyz, r0, c23.y
  43:     mul r0, v0.y, c13
  44:     mad r0, c12, v0.x, r0
  45:     mad r0, c14, v0.z, r0
  46:     add r0, r0, c15
  47:     mad oPos.xy, r0.w, c0, r0
  48:     mov oPos.zw, r0
  49:     mov oT2, c23.y
  50:     mov oT3, c23.y
  51:     mov oT4.w, c23.y
  52:     mov oT5.w, c23.y

// approximately 53 instruction slots used
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r0.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.w, l(0)
  19: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  20: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  21: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  22: dp3 r0.w, r0.xyzx, r0.xyzx
  23: rsq r0.w, r0.w
  24: mul r0.xyz, r0.wwww, r0.xyzx
  25: mov o5.xyz, r0.xyzx
  26: mul r1.x, r0.y, r0.y
  27: mad r1.x, r0.x, r0.x, -r1.x
  28: mul r2.xyzw, r0.yzzx, r0.xyzz
  29: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  30: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  31: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  32: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  33: mov r0.w, l(1.000000)
  34: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  35: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  36: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  37: add r0.xyz, r1.xyzx, r2.xyzx
  38: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  39: log r0.xyz, r0.xyzx
  40: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  41: exp r0.xyz, r0.xyzx
  42: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  43: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: mov o6.w, l(0)
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11_9x":
// Stats: 38 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set CUBE Texture "unity_SpecCube0" to slot 2
Set 2D Texture "unity_NHxRoughness" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             4         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c4         cb2             3         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t2               
// s1             s1              t3               
// s2             s2              t0               
// s3             s3              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c5, -0.220916301, 0.220916301, 0.779083729, 1
          def c6, 0.699999988, 1.70000005, 6, 16
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t4
          dcl_pp t5
          dcl_cube s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
   0:     mov r0, c5
   1:     add r1.w, -r0.w, c4.w
   2:     mul r1.x, r1.w, r1.w
   3:     add_pp r1.y, r0.w, -c2.w
   4:     mad_pp r1.z, r1.y, -c6.x, c6.y
   5:     mul_pp r1.y, r1.z, r1.y
   6:     mul_pp r2.w, r1.y, c6.z
   7:     nrm_pp r3.xyz, t4
  10:     dp3_pp r3.w, t1, r3
  11:     add_pp r3.w, r3.w, r3.w
  12:     mad_pp r2.xyz, r3, -r3.w, t1
  13:     dp3_pp r3.w, -t1, r3
  14:     add_pp r1.y, r3.w, r3.w
  15:     mov_sat_pp r3.w, r3.w
  16:     add_pp r4.y, -r3.w, c5.w
  17:     mad_pp r5.xyz, r3, -r1.y, -t1
  18:     dp3_pp r4.x, r5, c3
  19:     mul_pp r1.yz, r4.zxyw, r4.zxyw
  20:     mul_pp r4.xy, r1.yzxw, r1.yzxw
  21:     add_pp r4.z, r0.w, -c2.w
  22:     mov_pp r5.x, r4.x
  23:     mov_pp r5.y, r4.z
  24:     texldb_pp r2, r2, s0
  24:     texld_pp r6, t0, s3
  24:     texld r7, t0, s2
  24:     texld r5, r5, s1
  24:     cmp_pp r0.w, -r1.x, r2.w, c5.w
  25:     mul_pp r0.w, r0.w, c4.x
  26:     mul_pp r1.xyz, r2, r0.w
  27:     mul_pp r1.xyz, r6.y, r1
  28:     mul_pp r2.xyz, r6.y, t5
  29:     dp3_sat_pp r0.w, r3, c3
  30:     mul_pp r3.xyz, r0.w, c0
  31:     mad_pp r1.w, c2.z, -r0.z, r0.z
  32:     add_pp r2.w, -r1.w, c5.w
  33:     add_sat_pp r2.w, r2.w, c2.w
  34:     mad_pp r5.yzw, c1.wzyx, r7.wzyx, r0.x
  35:     mul_pp r6.xyz, r7, c1
  36:     mul_pp r6.xyz, r1.w, r6
  37:     mad_pp r0.xyz, c2.z, r5.wzyx, r0.y
  38:     lrp_pp r5.yzw, r4.y, r2.w, r0.wzyx
  39:     mul_pp r1.xyz, r1, r5.wzyx
  40:     mad_pp r1.xyz, r2, r6, r1
  41:     mul_pp r0.w, r5.x, c6.w
  42:     mad_pp r0.xyz, r0.w, r0, r6
  43:     mad_pp r0.xyz, r0, r3, r1
  44:     mov r0.w, c5.w
  45:     mov_pp oC0, r0

// approximately 50 instruction slots used (4 texture, 46 arithmetic)
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_b r2.xyzw, r2.xyzx, t2.xyzw, s0, r0.x
  11: eq r0.x, cb2[3].w, l(1.000000)
  12: movc r0.x, r0.x, r2.w, l(1.000000)
  13: mul r0.x, r0.x, cb2[3].x
  14: mul r2.xyz, r2.xyzx, r0.xxxx
  15: sample r3.xyzw, v1.xyxx, t1.xyzw, s3
  16: mul r2.xyz, r2.xyzx, r3.yyyy
  17: mul r3.xyz, r3.yyyy, v6.xyzx
  18: dp3 r0.x, -v2.xyzx, r1.xyzx
  19: add r1.w, r0.x, r0.x
  20: mov_sat r0.x, r0.x
  21: add r4.y, -r0.x, l(1.000000)
  22: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  23: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  24: mul r1.xyz, r0.xxxx, cb0[2].xyzx
  25: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  26: mul r4.xy, r4.xyxx, r4.xyxx
  27: mul r0.yz, r4.xxyx, r4.xxyx
  28: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
  29: add r1.w, -r0.x, cb0[8].w
  30: add_sat r1.w, r1.w, l(1.000000)
  31: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  32: mad r5.xyz, cb0[4].xyzx, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  33: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  34: mul r4.xyz, r0.xxxx, r4.xyzx
  35: mad r5.xyz, cb0[8].zzzz, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  36: add r6.xyz, r1.wwww, -r5.xyzx
  37: mad r6.xyz, r0.zzzz, r6.xyzx, r5.xyzx
  38: sample r0.xyzw, r0.ywyy, t3.xyzw, s1
  39: mul r0.x, r0.x, l(16.000000)
  40: mad r0.xyz, r0.xxxx, r5.xyzx, r4.xyzx
  41: mul r2.xyz, r2.xyzx, r6.xyzx
  42: mad r2.xyz, r3.xyzx, r4.xyzx, r2.xyzx
  43: mad o0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  44: mov o0.w, l(1.000000)
  45: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN 
-- Vertex shader for "d3d9":
// Stats: 60 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 20
Vector4 _MainTex_ST at 19
Vector4 _ProjectionParams at 11
Float _UVSec at 21
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHAb at 14
Vector4 unity_SHAg at 13
Vector4 unity_SHAr at 12
Vector4 unity_SHBb at 17
Vector4 unity_SHBg at 16
Vector4 unity_SHBr at 15
Vector4 unity_SHC at 18

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       3
//   unity_WorldToObject  c7       3
//   _WorldSpaceCameraPos c10      1
//   _ProjectionParams    c11      1
//   unity_SHAr           c12      1
//   unity_SHAg           c13      1
//   unity_SHAb           c14      1
//   unity_SHBr           c15      1
//   unity_SHBg           c16      1
//   unity_SHBb           c17      1
//   unity_SHC            c18      1
//   _MainTex_ST          c19      1
//   _DetailAlbedoMap_ST  c20      1
//   _UVSec               c21      1
//

    vs_2_0
    def c22, 1, 0, 0.5, 0.416666657
    def c23, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad oT0.xy, v2, c19, c19.zwzw
    mul r0.x, c21.x, c21.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c20.xyxy, c20
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r0.xyz, r0, -c10
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r0
    mad r0, v0.xyzx, c22.xxxy, c22.yyyx
    dp4 r1.y, c1, r0
    mul r2.x, r1.y, c11.x
    mul r2.w, r2.x, c22.z
    dp4 r1.x, c0, r0
    dp4 r1.w, c3, r0
    dp4 r1.z, c2, r0
    mul r2.xz, r1.xyww, c22.z
    mov r4, r1
    mov oT6.zw, r1
    add oT6.xy, r2.z, r2.xwzw
    mul r0.xyz, v1.y, c8
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c15, r2
    dp4 r3.y, c16, r2
    dp4 r3.z, c17, r2
    mad r0.xyz, c18, r0.x, r3
    mov r1.w, c22.x
    dp4 r2.x, c12, r1
    dp4 r2.y, c13, r1
    dp4 r2.z, c14, r1
    mov oT4.xyz, r1
    add r0.xyz, r0, r2
    max r0.xyz, r0, c22.y
    mov r0.w, c22.w
    lit r1, r0.xxww
    mov r1.x, r1.z
    lit r2, r0.yyww
    lit r0, r0.zzww
    mov r1.z, r0.z
    mov r1.y, r2.z
    mad r0.xyz, r1, c23.x, c23.y
    max oT5.xyz, r0, c22.y
    mov oT2, c22.y
    mov oT3, c22.y
    mov oT4.w, c22.y
    mov oT5.w, c22.y
    mad oPos.xy, r4.w, c255, r4
    mov oPos.zw, r4

// approximately 59 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 48 math, 5 textures
Vector4 _Color at 3
Float _Glossiness at 5
Vector4 _LightColor0 at 2
Float _Metallic at 4
Vector4 _WorldSpaceLightPos0 at 0
Vector4 unity_SpecCube0_HDR at 1

Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3
Set 2D Texture "_ShadowMapTexture" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   sampler2D _ShadowMapTexture;
//   float4 _WorldSpaceLightPos0;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceLightPos0 c0       1
//   unity_SpecCube0_HDR  c1       1
//   _LightColor0         c2       1
//   _Color               c3       1
//   _Metallic            c4       1
//   _Glossiness          c5       1
//   unity_SpecCube0      s0       1
//   unity_NHxRoughness   s1       1
//   _MainTex             s2       1
//   _OcclusionMap        s3       1
//   _ShadowMapTexture    s4       1
//

    ps_2_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 1
    def c7, 0.699999988, 1.70000005, 6, 16
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t4.xyz
    dcl_pp t5.xyz
    dcl t6
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    mov r0, c6
    add r1.w, -r0.w, c1.w
    mul r1.x, r1.w, r1.w
    add_pp r1.y, r0.w, -c5.x
    mad_pp r1.z, r1.y, -c7.x, c7.y
    mul_pp r1.y, r1.z, r1.y
    mul_pp r2.w, r1.y, c7.z
    nrm_pp r3.xyz, t4
    dp3_pp r3.w, t1, r3
    add_pp r3.w, r3.w, r3.w
    mad_pp r2.xyz, r3, -r3.w, t1
    dp3_pp r3.w, -t1, r3
    add_pp r1.y, r3.w, r3.w
    mov_sat_pp r3.w, r3.w
    add_pp r4.y, -r3.w, c6.w
    mad_pp r5.xyz, r3, -r1.y, -t1
    dp3_pp r4.x, r5, c0
    mul_pp r1.yz, r4.zxyw, r4.zxyw
    mul_pp r4.xy, r1.yzxw, r1.yzxw
    add_pp r4.z, r0.w, -c5.x
    mov_pp r5.x, r4.x
    mov_pp r5.y, r4.z
    texldb_pp r2, r2, s0
    texld_pp r6, t0, s3
    texld r7, t0, s2
    texld r5, r5, s1
    texldp_pp r8, t6, s4
    cmp_pp r0.w, -r1.x, r2.w, c6.w
    mul_pp r0.w, r0.w, c1.x
    mul_pp r1.xyz, r2, r0.w
    mul_pp r1.xyz, r6.y, r1
    mul_pp r2.xyz, r6.y, t5
    dp3_sat_pp r0.w, r3, c0
    mad_pp r1.w, c4.x, -r0.z, r0.z
    add_pp r2.w, -r1.w, c6.w
    add_sat_pp r2.w, r2.w, c5.x
    mad_pp r3.xyz, c3, r7, r0.x
    mul_pp r5.yzw, r7.wzyx, c3.wzyx
    mul_pp r5.yzw, r1.w, r5
    mad_pp r0.xyz, c4.x, r3, r0.y
    lrp_pp r3.xyz, r4.y, r2.w, r0
    mul_pp r1.xyz, r1, r3
    mad_pp r1.xyz, r2, r5.wzyx, r1
    mul_pp r1.w, r5.x, c7.w
    mad_pp r0.xyz, r1.w, r0, r5.wzyx
    mul_pp r2.xyz, r8.x, c2
    mul_pp r2.xyz, r0.w, r2
    mad_pp r0.xyz, r0, r2, r1
    mov r0.w, c6.w
    mov_pp oC0, r0

// approximately 52 instruction slots used (5 texture, 47 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 41 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[9].w, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
   8: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r1.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mov o5.w, l(0)
  20: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  21: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  22: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  23: dp3 r1.w, r1.xyzx, r1.xyzx
  24: rsq r1.w, r1.w
  25: mul r1.xyz, r1.wwww, r1.xyzx
  26: mov o5.xyz, r1.xyzx
  27: mul r2.x, r1.y, r1.y
  28: mad r2.x, r1.x, r1.x, -r2.x
  29: mul r3.xyzw, r1.yzzx, r1.xyzz
  30: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  31: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  32: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  33: mad r2.xyz, cb2[44].xyzx, r2.xxxx, r4.xyzx
  34: mov r1.w, l(1.000000)
  35: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  36: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  37: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  38: add r1.xyz, r2.xyzx, r3.xyzx
  39: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  40: log r1.xyz, r1.xyzx
  41: mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  42: exp r1.xyz, r1.xyzx
  43: mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  44: max o6.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mov o6.w, l(0)
  46: mul r0.y, r0.y, cb1[5].x
  47: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  48: mov o7.zw, r0.zzzw
  49: add o7.xy, r1.zzzz, r1.xwxx
  50: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 40 math, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_OcclusionMap" to slot 2
Set 2D Texture "unity_NHxRoughness" to slot 3
Set CUBE Texture "unity_SpecCube0" to slot 4

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_l r2.xyzw, r2.xyzx, t4.xyzw, s0, r0.x
  11: eq r0.x, cb2[3].w, l(1.000000)
  12: movc r0.x, r0.x, r2.w, l(1.000000)
  13: mul r0.x, r0.x, cb2[3].x
  14: mul r2.xyz, r2.xyzx, r0.xxxx
  15: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  16: mul r2.xyz, r2.xyzx, r3.yyyy
  17: mul r3.xyz, r3.yyyy, v6.xyzx
  18: dp3 r0.x, -v2.xyzx, r1.xyzx
  19: add r1.w, r0.x, r0.x
  20: mov_sat r0.x, r0.x
  21: add r4.y, -r0.x, l(1.000000)
  22: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  23: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  24: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  25: mul r1.xy, r4.xyxx, r4.xyxx
  26: mul r0.yz, r1.xxyx, r1.xxyx
  27: mad r1.x, -cb0[8].z, l(0.779084), l(0.779084)
  28: add r1.y, -r1.x, cb0[8].w
  29: add_sat r1.y, r1.y, l(1.000000)
  30: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  31: mad r5.xyz, cb0[4].xyzx, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  32: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  33: mul r1.xzw, r1.xxxx, r4.xxyz
  34: mad r4.xyz, cb0[8].zzzz, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  35: add r5.xyz, r1.yyyy, -r4.xyzx
  36: mad r5.xyz, r0.zzzz, r5.xyzx, r4.xyzx
  37: sample r6.xyzw, r0.ywyy, t3.xyzw, s1
  38: mul r0.y, r6.x, l(16.000000)
  39: mad r0.yzw, r0.yyyy, r4.xxyz, r1.xxzw
  40: mul r2.xyz, r2.xyzx, r5.xyzx
  41: mad r1.xyz, r3.xyzx, r1.xzwx, r2.xyzx
  42: div r2.xy, v7.xyxx, v7.wwww
  43: sample r2.xyzw, r2.xyxx, t1.xyzw, s4
  44: mul r2.xyz, r2.xxxx, cb0[2].xyzx
  45: mul r2.xyz, r0.xxxx, r2.xyzx
  46: mad o0.xyz, r0.yzwy, r2.xyzx, r1.xyzx
  47: mov o0.w, l(1.000000)
  48: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL _EMISSION 
-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d9":
// Stats: 48 math, 5 textures
Vector4 _Color at 3
Vector4 _EmissionColor at 6
Float _Glossiness at 5
Vector4 _LightColor0 at 2
Float _Metallic at 4
Vector4 _WorldSpaceLightPos0 at 0
Vector4 unity_SpecCube0_HDR at 1

Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3
Set 2D Texture "_EmissionMap" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float4 _WorldSpaceLightPos0;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceLightPos0 c0       1
//   unity_SpecCube0_HDR  c1       1
//   _LightColor0         c2       1
//   _Color               c3       1
//   _Metallic            c4       1
//   _Glossiness          c5       1
//   _EmissionColor       c6       1
//   unity_SpecCube0      s0       1
//   unity_NHxRoughness   s1       1
//   _MainTex             s2       1
//   _OcclusionMap        s3       1
//   _EmissionMap         s4       1
//

    ps_2_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 0.699999988, 1.70000005, 6, 16
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t4.xyz
    dcl_pp t5.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    mov r0, c7
    add r1.w, -r0.w, c1.w
    mul r1.x, r1.w, r1.w
    add_pp r1.y, r0.w, -c5.x
    mad_pp r1.z, r1.y, -c8.x, c8.y
    mul_pp r1.y, r1.z, r1.y
    mul_pp r2.w, r1.y, c8.z
    nrm_pp r3.xyz, t4
    dp3_pp r3.w, t1, r3
    add_pp r3.w, r3.w, r3.w
    mad_pp r2.xyz, r3, -r3.w, t1
    dp3_pp r3.w, -t1, r3
    add_pp r1.y, r3.w, r3.w
    mov_sat_pp r3.w, r3.w
    add_pp r4.y, -r3.w, c7.w
    mad_pp r5.xyz, r3, -r1.y, -t1
    dp3_pp r4.x, r5, c0
    mul_pp r1.yz, r4.zxyw, r4.zxyw
    mul_pp r4.xy, r1.yzxw, r1.yzxw
    add_pp r4.z, r0.w, -c5.x
    mov_pp r5.x, r4.x
    mov_pp r5.y, r4.z
    texldb_pp r2, r2, s0
    texld_pp r6, t0, s3
    texld r7, t0, s2
    texld r5, r5, s1
    texld r8, t0, s4
    cmp_pp r0.w, -r1.x, r2.w, c7.w
    mul_pp r0.w, r0.w, c1.x
    mul_pp r1.xyz, r2, r0.w
    mul_pp r1.xyz, r6.y, r1
    mul_pp r2.xyz, r6.y, t5
    dp3_sat_pp r0.w, r3, c0
    mul_pp r3.xyz, r0.w, c2
    mad_pp r1.w, c4.x, -r0.z, r0.z
    add_pp r2.w, -r1.w, c7.w
    add_sat_pp r2.w, r2.w, c5.x
    mad_pp r5.yzw, c3.wzyx, r7.wzyx, r0.x
    mul_pp r6.xyz, r7, c3
    mul_pp r6.xyz, r1.w, r6
    mad_pp r0.xyz, c4.x, r5.wzyx, r0.y
    lrp_pp r5.yzw, r4.y, r2.w, r0.wzyx
    mul_pp r1.xyz, r1, r5.wzyx
    mad_pp r1.xyz, r2, r6, r1
    mul_pp r0.w, r5.x, c8.w
    mad_pp r0.xyz, r0.w, r0, r6
    mad_pp r0.xyz, r0, r3, r1
    mad_pp r0.xyz, r8, c6, r0
    mov r0.w, c7.w
    mov_pp oC0, r0

// approximately 52 instruction slots used (5 texture, 47 arithmetic)


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11":
// Stats: 39 math, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set 2D Texture "unity_NHxRoughness" to slot 2
Set 2D Texture "_EmissionMap" to slot 3
Set CUBE Texture "unity_SpecCube0" to slot 4

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_l r2.xyzw, r2.xyzx, t4.xyzw, s0, r0.x
  11: eq r0.x, cb2[3].w, l(1.000000)
  12: movc r0.x, r0.x, r2.w, l(1.000000)
  13: mul r0.x, r0.x, cb2[3].x
  14: mul r2.xyz, r2.xyzx, r0.xxxx
  15: sample r3.xyzw, v1.xyxx, t1.xyzw, s3
  16: mul r2.xyz, r2.xyzx, r3.yyyy
  17: mul r3.xyz, r3.yyyy, v6.xyzx
  18: dp3 r0.x, -v2.xyzx, r1.xyzx
  19: add r1.w, r0.x, r0.x
  20: mov_sat r0.x, r0.x
  21: add r4.y, -r0.x, l(1.000000)
  22: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  23: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  24: mul r1.xyz, r0.xxxx, cb0[2].xyzx
  25: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  26: mul r4.xy, r4.xyxx, r4.xyxx
  27: mul r0.yz, r4.xxyx, r4.xxyx
  28: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
  29: add r1.w, -r0.x, cb0[8].w
  30: add_sat r1.w, r1.w, l(1.000000)
  31: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  32: mad r5.xyz, cb0[4].xyzx, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  33: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  34: mul r4.xyz, r0.xxxx, r4.xyzx
  35: mad r5.xyz, cb0[8].zzzz, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  36: add r6.xyz, r1.wwww, -r5.xyzx
  37: mad r6.xyz, r0.zzzz, r6.xyzx, r5.xyzx
  38: sample r0.xyzw, r0.ywyy, t2.xyzw, s1
  39: mul r0.x, r0.x, l(16.000000)
  40: mad r0.xyz, r0.xxxx, r5.xyzx, r4.xyzx
  41: mul r2.xyz, r2.xyzx, r6.xyzx
  42: mad r2.xyz, r3.xyzx, r4.xyzx, r2.xyzx
  43: mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  44: sample r1.xyzw, v1.xyxx, t3.xyzw, s4
  45: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
  46: mov o0.w, l(1.000000)
  47: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11_9x":
// Stats: 39 math, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1
Set CUBE Texture "unity_SpecCube0" to slot 2
Set 2D Texture "unity_NHxRoughness" to slot 3
Set 2D Texture "_EmissionMap" to slot 4

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             4         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
// c3         cb0            10         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             0         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             3         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t2               
// s1             s1              t3               
// s2             s2              t0               
// s3             s3              t1               
// s4             s4              t4               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c6, -0.220916301, 0.220916301, 0.779083729, 1
          def c7, 0.699999988, 1.70000005, 6, 16
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t4
          dcl_pp t5
          dcl_cube s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
          dcl_2d s4
   0:     mov r0, c6
   1:     add r1.w, -r0.w, c5.w
   2:     mul r1.x, r1.w, r1.w
   3:     add_pp r1.y, r0.w, -c2.w
   4:     mad_pp r1.z, r1.y, -c7.x, c7.y
   5:     mul_pp r1.y, r1.z, r1.y
   6:     mul_pp r2.w, r1.y, c7.z
   7:     nrm_pp r3.xyz, t4
  10:     dp3_pp r3.w, t1, r3
  11:     add_pp r3.w, r3.w, r3.w
  12:     mad_pp r2.xyz, r3, -r3.w, t1
  13:     dp3_pp r3.w, -t1, r3
  14:     add_pp r1.y, r3.w, r3.w
  15:     mov_sat_pp r3.w, r3.w
  16:     add_pp r4.y, -r3.w, c6.w
  17:     mad_pp r5.xyz, r3, -r1.y, -t1
  18:     dp3_pp r4.x, r5, c4
  19:     mul_pp r1.yz, r4.zxyw, r4.zxyw
  20:     mul_pp r4.xy, r1.yzxw, r1.yzxw
  21:     add_pp r4.z, r0.w, -c2.w
  22:     mov_pp r5.x, r4.x
  23:     mov_pp r5.y, r4.z
  24:     texldb_pp r2, r2, s0
  24:     texld_pp r6, t0, s3
  24:     texld r7, t0, s2
  24:     texld r5, r5, s1
  24:     texld r8, t0, s4
  24:     cmp_pp r0.w, -r1.x, r2.w, c6.w
  25:     mul_pp r0.w, r0.w, c5.x
  26:     mul_pp r1.xyz, r2, r0.w
  27:     mul_pp r1.xyz, r6.y, r1
  28:     mul_pp r2.xyz, r6.y, t5
  29:     dp3_sat_pp r0.w, r3, c4
  30:     mul_pp r3.xyz, r0.w, c0
  31:     mad_pp r1.w, c2.z, -r0.z, r0.z
  32:     add_pp r2.w, -r1.w, c6.w
  33:     add_sat_pp r2.w, r2.w, c2.w
  34:     mad_pp r5.yzw, c1.wzyx, r7.wzyx, r0.x
  35:     mul_pp r6.xyz, r7, c1
  36:     mul_pp r6.xyz, r1.w, r6
  37:     mad_pp r0.xyz, c2.z, r5.wzyx, r0.y
  38:     lrp_pp r5.yzw, r4.y, r2.w, r0.wzyx
  39:     mul_pp r1.xyz, r1, r5.wzyx
  40:     mad_pp r1.xyz, r2, r6, r1
  41:     mul_pp r0.w, r5.x, c7.w
  42:     mad_pp r0.xyz, r0.w, r0, r6
  43:     mad_pp r0.xyz, r0, r3, r1
  44:     mad_pp r0.xyz, r8, c3, r0
  45:     mov r0.w, c6.w
  46:     mov_pp oC0, r0

// approximately 52 instruction slots used (5 texture, 47 arithmetic)
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_b r2.xyzw, r2.xyzx, t2.xyzw, s0, r0.x
  11: eq r0.x, cb2[3].w, l(1.000000)
  12: movc r0.x, r0.x, r2.w, l(1.000000)
  13: mul r0.x, r0.x, cb2[3].x
  14: mul r2.xyz, r2.xyzx, r0.xxxx
  15: sample r3.xyzw, v1.xyxx, t1.xyzw, s3
  16: mul r2.xyz, r2.xyzx, r3.yyyy
  17: mul r3.xyz, r3.yyyy, v6.xyzx
  18: dp3 r0.x, -v2.xyzx, r1.xyzx
  19: add r1.w, r0.x, r0.x
  20: mov_sat r0.x, r0.x
  21: add r4.y, -r0.x, l(1.000000)
  22: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  23: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  24: mul r1.xyz, r0.xxxx, cb0[2].xyzx
  25: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  26: mul r4.xy, r4.xyxx, r4.xyxx
  27: mul r0.yz, r4.xxyx, r4.xxyx
  28: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
  29: add r1.w, -r0.x, cb0[8].w
  30: add_sat r1.w, r1.w, l(1.000000)
  31: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  32: mad r5.xyz, cb0[4].xyzx, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  33: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  34: mul r4.xyz, r0.xxxx, r4.xyzx
  35: mad r5.xyz, cb0[8].zzzz, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  36: add r6.xyz, r1.wwww, -r5.xyzx
  37: mad r6.xyz, r0.zzzz, r6.xyzx, r5.xyzx
  38: sample r0.xyzw, r0.ywyy, t3.xyzw, s1
  39: mul r0.x, r0.x, l(16.000000)
  40: mad r0.xyz, r0.xxxx, r5.xyzx, r4.xyzx
  41: mul r2.xyz, r2.xyzx, r6.xyzx
  42: mad r2.xyz, r3.xyzx, r4.xyzx, r2.xyzx
  43: mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  44: sample r1.xyzw, v1.xyxx, t4.xyzw, s4
  45: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
  46: mov o0.w, l(1.000000)
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN _EMISSION 
-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d9":
// Stats: 49 math, 6 textures
Vector4 _Color at 3
Vector4 _EmissionColor at 6
Float _Glossiness at 5
Vector4 _LightColor0 at 2
Float _Metallic at 4
Vector4 _WorldSpaceLightPos0 at 0
Vector4 unity_SpecCube0_HDR at 1

Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3
Set 2D Texture "_EmissionMap" to slot 4
Set 2D Texture "_ShadowMapTexture" to slot 5

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float4 _EmissionColor;
//   sampler2D _EmissionMap;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   sampler2D _ShadowMapTexture;
//   float4 _WorldSpaceLightPos0;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceLightPos0 c0       1
//   unity_SpecCube0_HDR  c1       1
//   _LightColor0         c2       1
//   _Color               c3       1
//   _Metallic            c4       1
//   _Glossiness          c5       1
//   _EmissionColor       c6       1
//   unity_SpecCube0      s0       1
//   unity_NHxRoughness   s1       1
//   _MainTex             s2       1
//   _OcclusionMap        s3       1
//   _EmissionMap         s4       1
//   _ShadowMapTexture    s5       1
//

    ps_2_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 0.699999988, 1.70000005, 6, 16
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t4.xyz
    dcl_pp t5.xyz
    dcl t6
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    dcl_2d s5
    mov r0, c7
    add r1.w, -r0.w, c1.w
    mul r1.x, r1.w, r1.w
    add_pp r1.y, r0.w, -c5.x
    mad_pp r1.z, r1.y, -c8.x, c8.y
    mul_pp r1.y, r1.z, r1.y
    mul_pp r2.w, r1.y, c8.z
    nrm_pp r3.xyz, t4
    dp3_pp r3.w, t1, r3
    add_pp r3.w, r3.w, r3.w
    mad_pp r2.xyz, r3, -r3.w, t1
    dp3_pp r3.w, -t1, r3
    add_pp r1.y, r3.w, r3.w
    mov_sat_pp r3.w, r3.w
    add_pp r4.y, -r3.w, c7.w
    mad_pp r5.xyz, r3, -r1.y, -t1
    dp3_pp r4.x, r5, c0
    mul_pp r1.yz, r4.zxyw, r4.zxyw
    mul_pp r4.xy, r1.yzxw, r1.yzxw
    add_pp r4.z, r0.w, -c5.x
    mov_pp r5.x, r4.x
    mov_pp r5.y, r4.z
    texldb_pp r2, r2, s0
    texld_pp r6, t0, s3
    texld r7, t0, s2
    texld r5, r5, s1
    texldp_pp r8, t6, s5
    texld r9, t0, s4
    cmp_pp r0.w, -r1.x, r2.w, c7.w
    mul_pp r0.w, r0.w, c1.x
    mul_pp r1.xyz, r2, r0.w
    mul_pp r1.xyz, r6.y, r1
    mul_pp r2.xyz, r6.y, t5
    dp3_sat_pp r0.w, r3, c0
    mad_pp r1.w, c4.x, -r0.z, r0.z
    add_pp r2.w, -r1.w, c7.w
    add_sat_pp r2.w, r2.w, c5.x
    mad_pp r3.xyz, c3, r7, r0.x
    mul_pp r5.yzw, r7.wzyx, c3.wzyx
    mul_pp r5.yzw, r1.w, r5
    mad_pp r0.xyz, c4.x, r3, r0.y
    lrp_pp r3.xyz, r4.y, r2.w, r0
    mul_pp r1.xyz, r1, r3
    mad_pp r1.xyz, r2, r5.wzyx, r1
    mul_pp r1.w, r5.x, c8.w
    mad_pp r0.xyz, r1.w, r0, r5.wzyx
    mul_pp r2.xyz, r8.x, c2
    mul_pp r2.xyz, r0.w, r2
    mad_pp r0.xyz, r0, r2, r1
    mad_pp r0.xyz, r9, c6, r0
    mov r0.w, c7.w
    mov_pp oC0, r0

// approximately 54 instruction slots used (6 texture, 48 arithmetic)


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11":
// Stats: 41 math, 5 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_OcclusionMap" to slot 2
Set 2D Texture "unity_NHxRoughness" to slot 3
Set 2D Texture "_EmissionMap" to slot 4
Set CUBE Texture "unity_SpecCube0" to slot 5

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Vector4 _EmissionColor at 160
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_l r2.xyzw, r2.xyzx, t5.xyzw, s0, r0.x
  11: eq r0.x, cb2[3].w, l(1.000000)
  12: movc r0.x, r0.x, r2.w, l(1.000000)
  13: mul r0.x, r0.x, cb2[3].x
  14: mul r2.xyz, r2.xyzx, r0.xxxx
  15: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  16: mul r2.xyz, r2.xyzx, r3.yyyy
  17: mul r3.xyz, r3.yyyy, v6.xyzx
  18: dp3 r0.x, -v2.xyzx, r1.xyzx
  19: add r1.w, r0.x, r0.x
  20: mov_sat r0.x, r0.x
  21: add r4.y, -r0.x, l(1.000000)
  22: mad r5.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  23: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  24: dp3 r4.x, r5.xyzx, cb1[0].xyzx
  25: mul r1.xy, r4.xyxx, r4.xyxx
  26: mul r0.yz, r1.xxyx, r1.xxyx
  27: mad r1.x, -cb0[8].z, l(0.779084), l(0.779084)
  28: add r1.y, -r1.x, cb0[8].w
  29: add_sat r1.y, r1.y, l(1.000000)
  30: sample r4.xyzw, v1.xyxx, t0.xyzw, s2
  31: mad r5.xyz, cb0[4].xyzx, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  32: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  33: mul r1.xzw, r1.xxxx, r4.xxyz
  34: mad r4.xyz, cb0[8].zzzz, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  35: add r5.xyz, r1.yyyy, -r4.xyzx
  36: mad r5.xyz, r0.zzzz, r5.xyzx, r4.xyzx
  37: sample r6.xyzw, r0.ywyy, t3.xyzw, s1
  38: mul r0.y, r6.x, l(16.000000)
  39: mad r0.yzw, r0.yyyy, r4.xxyz, r1.xxzw
  40: mul r2.xyz, r2.xyzx, r5.xyzx
  41: mad r1.xyz, r3.xyzx, r1.xzwx, r2.xyzx
  42: div r2.xy, v7.xyxx, v7.wwww
  43: sample r2.xyzw, r2.xyxx, t1.xyzw, s5
  44: mul r2.xyz, r2.xxxx, cb0[2].xyzx
  45: mul r2.xyz, r0.xxxx, r2.xyzx
  46: mad r0.xyz, r0.yzwy, r2.xyzx, r1.xyzx
  47: sample r1.xyzw, v1.xyxx, t4.xyzw, s4
  48: mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
  49: mov o0.w, l(1.000000)
  50: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL VERTEXLIGHT_ON 
-- Vertex shader for "d3d9":
// Stats: 82 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 4
Matrix4x3 unity_ObjectToWorld at 8
Matrix4x3 unity_WorldToObject at 11
Vector4 _DetailAlbedoMap_ST at 27
Vector4 _MainTex_ST at 26
Float _UVSec at 28
Vector4 _WorldSpaceCameraPos at 14
Vector4 unity_4LightAtten0 at 18
Vector4 unity_4LightPosX0 at 15
Vector4 unity_4LightPosY0 at 16
Vector4 unity_4LightPosZ0 at 17
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHAb at 21
Vector4 unity_SHAg at 20
Vector4 unity_SHAr at 19
Vector4 unity_SHBb at 24
Vector4 unity_SHBg at 23
Vector4 unity_SHBr at 22
Vector4 unity_SHC at 25

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   glstate_matrix_mvp   c4       4
//   unity_ObjectToWorld  c8       3
//   unity_WorldToObject  c11      3
//   _WorldSpaceCameraPos c14      1
//   unity_4LightPosX0    c15      1
//   unity_4LightPosY0    c16      1
//   unity_4LightPosZ0    c17      1
//   unity_4LightAtten0   c18      1
//   unity_SHAr           c19      1
//   unity_SHAg           c20      1
//   unity_SHAb           c21      1
//   unity_SHBr           c22      1
//   unity_SHBg           c23      1
//   unity_SHBb           c24      1
//   unity_SHC            c25      1
//   _MainTex_ST          c26      1
//   _DetailAlbedoMap_ST  c27      1
//   _UVSec               c28      1
//

    vs_2_0
    def c29, 1, 0, 9.99999997e-007, 0.416666657
    def c30, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c29.xxxy, c29.yyyx
    dp4 r7.x, c4, r0
    dp4 r7.y, c5, r0
    dp4 r7.z, c6, r0
    dp4 r7.w, c7, r0
    mad oT0.xy, v2, c26, c26.zwzw
    mul r0.x, c28.x, c28.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c27.xyxy, c27
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add r1.xyz, r0, -c14
    add r2, -r0.x, c15
    add r3, -r0.y, c16
    add r0, -r0.z, c17
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1, r3, r3
    mad r1, r2, r2, r1
    mad r1, r0, r0, r1
    max r1, r1, c29.z
    rsq r4.x, r1.x
    rsq r4.y, r1.y
    rsq r4.z, r1.z
    rsq r4.w, r1.w
    mov r5.x, c29.x
    mad r1, r1, c18, r5.x
    mul r5.xyz, v1.y, c12
    mad r5.xyz, v1.x, c11, r5
    mad r5.xyz, v1.z, c13, r5
    nrm r6.xyz, r5
    mul r3, r3, r6.y
    mad r2, r2, r6.x, r3
    mad r0, r0, r6.z, r2
    mul r0, r4, r0
    max r0, r0, c29.y
    rcp r2.x, r1.x
    rcp r2.y, r1.y
    rcp r2.z, r1.z
    rcp r2.w, r1.w
    mul r0, r0, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mul r0.w, r6.y, r6.y
    mad r0.w, r6.x, r6.x, -r0.w
    mul r1, r6.yzzx, r6.xyzz
    dp4 r2.x, c22, r1
    dp4 r2.y, c23, r1
    dp4 r2.z, c24, r1
    mad r1.xyz, c25, r0.w, r2
    mov r6.w, c29.x
    dp4 r2.x, c19, r6
    dp4 r2.y, c20, r6
    dp4 r2.z, c21, r6
    mov oT4.xyz, r6
    add r1.xyz, r1, r2
    max r1.xyz, r1, c29.y
    mov r1.w, c29.w
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c30.x, c30.y
    max r1.xyz, r1, c29.y
    add oT5.xyz, r0, r1
    mov oT2, c29.y
    mov oT3, c29.y
    mov oT4.w, c29.y
    mov oT5.w, c29.y
    mad oPos.xy, r7.w, c255, r7
    mov oPos.zw, r7

// approximately 81 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 59 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.w, l(0)
  19: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  20: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  21: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  22: dp3 r0.w, r1.xyzx, r1.xyzx
  23: rsq r0.w, r0.w
  24: mul r1.xyz, r0.wwww, r1.xyzx
  25: mov o5.xyz, r1.xyzx
  26: mul r0.w, r1.y, r1.y
  27: mad r0.w, r1.x, r1.x, -r0.w
  28: mul r2.xyzw, r1.yzzx, r1.xyzz
  29: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  30: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  31: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  32: mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  33: mov r1.w, l(1.000000)
  34: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  35: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  36: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  37: add r2.xyz, r2.xyzx, r3.xyzx
  38: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  39: log r2.xyz, r2.xyzx
  40: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  41: exp r2.xyz, r2.xyzx
  42: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  45: mul r4.xyzw, r1.yyyy, r3.xyzw
  46: mul r3.xyzw, r3.xyzw, r3.xyzw
  47: add r5.xyzw, -r0.xxxx, cb2[2].xyzw
  48: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  49: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  50: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  51: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  52: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  53: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  54: rsq r3.xyzw, r0.xyzw
  55: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  56: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  57: mul r1.xyzw, r1.xyzw, r3.xyzw
  58: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  59: mul r0.xyzw, r0.xyzw, r1.xyzw
  60: mul r1.xyz, r0.yyyy, cb2[7].xyzx
  61: mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
  62: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
  63: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  64: add o6.xyz, r2.xyzx, r0.xyzx
  65: mov o6.w, l(0)
  66: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11_9x":
// Stats: 59 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         2  ( FLT, FLT, FLT, FLT)
// c3         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             2         8  ( FLT, FLT, FLT, FLT)
// c13        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c20        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c24        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c31, 9.99999997e-007, 0, 1, 0.416666657
          def c32, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.w, c3.w
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c25
   7:     mad r0.xyz, c24, v0.x, r0
   8:     mad r0.xyz, c26, v0.z, r0
   9:     mad r0.xyz, c27, v0.w, r0
  10:     add r1.xyz, r0, -c4
  11:     dp3 r0.w, r1, r1
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r1
  14:     add r1, -r0.y, c6
  15:     mul r2, r1, r1
  16:     add r3, -r0.x, c5
  17:     add r0, -r0.z, c7
  18:     mad r2, r3, r3, r2
  19:     mad r2, r0, r0, r2
  20:     max r2, r2, c31.x
  21:     rsq r4.x, r2.x
  22:     rsq r4.y, r2.y
  23:     rsq r4.z, r2.z
  24:     rsq r4.w, r2.w
  25:     mov r5.z, c31.z
  26:     mad r2, r2, c8, r5.z
  27:     dp3 r5.x, v1, c28
  28:     dp3 r5.y, v1, c29
  29:     dp3 r5.z, v1, c30
  30:     nrm r6.xyz, r5
  33:     mul r1, r1, r6.y
  34:     mad r1, r3, r6.x, r1
  35:     mad r0, r0, r6.z, r1
  36:     mul r0, r4, r0
  37:     max r0, r0, c31.y
  38:     rcp r1.x, r2.x
  39:     rcp r1.y, r2.y
  40:     rcp r1.z, r2.z
  41:     rcp r1.w, r2.w
  42:     mul r0, r0, r1
  43:     mul r1.xyz, r0.y, c10
  44:     mad r1.xyz, c9, r0.x, r1
  45:     mad r0.xyz, c11, r0.z, r1
  46:     mad r0.xyz, c12, r0.w, r0
  47:     mul r0.w, r6.y, r6.y
  48:     mad r0.w, r6.x, r6.x, -r0.w
  49:     mul r1, r6.yzzx, r6.xyzz
  50:     dp4 r2.x, c16, r1
  51:     dp4 r2.y, c17, r1
  52:     dp4 r2.z, c18, r1
  53:     mad r1.xyz, c19, r0.w, r2
  54:     mov r6.w, c31.z
  55:     dp4 r2.x, c13, r6
  56:     dp4 r2.y, c14, r6
  57:     dp4 r2.z, c15, r6
  58:     mov oT4.xyz, r6
  59:     add r1.xyz, r1, r2
  60:     max r1.xyz, r1, c31.y
  61:     mov r1.w, c31.w
  62:     lit r2, r1.xxww
  63:     mov r2.x, r2.z
  64:     lit r3, r1.yyww
  65:     lit r1, r1.zzww
  66:     mov r2.z, r1.z
  67:     mov r2.y, r3.z
  68:     mad r1.xyz, r2, c32.x, c32.y
  69:     max r1.xyz, r1, c31.y
  70:     add oT5.xyz, r0, r1
  71:     mul r0, v0.y, c21
  72:     mad r0, c20, v0.x, r0
  73:     mad r0, c22, v0.z, r0
  74:     add r0, r0, c23
  75:     mad oPos.xy, r0.w, c0, r0
  76:     mov oPos.zw, r0
  77:     mov oT2, c31.y
  78:     mov oT3, c31.y
  79:     mov oT4.w, c31.y
  80:     mov oT5.w, c31.y

// approximately 81 instruction slots used
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.w, l(0)
  19: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  20: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  21: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  22: dp3 r0.w, r1.xyzx, r1.xyzx
  23: rsq r0.w, r0.w
  24: mul r1.xyz, r0.wwww, r1.xyzx
  25: mov o5.xyz, r1.xyzx
  26: mul r0.w, r1.y, r1.y
  27: mad r0.w, r1.x, r1.x, -r0.w
  28: mul r2.xyzw, r1.yzzx, r1.xyzz
  29: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  30: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  31: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  32: mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  33: mov r1.w, l(1.000000)
  34: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  35: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  36: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  37: add r2.xyz, r2.xyzx, r3.xyzx
  38: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  39: log r2.xyz, r2.xyzx
  40: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  41: exp r2.xyz, r2.xyzx
  42: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  45: mul r4.xyzw, r1.yyyy, r3.xyzw
  46: mul r3.xyzw, r3.xyzw, r3.xyzw
  47: add r5.xyzw, -r0.xxxx, cb2[2].xyzw
  48: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  49: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  50: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  51: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  52: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  53: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  54: rsq r3.xyzw, r0.xyzw
  55: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  56: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  57: mul r1.xyzw, r1.xyzw, r3.xyzw
  58: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  59: mul r0.xyzw, r0.xyzw, r1.xyzw
  60: mul r1.xyz, r0.yyyy, cb2[7].xyzx
  61: mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
  62: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
  63: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  64: add o6.xyz, r2.xyzx, r0.xyzx
  65: mov o6.w, l(0)
  66: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
-- Vertex shader for "d3d9":
// Stats: 88 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 4
Matrix4x3 unity_ObjectToWorld at 8
Matrix4x3 unity_WorldToObject at 11
Vector4 _DetailAlbedoMap_ST at 28
Vector4 _MainTex_ST at 27
Vector4 _ProjectionParams at 15
Float _UVSec at 29
Vector4 _WorldSpaceCameraPos at 14
Vector4 unity_4LightAtten0 at 19
Vector4 unity_4LightPosX0 at 16
Vector4 unity_4LightPosY0 at 17
Vector4 unity_4LightPosZ0 at 18
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHAb at 22
Vector4 unity_SHAg at 21
Vector4 unity_SHAr at 20
Vector4 unity_SHBb at 25
Vector4 unity_SHBg at 24
Vector4 unity_SHBr at 23
Vector4 unity_SHC at 26

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   glstate_matrix_mvp   c4       4
//   unity_ObjectToWorld  c8       3
//   unity_WorldToObject  c11      3
//   _WorldSpaceCameraPos c14      1
//   _ProjectionParams    c15      1
//   unity_4LightPosX0    c16      1
//   unity_4LightPosY0    c17      1
//   unity_4LightPosZ0    c18      1
//   unity_4LightAtten0   c19      1
//   unity_SHAr           c20      1
//   unity_SHAg           c21      1
//   unity_SHAb           c22      1
//   unity_SHBr           c23      1
//   unity_SHBg           c24      1
//   unity_SHBb           c25      1
//   unity_SHC            c26      1
//   _MainTex_ST          c27      1
//   _DetailAlbedoMap_ST  c28      1
//   _UVSec               c29      1
//

    vs_2_0
    def c30, 1, 0, 0.5, 9.99999997e-007
    def c31, 0.416666657, 1.05499995, -0.0549999997, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad oT0.xy, v2, c27, c27.zwzw
    mul r0.x, c29.x, c29.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c28.xyxy, c28
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add r1.xyz, r0, -c14
    add r2, -r0.x, c16
    add r3, -r0.y, c17
    add r0, -r0.z, c18
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mad r1, v0.xyzx, c30.xxxy, c30.yyyx
    dp4 r4.y, c5, r1
    mul r5.x, r4.y, c15.x
    mul r5.w, r5.x, c30.z
    dp4 r4.x, c4, r1
    dp4 r4.w, c7, r1
    dp4 r4.z, c6, r1
    mul r5.xz, r4.xyww, c30.z
    mov r7, r4
    mov oT6.zw, r4
    add oT6.xy, r5.z, r5.xwzw
    mul r1, r3, r3
    mad r1, r2, r2, r1
    mad r1, r0, r0, r1
    max r1, r1, c30.w
    rsq r4.x, r1.x
    rsq r4.y, r1.y
    rsq r4.z, r1.z
    rsq r4.w, r1.w
    mov r5.x, c30.x
    mad r1, r1, c19, r5.x
    mul r5.xyz, v1.y, c12
    mad r5.xyz, v1.x, c11, r5
    mad r5.xyz, v1.z, c13, r5
    nrm r6.xyz, r5
    mul r3, r3, r6.y
    mad r2, r2, r6.x, r3
    mad r0, r0, r6.z, r2
    mul r0, r4, r0
    max r0, r0, c30.y
    rcp r2.x, r1.x
    rcp r2.y, r1.y
    rcp r2.z, r1.z
    rcp r2.w, r1.w
    mul r0, r0, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mul r0.w, r6.y, r6.y
    mad r0.w, r6.x, r6.x, -r0.w
    mul r1, r6.yzzx, r6.xyzz
    dp4 r2.x, c23, r1
    dp4 r2.y, c24, r1
    dp4 r2.z, c25, r1
    mad r1.xyz, c26, r0.w, r2
    mov r6.w, c30.x
    dp4 r2.x, c20, r6
    dp4 r2.y, c21, r6
    dp4 r2.z, c22, r6
    mov oT4.xyz, r6
    add r1.xyz, r1, r2
    max r1.xyz, r1, c30.y
    mov r1.w, c31.x
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c31.y, c31.z
    max r1.xyz, r1, c30.y
    add oT5.xyz, r0, r1
    mov oT2, c30.y
    mov oT3, c30.y
    mov oT4.w, c30.y
    mov oT5.w, c30.y
    mad oPos.xy, r7.w, c255, r7
    mov oPos.zw, r7

// approximately 87 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 62 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 7
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[9].w, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
   8: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r2.xyzx, r2.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r2.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mov o5.w, l(0)
  20: dp3 r2.x, v1.xyzx, cb3[16].xyzx
  21: dp3 r2.y, v1.xyzx, cb3[17].xyzx
  22: dp3 r2.z, v1.xyzx, cb3[18].xyzx
  23: dp3 r1.w, r2.xyzx, r2.xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, r2.xyzx
  26: mov o5.xyz, r2.xyzx
  27: mul r1.w, r2.y, r2.y
  28: mad r1.w, r2.x, r2.x, -r1.w
  29: mul r3.xyzw, r2.yzzx, r2.xyzz
  30: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  31: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  32: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  33: mad r3.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  34: mov r2.w, l(1.000000)
  35: dp4 r4.x, cb2[38].xyzw, r2.xyzw
  36: dp4 r4.y, cb2[39].xyzw, r2.xyzw
  37: dp4 r4.z, cb2[40].xyzw, r2.xyzw
  38: add r3.xyz, r3.xyzx, r4.xyzx
  39: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  40: log r3.xyz, r3.xyzx
  41: mul r3.xyz, r3.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  42: exp r3.xyz, r3.xyzx
  43: mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  44: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  46: mul r5.xyzw, r2.yyyy, r4.xyzw
  47: mul r4.xyzw, r4.xyzw, r4.xyzw
  48: add r6.xyzw, -r1.xxxx, cb2[2].xyzw
  49: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  50: mad r5.xyzw, r6.xyzw, r2.xxxx, r5.xyzw
  51: mad r2.xyzw, r1.xyzw, r2.zzzz, r5.xyzw
  52: mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw
  53: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  54: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  55: rsq r4.xyzw, r1.xyzw
  56: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  57: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  58: mul r2.xyzw, r2.xyzw, r4.xyzw
  59: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  60: mul r1.xyzw, r1.xyzw, r2.xyzw
  61: mul r2.xyz, r1.yyyy, cb2[7].xyzx
  62: mad r2.xyz, cb2[6].xyzx, r1.xxxx, r2.xyzx
  63: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r2.xyzx
  64: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  65: add o6.xyz, r3.xyzx, r1.xyzx
  66: mov o6.w, l(0)
  67: mul r0.y, r0.y, cb1[5].x
  68: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  69: mov o7.zw, r0.zzzw
  70: add o7.xy, r1.zzzz, r1.xwxx
  71: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d9":
// Stats: 54 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 19
Vector4 _MainTex_ST at 18
Float _UVSec at 20
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHAb at 13
Vector4 unity_SHAg at 12
Vector4 unity_SHAr at 11
Vector4 unity_SHBb at 16
Vector4 unity_SHBg at 15
Vector4 unity_SHBr at 14
Vector4 unity_SHC at 17

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       3
//   unity_WorldToObject  c7       3
//   _WorldSpaceCameraPos c10      1
//   unity_SHAr           c11      1
//   unity_SHAg           c12      1
//   unity_SHAb           c13      1
//   unity_SHBr           c14      1
//   unity_SHBg           c15      1
//   unity_SHBb           c16      1
//   unity_SHC            c17      1
//   _MainTex_ST          c18      1
//   _DetailAlbedoMap_ST  c19      1
//   _UVSec               c20      1
//

    vs_2_0
    def c21, 1, 0, 0.416666657, 0
    def c22, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c21.xxxy, c21.yyyx
    dp4 r4.x, c0, r0
    dp4 r4.y, c1, r0
    dp4 r4.z, c2, r0
    dp4 r4.w, c3, r0
    mad oT0.xy, v2, c18, c18.zwzw
    mul r0.x, c20.x, c20.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c19.xyxy, c19
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r0.xyz, r0, -c10
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r0
    mul r0.xyz, v1.y, c8
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c14, r2
    dp4 r3.y, c15, r2
    dp4 r3.z, c16, r2
    mad r0.xyz, c17, r0.x, r3
    mov r1.w, c21.x
    dp4 r2.x, c11, r1
    dp4 r2.y, c12, r1
    dp4 r2.z, c13, r1
    mov oT4.xyz, r1
    add r0.xyz, r0, r2
    max r0.xyz, r0, c21.y
    mov r0.w, c21.z
    lit r1, r0.xxww
    mov r1.x, r1.z
    lit r2, r0.yyww
    lit r0, r0.zzww
    mov r1.z, r0.z
    mov r1.y, r2.z
    mad r0.xyz, r1, c22.x, c22.y
    max oT5.xyz, r0, c21.y
    mov oT2, c21.y
    mov oT3, c21.y
    mov oT4.w, c21.y
    mov oT5.w, c21.y
    mad oPos.xy, r4.w, c255, r4
    mov oPos.zw, r4

// approximately 53 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r0.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.w, l(0)
  19: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  20: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  21: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  22: dp3 r0.w, r0.xyzx, r0.xyzx
  23: rsq r0.w, r0.w
  24: mul r0.xyz, r0.wwww, r0.xyzx
  25: mov o5.xyz, r0.xyzx
  26: mul r1.x, r0.y, r0.y
  27: mad r1.x, r0.x, r0.x, -r1.x
  28: mul r2.xyzw, r0.yzzx, r0.xyzz
  29: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  30: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  31: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  32: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  33: mov r0.w, l(1.000000)
  34: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  35: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  36: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  37: add r0.xyz, r1.xyzx, r2.xyzx
  38: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  39: log r0.xyz, r0.xyzx
  40: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  41: exp r0.xyz, r0.xyzx
  42: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  43: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: mov o6.w, l(0)
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11_9x":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         2  ( FLT, FLT, FLT, FLT)
// c3         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2            38         7  ( FLT, FLT, FLT, FLT)
// c12        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c16        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c23, 1, 0, 0.416666657, 0
          def c24, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.w, c3.w
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c17
   7:     mad r0.xyz, c16, v0.x, r0
   8:     mad r0.xyz, c18, v0.z, r0
   9:     mad r0.xyz, c19, v0.w, r0
  10:     add r0.xyz, r0, -c4
  11:     dp3 r0.w, r0, r0
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r0
  14:     dp3 r0.x, v1, c20
  15:     dp3 r0.y, v1, c21
  16:     dp3 r0.z, v1, c22
  17:     nrm r1.xyz, r0
  20:     mul r0.x, r1.y, r1.y
  21:     mad r0.x, r1.x, r1.x, -r0.x
  22:     mul r2, r1.yzzx, r1.xyzz
  23:     dp4 r3.x, c8, r2
  24:     dp4 r3.y, c9, r2
  25:     dp4 r3.z, c10, r2
  26:     mad r0.xyz, c11, r0.x, r3
  27:     mov r1.w, c23.x
  28:     dp4 r2.x, c5, r1
  29:     dp4 r2.y, c6, r1
  30:     dp4 r2.z, c7, r1
  31:     mov oT4.xyz, r1
  32:     add r0.xyz, r0, r2
  33:     max r0.xyz, r0, c23.y
  34:     mov r0.w, c23.z
  35:     lit r1, r0.xxww
  36:     mov r1.x, r1.z
  37:     lit r2, r0.yyww
  38:     lit r0, r0.zzww
  39:     mov r1.z, r0.z
  40:     mov r1.y, r2.z
  41:     mad r0.xyz, r1, c24.x, c24.y
  42:     max oT5.xyz, r0, c23.y
  43:     mul r0, v0.y, c13
  44:     mad r0, c12, v0.x, r0
  45:     mad r0, c14, v0.z, r0
  46:     add r0, r0, c15
  47:     mad oPos.xy, r0.w, c0, r0
  48:     mov oPos.zw, r0
  49:     mov oT2, c23.y
  50:     mov oT3, c23.y
  51:     mov oT4.w, c23.y
  52:     mov oT5.w, c23.y

// approximately 53 instruction slots used
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r0.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r0.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.w, l(0)
  19: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  20: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  21: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  22: dp3 r0.w, r0.xyzx, r0.xyzx
  23: rsq r0.w, r0.w
  24: mul r0.xyz, r0.wwww, r0.xyzx
  25: mov o5.xyz, r0.xyzx
  26: mul r1.x, r0.y, r0.y
  27: mad r1.x, r0.x, r0.x, -r1.x
  28: mul r2.xyzw, r0.yzzx, r0.xyzz
  29: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  30: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  31: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  32: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  33: mov r0.w, l(1.000000)
  34: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  35: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  36: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  37: add r0.xyz, r1.xyzx, r2.xyzx
  38: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  39: log r0.xyz, r0.xyzx
  40: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  41: exp r0.xyz, r0.xyzx
  42: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  43: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: mov o6.w, l(0)
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN _EMISSION 
-- Vertex shader for "d3d9":
// Stats: 60 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 20
Vector4 _MainTex_ST at 19
Vector4 _ProjectionParams at 11
Float _UVSec at 21
Vector4 _WorldSpaceCameraPos at 10
Vector4 unity_SHAb at 14
Vector4 unity_SHAg at 13
Vector4 unity_SHAr at 12
Vector4 unity_SHBb at 17
Vector4 unity_SHBg at 16
Vector4 unity_SHBr at 15
Vector4 unity_SHC at 18

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       3
//   unity_WorldToObject  c7       3
//   _WorldSpaceCameraPos c10      1
//   _ProjectionParams    c11      1
//   unity_SHAr           c12      1
//   unity_SHAg           c13      1
//   unity_SHAb           c14      1
//   unity_SHBr           c15      1
//   unity_SHBg           c16      1
//   unity_SHBb           c17      1
//   unity_SHC            c18      1
//   _MainTex_ST          c19      1
//   _DetailAlbedoMap_ST  c20      1
//   _UVSec               c21      1
//

    vs_2_0
    def c22, 1, 0, 0.5, 0.416666657
    def c23, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad oT0.xy, v2, c19, c19.zwzw
    mul r0.x, c21.x, c21.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c20.xyxy, c20
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r0.xyz, r0, -c10
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r0
    mad r0, v0.xyzx, c22.xxxy, c22.yyyx
    dp4 r1.y, c1, r0
    mul r2.x, r1.y, c11.x
    mul r2.w, r2.x, c22.z
    dp4 r1.x, c0, r0
    dp4 r1.w, c3, r0
    dp4 r1.z, c2, r0
    mul r2.xz, r1.xyww, c22.z
    mov r4, r1
    mov oT6.zw, r1
    add oT6.xy, r2.z, r2.xwzw
    mul r0.xyz, v1.y, c8
    mad r0.xyz, v1.x, c7, r0
    mad r0.xyz, v1.z, c9, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c15, r2
    dp4 r3.y, c16, r2
    dp4 r3.z, c17, r2
    mad r0.xyz, c18, r0.x, r3
    mov r1.w, c22.x
    dp4 r2.x, c12, r1
    dp4 r2.y, c13, r1
    dp4 r2.z, c14, r1
    mov oT4.xyz, r1
    add r0.xyz, r0, r2
    max r0.xyz, r0, c22.y
    mov r0.w, c22.w
    lit r1, r0.xxww
    mov r1.x, r1.z
    lit r2, r0.yyww
    lit r0, r0.zzww
    mov r1.z, r0.z
    mov r1.y, r2.z
    mad r0.xyz, r1, c23.x, c23.y
    max oT5.xyz, r0, c22.y
    mov oT2, c22.y
    mov oT3, c22.y
    mov oT4.w, c22.y
    mov oT5.w, c22.y
    mad oPos.xy, r4.w, c255, r4
    mov oPos.zw, r4

// approximately 59 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 41 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[9].w, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
   8: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r1.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mov o5.w, l(0)
  20: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  21: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  22: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  23: dp3 r1.w, r1.xyzx, r1.xyzx
  24: rsq r1.w, r1.w
  25: mul r1.xyz, r1.wwww, r1.xyzx
  26: mov o5.xyz, r1.xyzx
  27: mul r2.x, r1.y, r1.y
  28: mad r2.x, r1.x, r1.x, -r2.x
  29: mul r3.xyzw, r1.yzzx, r1.xyzz
  30: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  31: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  32: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  33: mad r2.xyz, cb2[44].xyzx, r2.xxxx, r4.xyzx
  34: mov r1.w, l(1.000000)
  35: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  36: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  37: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  38: add r1.xyz, r2.xyzx, r3.xyzx
  39: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  40: log r1.xyz, r1.xyzx
  41: mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  42: exp r1.xyz, r1.xyzx
  43: mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  44: max o6.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mov o6.w, l(0)
  46: mul r0.y, r0.y, cb1[5].x
  47: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  48: mov o7.zw, r0.zzzw
  49: add o7.xy, r1.zzzz, r1.xwxx
  50: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL _EMISSION VERTEXLIGHT_ON 
-- Vertex shader for "d3d9":
// Stats: 82 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 4
Matrix4x3 unity_ObjectToWorld at 8
Matrix4x3 unity_WorldToObject at 11
Vector4 _DetailAlbedoMap_ST at 27
Vector4 _MainTex_ST at 26
Float _UVSec at 28
Vector4 _WorldSpaceCameraPos at 14
Vector4 unity_4LightAtten0 at 18
Vector4 unity_4LightPosX0 at 15
Vector4 unity_4LightPosY0 at 16
Vector4 unity_4LightPosZ0 at 17
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHAb at 21
Vector4 unity_SHAg at 20
Vector4 unity_SHAr at 19
Vector4 unity_SHBb at 24
Vector4 unity_SHBg at 23
Vector4 unity_SHBr at 22
Vector4 unity_SHC at 25

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   glstate_matrix_mvp   c4       4
//   unity_ObjectToWorld  c8       3
//   unity_WorldToObject  c11      3
//   _WorldSpaceCameraPos c14      1
//   unity_4LightPosX0    c15      1
//   unity_4LightPosY0    c16      1
//   unity_4LightPosZ0    c17      1
//   unity_4LightAtten0   c18      1
//   unity_SHAr           c19      1
//   unity_SHAg           c20      1
//   unity_SHAb           c21      1
//   unity_SHBr           c22      1
//   unity_SHBg           c23      1
//   unity_SHBb           c24      1
//   unity_SHC            c25      1
//   _MainTex_ST          c26      1
//   _DetailAlbedoMap_ST  c27      1
//   _UVSec               c28      1
//

    vs_2_0
    def c29, 1, 0, 9.99999997e-007, 0.416666657
    def c30, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c29.xxxy, c29.yyyx
    dp4 r7.x, c4, r0
    dp4 r7.y, c5, r0
    dp4 r7.z, c6, r0
    dp4 r7.w, c7, r0
    mad oT0.xy, v2, c26, c26.zwzw
    mul r0.x, c28.x, c28.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c27.xyxy, c27
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add r1.xyz, r0, -c14
    add r2, -r0.x, c15
    add r3, -r0.y, c16
    add r0, -r0.z, c17
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1, r3, r3
    mad r1, r2, r2, r1
    mad r1, r0, r0, r1
    max r1, r1, c29.z
    rsq r4.x, r1.x
    rsq r4.y, r1.y
    rsq r4.z, r1.z
    rsq r4.w, r1.w
    mov r5.x, c29.x
    mad r1, r1, c18, r5.x
    mul r5.xyz, v1.y, c12
    mad r5.xyz, v1.x, c11, r5
    mad r5.xyz, v1.z, c13, r5
    nrm r6.xyz, r5
    mul r3, r3, r6.y
    mad r2, r2, r6.x, r3
    mad r0, r0, r6.z, r2
    mul r0, r4, r0
    max r0, r0, c29.y
    rcp r2.x, r1.x
    rcp r2.y, r1.y
    rcp r2.z, r1.z
    rcp r2.w, r1.w
    mul r0, r0, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mul r0.w, r6.y, r6.y
    mad r0.w, r6.x, r6.x, -r0.w
    mul r1, r6.yzzx, r6.xyzz
    dp4 r2.x, c22, r1
    dp4 r2.y, c23, r1
    dp4 r2.z, c24, r1
    mad r1.xyz, c25, r0.w, r2
    mov r6.w, c29.x
    dp4 r2.x, c19, r6
    dp4 r2.y, c20, r6
    dp4 r2.z, c21, r6
    mov oT4.xyz, r6
    add r1.xyz, r1, r2
    max r1.xyz, r1, c29.y
    mov r1.w, c29.w
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c30.x, c30.y
    max r1.xyz, r1, c29.y
    add oT5.xyz, r0, r1
    mov oT2, c29.y
    mov oT3, c29.y
    mov oT4.w, c29.y
    mov oT5.w, c29.y
    mad oPos.xy, r7.w, c255, r7
    mov oPos.zw, r7

// approximately 81 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 59 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.w, l(0)
  19: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  20: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  21: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  22: dp3 r0.w, r1.xyzx, r1.xyzx
  23: rsq r0.w, r0.w
  24: mul r1.xyz, r0.wwww, r1.xyzx
  25: mov o5.xyz, r1.xyzx
  26: mul r0.w, r1.y, r1.y
  27: mad r0.w, r1.x, r1.x, -r0.w
  28: mul r2.xyzw, r1.yzzx, r1.xyzz
  29: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  30: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  31: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  32: mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  33: mov r1.w, l(1.000000)
  34: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  35: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  36: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  37: add r2.xyz, r2.xyzx, r3.xyzx
  38: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  39: log r2.xyz, r2.xyzx
  40: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  41: exp r2.xyz, r2.xyzx
  42: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  45: mul r4.xyzw, r1.yyyy, r3.xyzw
  46: mul r3.xyzw, r3.xyzw, r3.xyzw
  47: add r5.xyzw, -r0.xxxx, cb2[2].xyzw
  48: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  49: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  50: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  51: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  52: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  53: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  54: rsq r3.xyzw, r0.xyzw
  55: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  56: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  57: mul r1.xyzw, r1.xyzw, r3.xyzw
  58: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  59: mul r0.xyzw, r0.xyzw, r1.xyzw
  60: mul r1.xyz, r0.yyyy, cb2[7].xyzx
  61: mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
  62: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
  63: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  64: add o6.xyz, r2.xyzx, r0.xyzx
  65: mov o6.w, l(0)
  66: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11_9x":
// Stats: 59 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         2  ( FLT, FLT, FLT, FLT)
// c3         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             2         8  ( FLT, FLT, FLT, FLT)
// c13        cb2            38         7  ( FLT, FLT, FLT, FLT)
// c20        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c24        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c31, 9.99999997e-007, 0, 1, 0.416666657
          def c32, 1.05499995, -0.0549999997, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.w, c3.w
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c25
   7:     mad r0.xyz, c24, v0.x, r0
   8:     mad r0.xyz, c26, v0.z, r0
   9:     mad r0.xyz, c27, v0.w, r0
  10:     add r1.xyz, r0, -c4
  11:     dp3 r0.w, r1, r1
  12:     rsq r0.w, r0.w
  13:     mul oT1.xyz, r0.w, r1
  14:     add r1, -r0.y, c6
  15:     mul r2, r1, r1
  16:     add r3, -r0.x, c5
  17:     add r0, -r0.z, c7
  18:     mad r2, r3, r3, r2
  19:     mad r2, r0, r0, r2
  20:     max r2, r2, c31.x
  21:     rsq r4.x, r2.x
  22:     rsq r4.y, r2.y
  23:     rsq r4.z, r2.z
  24:     rsq r4.w, r2.w
  25:     mov r5.z, c31.z
  26:     mad r2, r2, c8, r5.z
  27:     dp3 r5.x, v1, c28
  28:     dp3 r5.y, v1, c29
  29:     dp3 r5.z, v1, c30
  30:     nrm r6.xyz, r5
  33:     mul r1, r1, r6.y
  34:     mad r1, r3, r6.x, r1
  35:     mad r0, r0, r6.z, r1
  36:     mul r0, r4, r0
  37:     max r0, r0, c31.y
  38:     rcp r1.x, r2.x
  39:     rcp r1.y, r2.y
  40:     rcp r1.z, r2.z
  41:     rcp r1.w, r2.w
  42:     mul r0, r0, r1
  43:     mul r1.xyz, r0.y, c10
  44:     mad r1.xyz, c9, r0.x, r1
  45:     mad r0.xyz, c11, r0.z, r1
  46:     mad r0.xyz, c12, r0.w, r0
  47:     mul r0.w, r6.y, r6.y
  48:     mad r0.w, r6.x, r6.x, -r0.w
  49:     mul r1, r6.yzzx, r6.xyzz
  50:     dp4 r2.x, c16, r1
  51:     dp4 r2.y, c17, r1
  52:     dp4 r2.z, c18, r1
  53:     mad r1.xyz, c19, r0.w, r2
  54:     mov r6.w, c31.z
  55:     dp4 r2.x, c13, r6
  56:     dp4 r2.y, c14, r6
  57:     dp4 r2.z, c15, r6
  58:     mov oT4.xyz, r6
  59:     add r1.xyz, r1, r2
  60:     max r1.xyz, r1, c31.y
  61:     mov r1.w, c31.w
  62:     lit r2, r1.xxww
  63:     mov r2.x, r2.z
  64:     lit r3, r1.yyww
  65:     lit r1, r1.zzww
  66:     mov r2.z, r1.z
  67:     mov r2.y, r3.z
  68:     mad r1.xyz, r2, c32.x, c32.y
  69:     max r1.xyz, r1, c31.y
  70:     add oT5.xyz, r0, r1
  71:     mul r0, v0.y, c21
  72:     mad r0, c20, v0.x, r0
  73:     mad r0, c22, v0.z, r0
  74:     add r0, r0, c23
  75:     mad oPos.xy, r0.w, c0, r0
  76:     mov oPos.zw, r0
  77:     mov oT2, c31.y
  78:     mov oT3, c31.y
  79:     mov oT4.w, c31.y
  80:     mov oT5.w, c31.y

// approximately 81 instruction slots used
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mov o3.xyzw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.w, l(0)
  19: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  20: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  21: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  22: dp3 r0.w, r1.xyzx, r1.xyzx
  23: rsq r0.w, r0.w
  24: mul r1.xyz, r0.wwww, r1.xyzx
  25: mov o5.xyz, r1.xyzx
  26: mul r0.w, r1.y, r1.y
  27: mad r0.w, r1.x, r1.x, -r0.w
  28: mul r2.xyzw, r1.yzzx, r1.xyzz
  29: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  30: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  31: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  32: mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  33: mov r1.w, l(1.000000)
  34: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  35: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  36: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  37: add r2.xyz, r2.xyzx, r3.xyzx
  38: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  39: log r2.xyz, r2.xyzx
  40: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  41: exp r2.xyz, r2.xyzx
  42: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  45: mul r4.xyzw, r1.yyyy, r3.xyzw
  46: mul r3.xyzw, r3.xyzw, r3.xyzw
  47: add r5.xyzw, -r0.xxxx, cb2[2].xyzw
  48: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  49: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  50: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  51: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  52: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  53: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  54: rsq r3.xyzw, r0.xyzw
  55: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  56: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  57: mul r1.xyzw, r1.xyzw, r3.xyzw
  58: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  59: mul r0.xyzw, r0.xyzw, r1.xyzw
  60: mul r1.xyz, r0.yyyy, cb2[7].xyzx
  61: mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
  62: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
  63: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  64: add o6.xyz, r2.xyzx, r0.xyzx
  65: mov o6.w, l(0)
  66: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN _EMISSION VERTEXLIGHT_ON 
-- Vertex shader for "d3d9":
// Stats: 88 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 4
Matrix4x3 unity_ObjectToWorld at 8
Matrix4x3 unity_WorldToObject at 11
Vector4 _DetailAlbedoMap_ST at 28
Vector4 _MainTex_ST at 27
Vector4 _ProjectionParams at 15
Float _UVSec at 29
Vector4 _WorldSpaceCameraPos at 14
Vector4 unity_4LightAtten0 at 19
Vector4 unity_4LightPosX0 at 16
Vector4 unity_4LightPosY0 at 17
Vector4 unity_4LightPosZ0 at 18
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHAb at 22
Vector4 unity_SHAg at 21
Vector4 unity_SHAr at 20
Vector4 unity_SHBb at 25
Vector4 unity_SHBg at 24
Vector4 unity_SHBr at 23
Vector4 unity_SHC at 26

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   glstate_matrix_mvp   c4       4
//   unity_ObjectToWorld  c8       3
//   unity_WorldToObject  c11      3
//   _WorldSpaceCameraPos c14      1
//   _ProjectionParams    c15      1
//   unity_4LightPosX0    c16      1
//   unity_4LightPosY0    c17      1
//   unity_4LightPosZ0    c18      1
//   unity_4LightAtten0   c19      1
//   unity_SHAr           c20      1
//   unity_SHAg           c21      1
//   unity_SHAb           c22      1
//   unity_SHBr           c23      1
//   unity_SHBg           c24      1
//   unity_SHBb           c25      1
//   unity_SHC            c26      1
//   _MainTex_ST          c27      1
//   _DetailAlbedoMap_ST  c28      1
//   _UVSec               c29      1
//

    vs_2_0
    def c30, 1, 0, 0.5, 9.99999997e-007
    def c31, 0.416666657, 1.05499995, -0.0549999997, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad oT0.xy, v2, c27, c27.zwzw
    mul r0.x, c29.x, c29.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c28.xyxy, c28
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add r1.xyz, r0, -c14
    add r2, -r0.x, c16
    add r3, -r0.y, c17
    add r0, -r0.z, c18
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mad r1, v0.xyzx, c30.xxxy, c30.yyyx
    dp4 r4.y, c5, r1
    mul r5.x, r4.y, c15.x
    mul r5.w, r5.x, c30.z
    dp4 r4.x, c4, r1
    dp4 r4.w, c7, r1
    dp4 r4.z, c6, r1
    mul r5.xz, r4.xyww, c30.z
    mov r7, r4
    mov oT6.zw, r4
    add oT6.xy, r5.z, r5.xwzw
    mul r1, r3, r3
    mad r1, r2, r2, r1
    mad r1, r0, r0, r1
    max r1, r1, c30.w
    rsq r4.x, r1.x
    rsq r4.y, r1.y
    rsq r4.z, r1.z
    rsq r4.w, r1.w
    mov r5.x, c30.x
    mad r1, r1, c19, r5.x
    mul r5.xyz, v1.y, c12
    mad r5.xyz, v1.x, c11, r5
    mad r5.xyz, v1.z, c13, r5
    nrm r6.xyz, r5
    mul r3, r3, r6.y
    mad r2, r2, r6.x, r3
    mad r0, r0, r6.z, r2
    mul r0, r4, r0
    max r0, r0, c30.y
    rcp r2.x, r1.x
    rcp r2.y, r1.y
    rcp r2.z, r1.z
    rcp r2.w, r1.w
    mul r0, r0, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mul r0.w, r6.y, r6.y
    mad r0.w, r6.x, r6.x, -r0.w
    mul r1, r6.yzzx, r6.xyzz
    dp4 r2.x, c23, r1
    dp4 r2.y, c24, r1
    dp4 r2.z, c25, r1
    mad r1.xyz, c26, r0.w, r2
    mov r6.w, c30.x
    dp4 r2.x, c20, r6
    dp4 r2.y, c21, r6
    dp4 r2.z, c22, r6
    mov oT4.xyz, r6
    add r1.xyz, r1, r2
    max r1.xyz, r1, c30.y
    mov r1.w, c31.x
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c31.y, c31.z
    max r1.xyz, r1, c30.y
    add oT5.xyz, r0, r1
    mov oT2, c30.y
    mov oT3, c30.y
    mov oT4.w, c30.y
    mov oT5.w, c30.y
    mad oPos.xy, r7.w, c255, r7
    mov oPos.zw, r7

// approximately 87 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 62 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 7
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[9].w, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
   8: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: dp3 r1.w, r2.xyzx, r2.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r2.xyzx
  17: mov o3.xyzw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mov o5.w, l(0)
  20: dp3 r2.x, v1.xyzx, cb3[16].xyzx
  21: dp3 r2.y, v1.xyzx, cb3[17].xyzx
  22: dp3 r2.z, v1.xyzx, cb3[18].xyzx
  23: dp3 r1.w, r2.xyzx, r2.xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, r2.xyzx
  26: mov o5.xyz, r2.xyzx
  27: mul r1.w, r2.y, r2.y
  28: mad r1.w, r2.x, r2.x, -r1.w
  29: mul r3.xyzw, r2.yzzx, r2.xyzz
  30: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  31: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  32: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  33: mad r3.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  34: mov r2.w, l(1.000000)
  35: dp4 r4.x, cb2[38].xyzw, r2.xyzw
  36: dp4 r4.y, cb2[39].xyzw, r2.xyzw
  37: dp4 r4.z, cb2[40].xyzw, r2.xyzw
  38: add r3.xyz, r3.xyzx, r4.xyzx
  39: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  40: log r3.xyz, r3.xyzx
  41: mul r3.xyz, r3.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  42: exp r3.xyz, r3.xyzx
  43: mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  44: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  46: mul r5.xyzw, r2.yyyy, r4.xyzw
  47: mul r4.xyzw, r4.xyzw, r4.xyzw
  48: add r6.xyzw, -r1.xxxx, cb2[2].xyzw
  49: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  50: mad r5.xyzw, r6.xyzw, r2.xxxx, r5.xyzw
  51: mad r2.xyzw, r1.xyzw, r2.zzzz, r5.xyzw
  52: mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw
  53: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  54: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  55: rsq r4.xyzw, r1.xyzw
  56: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  57: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  58: mul r2.xyzw, r2.xyzw, r4.xyzw
  59: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  60: mul r1.xyzw, r1.xyzw, r2.xyzw
  61: mul r2.xyz, r1.yyyy, cb2[7].xyzx
  62: mad r2.xyz, cb2[6].xyzx, r1.xxxx, r2.xyzx
  63: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r2.xyzx
  64: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  65: add o6.xyz, r3.xyzx, r1.xyzx
  66: mov o6.w, l(0)
  67: mul r0.y, r0.y, cb1[5].x
  68: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  69: mov o7.zw, r0.zzzw
  70: add o7.xy, r1.zzzz, r1.xwxx
  71: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

 }


 // Stats for Vertex shader:
 //         d3d9: 38 avg math (32..44)
 //        d3d11: 31 avg math (22..37)
 //     d3d11_9x: 30 avg math (22..33)
 // Stats for Fragment shader:
 //         d3d9: 31 avg math (26..38), 3 avg texture (2..5)
 //        d3d11: 24 avg math (20..32), 3 avg texture (2..5)
 //     d3d11_9x: 22 avg math (20..28), 3 avg texture (2..4)
 Pass {
  Name "FORWARD_DELTA"
  Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite Off
  Blend [_SrcBlend] One
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: POINT 
-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToLight at 11
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 14
Vector4 _WorldSpaceLightPos0 at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       4
//   unity_WorldToObject  c8       3
//   unity_WorldToLight   c11      3
//   _WorldSpaceCameraPos c14      1
//   _WorldSpaceLightPos0 c15      1
//   _MainTex_ST          c16      1
//   _DetailAlbedoMap_ST  c17      1
//   _UVSec               c18      1
//

    vs_2_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad oT0.xy, v2, c16, c16.zwzw
    mul r0.x, c18.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c14
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    dp4 oT5.z, c13, r0
    mad r0.xyz, r0, -c15.w, c15
    nrm r1.xyz, r0
    mov r1.w, c19.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 38 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 29 math, 3 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   _LightColor0       c0       1
//   _Color             c1       1
//   _Metallic          c2       1
//   _Glossiness        c3       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//

    ps_2_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2, c4
    add_pp r1.y, r2.w, -c3.x
    dp3 r2.w, t5, t5
    mov r3.xy, r2.w
    texld r1, r1, s0
    texld r4, t0, s1
    texld_pp r3, r3, s2
    mul_pp r2.w, r1.x, c5.x
    mad_pp r0.yzw, c1.wzyx, r4.wzyx, r2.x
    mul_pp r1.xyz, r4, c1
    mad_pp r0.yzw, c2.x, r0, r2.y
    mul_pp r0.yzw, r0, r2.w
    mad_pp r1.w, c2.x, -r2.z, r2.z
    mad_pp r0.yzw, r1.wzyx, r1.w, r0
    mul_pp r1.xyz, r3.x, c0
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c4.w
    mov_pp oC0, r0

// approximately 32 instruction slots used (3 texture, 29 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  25: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  26: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  31: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  32: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  33: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  34: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  35: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  36: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  37: mad o6.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  38: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 22 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "unity_NHxRoughness" to slot 2

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: dp3 r1.x, v6.xyzx, v6.xyzx
  24: sample r1.xyzw, r1.xxxx, t1.xyzw, s2
  25: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mul o0.xyz, r0.yzwy, r1.xyzx
  28: mov o0.w, l(1.000000)
  29: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         2  ( FLT, FLT, FLT, FLT)
// c3         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            11         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c10        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c14        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c21, 0, 0, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.w, c3.w
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c15
   7:     mad r0.xyz, c14, v0.x, r0
   8:     mad r0.xyz, c16, v0.z, r0
   9:     mad r0.xyz, c17, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     mad r0.xyz, r0, -c9.w, c9
  12:     nrm r2.xyz, r0
  15:     dp3 r0.x, r1, r1
  16:     rsq r0.x, r0.x
  17:     mul oT1.xyz, r0.x, r1
  18:     dp3 r0.x, v1, c18
  19:     dp3 r0.y, v1, c19
  20:     dp3 r0.z, v1, c20
  21:     dp3 r0.w, r0, r0
  22:     rsq r0.w, r0.w
  23:     mul oT4.xyz, r0.w, r0
  24:     mul r0, v0.y, c15
  25:     mad r0, c14, v0.x, r0
  26:     mad r0, c16, v0.z, r0
  27:     mad r0, c17, v0.w, r0
  28:     mul r1.xyz, r0.y, c5
  29:     mad r1.xyz, c4, r0.x, r1
  30:     mad r0.xyz, c6, r0.z, r1
  31:     mad oT5.xyz, c7, r0.w, r0
  32:     mul r0, v0.y, c11
  33:     mad r0, c10, v0.x, r0
  34:     mad r0, c12, v0.z, r0
  35:     add r0, r0, c13
  36:     mad oPos.xy, r0.w, c0, r0
  37:     mov oPos.zw, r0
  38:     mov r2.w, c21.x
  39:     mov oT2, r2.wwwx
  40:     mov oT3, r2.wwwy
  41:     mov oT4.w, r2.z

// approximately 42 instruction slots used
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  25: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  26: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  31: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  32: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  33: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  34: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  35: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  36: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  37: mad o6.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  38: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11_9x":
// Stats: 22 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "unity_NHxRoughness" to slot 2

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             4         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t2               
// s1             s1              t0               
// s2             s2              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c3, -0.220916301, 0.220916301, 0.779083729, 1
          def c4, 16, 0, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl t5.xyz
          dcl_2d s0
          dcl_2d s1
          dcl_2d s2
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r2, c3
  14:     add_pp r1.y, r2.w, -c2.w
  15:     dp3 r2.w, t5, t5
  16:     mov r3.xy, r2.w
  17:     texld r1, r1, s0
  17:     texld r4, t0, s1
  17:     texld_pp r3, r3, s2
  17:     mul_pp r2.w, r1.x, c4.x
  18:     mad_pp r0.yzw, c1.wzyx, r4.wzyx, r2.x
  19:     mul_pp r1.xyz, r4, c1
  20:     mad_pp r0.yzw, c2.z, r0, r2.y
  21:     mul_pp r0.yzw, r0, r2.w
  22:     mad_pp r1.w, c2.z, -r2.z, r2.z
  23:     mad_pp r0.yzw, r1.wzyx, r1.w, r0
  24:     mul_pp r1.xyz, r3.x, c0
  25:     mul_pp r1.xyz, r0.x, r1
  26:     mul_pp r0.xyz, r0.wzyx, r1
  27:     mov_pp r0.w, c3.w
  28:     mov_pp oC0, r0

// approximately 32 instruction slots used (3 texture, 29 arithmetic)
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: dp3 r1.x, v6.xyzx, v6.xyzx
  24: sample r1.xyzw, r1.xxxx, t1.xyzw, s2
  25: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mul o0.xyz, r0.yzwy, r1.xyzx
  28: mov o0.w, l(1.000000)
  29: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 32 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 13
Vector4 _MainTex_ST at 12
Float _UVSec at 14
Vector4 _WorldSpaceCameraPos at 10
Vector4 _WorldSpaceLightPos0 at 11

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       3
//   unity_WorldToObject  c7       3
//   _WorldSpaceCameraPos c10      1
//   _WorldSpaceLightPos0 c11      1
//   _MainTex_ST          c12      1
//   _DetailAlbedoMap_ST  c13      1
//   _UVSec               c14      1
//

    vs_2_0
    def c15, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c15.xxxy, c15.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad oT0.xy, v2, c12, c12.zwzw
    mul r0.x, c14.x, c14.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c13.xyxy, c13
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c10
    mad r0.xyz, r0, -c11.w, c11
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c8
    mad r1.xyz, v1.x, c7, r1
    mad r1.xyz, v1.z, c9, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT4.xyz, r1.w, r1
    mov r0.w, c15.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 31 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 26 math, 2 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   _LightColor0       c0       1
//   _Color             c1       1
//   _Metallic          c2       1
//   _Glossiness        c3       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//

    ps_2_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl_2d s0
    dcl_2d s1
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.xyz, r0.x, c0
    mul_pp r0.w, r0.w, r0.w
    mul_pp r1.x, r0.w, r0.w
    mov r2, c4
    add_pp r1.y, r2.w, -c3.x
    texld r1, r1, s0
    texld r3, t0, s1
    mul_pp r0.w, r1.x, c5.x
    mad_pp r1.xyz, c1, r3, r2.x
    mul_pp r3.xyz, r3, c1
    mad_pp r1.xyz, c2.x, r1, r2.y
    mul_pp r1.xyz, r0.w, r1
    mad_pp r0.w, c2.x, -r2.z, r2.z
    mad_pp r1.xyz, r3, r0.w, r1
    mul_pp r0.xyz, r0, r1
    mov_pp r0.w, c4.w
    mov_pp oC0, r0

// approximately 28 instruction slots used (2 texture, 26 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 22 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 20 math, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "unity_NHxRoughness" to slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  12: mul r0.w, r0.w, r0.w
  13: mul r1.x, r0.w, r0.w
  14: add r1.y, -cb0[8].w, l(1.000000)
  15: sample r1.xyzw, r1.xyxx, t1.xyzw, s0
  16: mul r0.w, r1.x, l(16.000000)
  17: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  18: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  19: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  20: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  21: mul r2.xyz, r0.wwww, r2.xyzx
  22: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  23: mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
  24: mul o0.xyz, r0.xyzx, r1.xyzx
  25: mov o0.w, l(1.000000)
  26: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Stats: 22 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         2  ( FLT, FLT, FLT, FLT)
// c3         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c4         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c5         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c6         cb3             0         4  ( FLT, FLT, FLT, FLT)
// c10        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c17, 0, 0, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.w, c3.w
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c11
   7:     mad r0.xyz, c10, v0.x, r0
   8:     mad r0.xyz, c12, v0.z, r0
   9:     mad r0.xyz, c13, v0.w, r0
  10:     add r1.xyz, r0, -c4
  11:     mad r0.xyz, r0, -c5.w, c5
  12:     dp3 r1.w, r1, r1
  13:     rsq r1.w, r1.w
  14:     mul oT1.xyz, r1.w, r1
  15:     dp3 r1.x, v1, c14
  16:     dp3 r1.y, v1, c15
  17:     dp3 r1.z, v1, c16
  18:     dp3 r1.w, r1, r1
  19:     rsq r1.w, r1.w
  20:     mul oT4.xyz, r1.w, r1
  21:     mul r1, v0.y, c7
  22:     mad r1, c6, v0.x, r1
  23:     mad r1, c8, v0.z, r1
  24:     add r1, r1, c9
  25:     mad oPos.xy, r1.w, c0, r1
  26:     mov oPos.zw, r1
  27:     mov r0.w, c17.x
  28:     mov oT2, r0.wwwx
  29:     mov oT3, r0.wwwy
  30:     mov oT4.w, r0.z

// approximately 31 instruction slots used
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11_9x":
// Stats: 20 math, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "unity_NHxRoughness" to slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             4         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t1               
// s1             s1              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c3, -0.220916301, 0.220916301, 0.779083729, 1
          def c4, 16, 0, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl_2d s0
          dcl_2d s1
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.xyz, r0.x, c0
  12:     mul_pp r0.w, r0.w, r0.w
  13:     mul_pp r1.x, r0.w, r0.w
  14:     mov r2, c3
  15:     add_pp r1.y, r2.w, -c2.w
  16:     texld r1, r1, s0
  16:     texld r3, t0, s1
  16:     mul_pp r0.w, r1.x, c4.x
  17:     mad_pp r1.xyz, c1, r3, r2.x
  18:     mul_pp r3.xyz, r3, c1
  19:     mad_pp r1.xyz, c2.z, r1, r2.y
  20:     mul_pp r1.xyz, r0.w, r1
  21:     mad_pp r0.w, c2.z, -r2.z, r2.z
  22:     mad_pp r1.xyz, r3, r0.w, r1
  23:     mul_pp r0.xyz, r0, r1
  24:     mov_pp r0.w, c3.w
  25:     mov_pp oC0, r0

// approximately 28 instruction slots used (2 texture, 26 arithmetic)
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  12: mul r0.w, r0.w, r0.w
  13: mul r1.x, r0.w, r0.w
  14: add r1.y, -cb0[8].w, l(1.000000)
  15: sample r1.xyzw, r1.xyxx, t1.xyzw, s0
  16: mul r0.w, r1.x, l(16.000000)
  17: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  18: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  19: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  20: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  21: mul r2.xyz, r0.wwww, r2.xyzx
  22: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  23: mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
  24: mul o0.xyz, r0.xyzx, r1.xyzx
  25: mov o0.w, l(1.000000)
  26: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 40 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x4 unity_WorldToLight at 8
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 18
Vector4 _MainTex_ST at 17
Float _UVSec at 19
Vector4 _WorldSpaceCameraPos at 15
Vector4 _WorldSpaceLightPos0 at 16

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       4
//   unity_WorldToLight   c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   _WorldSpaceLightPos0 c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_2_0
    def c20, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad oT0.xy, v2, c17, c17.zwzw
    mul r0.x, c19.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c15
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c13
    mad r1.xyz, v1.x, c12, r1
    mad r1.xyz, v1.z, c14, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c8, r0
    dp4 oT5.y, c9, r0
    dp4 oT5.z, c10, r0
    dp4 oT5.w, c11, r0
    mad r0.xyz, r0, -c16.w, c16
    nrm r1.xyz, r0
    mov r1.w, c20.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 39 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 34 math, 4 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   _LightColor0       c0       1
//   _Color             c1       1
//   _Metallic          c2       1
//   _Glossiness        c3       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//   _LightTextureB0    s3       1
//

    ps_2_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 0.5
    def c5, 1, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2.x, c5.x
    add_pp r1.y, r2.x, -c3.x
    rcp r0.y, t5.w
    mad r2.xy, t5, r0.y, c4.w
    dp3 r3.w, t5, t5
    mov r3.xy, r3.w
    texld r1, r1, s0
    texld r4, t0, s1
    texld_pp r2, r2, s2
    texld_pp r3, r3, s3
    mul_pp r4.w, r1.x, c5.y
    mov r1.xyz, c4
    mad_pp r0.yzw, c1.wzyx, r4.wzyx, r1.x
    mul_pp r2.xyz, r4, c1
    mad_pp r0.yzw, c2.x, r0, r1.y
    mul_pp r0.yzw, r0, r4.w
    mad_pp r1.x, c2.x, -r1.z, r1.z
    mad_pp r0.yzw, r2.wzyx, r1.x, r0
    mul r1.x, r2.w, r3.x
    mul_pp r1.xyz, r1.x, c0
    mul_pp r1.xyz, r0.x, r1
    cmp_pp r1.xyz, -t5.z, c5.z, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c5.x
    mov_pp oC0, r0

// approximately 38 instruction slots used (4 texture, 34 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  25: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  26: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  31: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  32: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  33: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  34: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  35: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  36: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  37: mad o6.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  38: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 28 math, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2
Set 2D Texture "unity_NHxRoughness" to slot 3

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: div r1.xy, v6.xyxx, v6.wwww
  24: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  25: sample r1.xyzw, r1.xyxx, t1.xyzw, s2
  26: lt r1.x, l(0.000000), v6.z
  27: and r1.x, r1.x, l(0x3f800000)
  28: mul r1.x, r1.w, r1.x
  29: dp3 r1.y, v6.xyzx, v6.xyzx
  30: sample r2.xyzw, r1.yyyy, t2.xyzw, s3
  31: mul r1.x, r1.x, r2.x
  32: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  33: mul r1.xyz, r0.xxxx, r1.xyzx
  34: mul o0.xyz, r0.yzwy, r1.xyzx
  35: mov o0.w, l(1.000000)
  36: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         2  ( FLT, FLT, FLT, FLT)
// c3         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            11         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c10        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c14        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c21, 0, 0, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.w, c3.w
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c15
   7:     mad r0.xyz, c14, v0.x, r0
   8:     mad r0.xyz, c16, v0.z, r0
   9:     mad r0.xyz, c17, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     mad r0.xyz, r0, -c9.w, c9
  12:     nrm r2.xyz, r0
  15:     dp3 r0.x, r1, r1
  16:     rsq r0.x, r0.x
  17:     mul oT1.xyz, r0.x, r1
  18:     dp3 r0.x, v1, c18
  19:     dp3 r0.y, v1, c19
  20:     dp3 r0.z, v1, c20
  21:     dp3 r0.w, r0, r0
  22:     rsq r0.w, r0.w
  23:     mul oT4.xyz, r0.w, r0
  24:     mul r0, v0.y, c15
  25:     mad r0, c14, v0.x, r0
  26:     mad r0, c16, v0.z, r0
  27:     mad r0, c17, v0.w, r0
  28:     mul r1, r0.y, c5
  29:     mad r1, c4, r0.x, r1
  30:     mad r1, c6, r0.z, r1
  31:     mad oT5, c7, r0.w, r1
  32:     mul r0, v0.y, c11
  33:     mad r0, c10, v0.x, r0
  34:     mad r0, c12, v0.z, r0
  35:     add r0, r0, c13
  36:     mad oPos.xy, r0.w, c0, r0
  37:     mov oPos.zw, r0
  38:     mov r2.w, c21.x
  39:     mov oT2, r2.wwwx
  40:     mov oT3, r2.wwwy
  41:     mov oT4.w, r2.z

// approximately 42 instruction slots used
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  25: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  26: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  31: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  32: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  33: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  34: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  35: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  36: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  37: mad o6.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  38: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11_9x":
// Stats: 28 math, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2
Set 2D Texture "unity_NHxRoughness" to slot 3

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             4         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t0               
// s2             s2              t1               
// s3             s3              t2               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c3, -0.220916301, 0.220916301, 0.779083729, 0.5
          def c4, 1, 16, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl t5
          dcl_2d s0
          dcl_2d s1
          dcl_2d s2
          dcl_2d s3
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r2.x, c4.x
  14:     add_pp r1.y, r2.x, -c2.w
  15:     rcp r0.y, t5.w
  16:     mad r2.xy, t5, r0.y, c3.w
  17:     dp3 r3.w, t5, t5
  18:     mov r3.xy, r3.w
  19:     texld r1, r1, s0
  19:     texld r4, t0, s1
  19:     texld_pp r2, r2, s2
  19:     texld_pp r3, r3, s3
  19:     mul_pp r4.w, r1.x, c4.y
  20:     mov r1.xyz, c3
  21:     mad_pp r0.yzw, c1.wzyx, r4.wzyx, r1.x
  22:     mul_pp r2.xyz, r4, c1
  23:     mad_pp r0.yzw, c2.z, r0, r1.y
  24:     mul_pp r0.yzw, r0, r4.w
  25:     mad_pp r1.x, c2.z, -r1.z, r1.z
  26:     mad_pp r0.yzw, r2.wzyx, r1.x, r0
  27:     mul r1.x, r2.w, r3.x
  28:     mul_pp r1.xyz, r1.x, c0
  29:     mul_pp r1.xyz, r0.x, r1
  30:     cmp_pp r1.xyz, -t5.z, c4.z, r1
  31:     mul_pp r0.xyz, r0.wzyx, r1
  32:     mov r0.w, c4.x
  33:     mov_pp oC0, r0

// approximately 38 instruction slots used (4 texture, 34 arithmetic)
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: div r1.xy, v6.xyxx, v6.wwww
  24: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  25: sample r1.xyzw, r1.xyxx, t1.xyzw, s2
  26: lt r1.x, l(0.000000), v6.z
  27: and r1.x, r1.x, l(0x3f800000)
  28: mul r1.x, r1.w, r1.x
  29: dp3 r1.y, v6.xyzx, v6.xyzx
  30: sample r2.xyzw, r1.yyyy, t2.xyzw, s3
  31: mul r1.x, r1.x, r2.x
  32: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  33: mul r1.xyz, r0.xxxx, r1.xyzx
  34: mul o0.xyz, r0.yzwy, r1.xyzx
  35: mov o0.w, l(1.000000)
  36: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE 
-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToLight at 11
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 14
Vector4 _WorldSpaceLightPos0 at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       4
//   unity_WorldToObject  c8       3
//   unity_WorldToLight   c11      3
//   _WorldSpaceCameraPos c14      1
//   _WorldSpaceLightPos0 c15      1
//   _MainTex_ST          c16      1
//   _DetailAlbedoMap_ST  c17      1
//   _UVSec               c18      1
//

    vs_2_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad oT0.xy, v2, c16, c16.zwzw
    mul r0.x, c18.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c14
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    dp4 oT5.z, c13, r0
    mad r0.xyz, r0, -c15.w, c15
    nrm r1.xyz, r0
    mov r1.w, c19.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 38 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 30 math, 4 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   _LightColor0       c0       1
//   _Color             c1       1
//   _Metallic          c2       1
//   _Glossiness        c3       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//   _LightTextureB0    s3       1
//

    ps_2_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2, c4
    add_pp r1.y, r2.w, -c3.x
    dp3 r2.w, t5, t5
    mov r3.xy, r2.w
    texld r1, r1, s0
    texld r4, t0, s1
    texld r3, r3, s3
    texld r5, t5, s2
    mul_pp r2.w, r1.x, c5.x
    mad_pp r0.yzw, c1.wzyx, r4.wzyx, r2.x
    mul_pp r1.xyz, r4, c1
    mad_pp r0.yzw, c2.x, r0, r2.y
    mul_pp r0.yzw, r0, r2.w
    mad_pp r1.w, c2.x, -r2.z, r2.z
    mad_pp r0.yzw, r1.wzyx, r1.w, r0
    mul_pp r1.x, r3.x, r5.w
    mul_pp r1.xyz, r1.x, c0
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c4.w
    mov_pp oC0, r0

// approximately 34 instruction slots used (4 texture, 30 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  25: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  26: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  31: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  32: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  33: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  34: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  35: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  36: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  37: mad o6.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  38: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 23 math, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTextureB0" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "unity_NHxRoughness" to slot 3

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: dp3 r1.x, v6.xyzx, v6.xyzx
  24: sample r1.xyzw, r1.xxxx, t1.xyzw, s3
  25: sample r2.xyzw, v6.xyzx, t2.xyzw, s2
  26: mul r1.x, r1.x, r2.w
  27: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  28: mul r1.xyz, r0.xxxx, r1.xyzx
  29: mul o0.xyz, r0.yzwy, r1.xyzx
  30: mov o0.w, l(1.000000)
  31: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         2  ( FLT, FLT, FLT, FLT)
// c3         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            11         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c10        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c14        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c21, 0, 0, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.w, c3.w
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c15
   7:     mad r0.xyz, c14, v0.x, r0
   8:     mad r0.xyz, c16, v0.z, r0
   9:     mad r0.xyz, c17, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     mad r0.xyz, r0, -c9.w, c9
  12:     nrm r2.xyz, r0
  15:     dp3 r0.x, r1, r1
  16:     rsq r0.x, r0.x
  17:     mul oT1.xyz, r0.x, r1
  18:     dp3 r0.x, v1, c18
  19:     dp3 r0.y, v1, c19
  20:     dp3 r0.z, v1, c20
  21:     dp3 r0.w, r0, r0
  22:     rsq r0.w, r0.w
  23:     mul oT4.xyz, r0.w, r0
  24:     mul r0, v0.y, c15
  25:     mad r0, c14, v0.x, r0
  26:     mad r0, c16, v0.z, r0
  27:     mad r0, c17, v0.w, r0
  28:     mul r1.xyz, r0.y, c5
  29:     mad r1.xyz, c4, r0.x, r1
  30:     mad r0.xyz, c6, r0.z, r1
  31:     mad oT5.xyz, c7, r0.w, r0
  32:     mul r0, v0.y, c11
  33:     mad r0, c10, v0.x, r0
  34:     mad r0, c12, v0.z, r0
  35:     add r0, r0, c13
  36:     mad oPos.xy, r0.w, c0, r0
  37:     mov oPos.zw, r0
  38:     mov r2.w, c21.x
  39:     mov oT2, r2.wwwx
  40:     mov oT3, r2.wwwy
  41:     mov oT4.w, r2.z

// approximately 42 instruction slots used
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  25: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  26: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  31: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  32: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  33: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  34: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  35: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  36: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  37: mad o6.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  38: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11_9x":
// Stats: 23 math, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTextureB0" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "unity_NHxRoughness" to slot 3

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             4         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t3               
// s1             s1              t0               
// s2             s2              t2               
// s3             s3              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c3, -0.220916301, 0.220916301, 0.779083729, 1
          def c4, 16, 0, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl t5.xyz
          dcl_2d s0
          dcl_2d s1
          dcl_cube s2
          dcl_2d s3
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r2, c3
  14:     add_pp r1.y, r2.w, -c2.w
  15:     dp3 r2.w, t5, t5
  16:     mov r3.xy, r2.w
  17:     texld r1, r1, s0
  17:     texld r4, t0, s1
  17:     texld r3, r3, s3
  17:     texld r5, t5, s2
  17:     mul_pp r2.w, r1.x, c4.x
  18:     mad_pp r0.yzw, c1.wzyx, r4.wzyx, r2.x
  19:     mul_pp r1.xyz, r4, c1
  20:     mad_pp r0.yzw, c2.z, r0, r2.y
  21:     mul_pp r0.yzw, r0, r2.w
  22:     mad_pp r1.w, c2.z, -r2.z, r2.z
  23:     mad_pp r0.yzw, r1.wzyx, r1.w, r0
  24:     mul_pp r1.x, r3.x, r5.w
  25:     mul_pp r1.xyz, r1.x, c0
  26:     mul_pp r1.xyz, r0.x, r1
  27:     mul_pp r0.xyz, r0.wzyx, r1
  28:     mov_pp r0.w, c3.w
  29:     mov_pp oC0, r0

// approximately 34 instruction slots used (4 texture, 30 arithmetic)
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: dp3 r1.x, v6.xyzx, v6.xyzx
  24: sample r1.xyzw, r1.xxxx, t1.xyzw, s3
  25: sample r2.xyzw, v6.xyzx, t2.xyzw, s2
  26: mul r1.x, r1.x, r2.w
  27: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  28: mul r1.xyz, r0.xxxx, r1.xyzx
  29: mul o0.xyz, r0.yzwy, r1.xyzx
  30: mov o0.w, l(1.000000)
  31: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x2 unity_WorldToLight at 11
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 16
Vector4 _MainTex_ST at 15
Float _UVSec at 17
Vector4 _WorldSpaceCameraPos at 13
Vector4 _WorldSpaceLightPos0 at 14

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       4
//   unity_WorldToObject  c8       3
//   unity_WorldToLight   c11      2
//   _WorldSpaceCameraPos c13      1
//   _WorldSpaceLightPos0 c14      1
//   _MainTex_ST          c15      1
//   _DetailAlbedoMap_ST  c16      1
//   _UVSec               c17      1
//

    vs_2_0
    def c18, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c18.xxxy, c18.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad oT0.xy, v2, c15, c15.zwzw
    mul r0.x, c17.x, c17.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c16.xyxy, c16
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c13
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    mad r0.xyz, r0, -c14.w, c14
    mov r0.w, c18.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 27 math, 3 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   _LightColor0       c0       1
//   _Color             c1       1
//   _Metallic          c2       1
//   _Glossiness        c3       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//

    ps_2_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2, c4
    add_pp r1.y, r2.w, -c3.x
    texld r1, r1, s0
    texld r3, t0, s1
    texld_pp r4, t5, s2
    mul_pp r2.w, r1.x, c5.x
    mad_pp r0.yzw, c1.wzyx, r3.wzyx, r2.x
    mul_pp r1.xyz, r3, c1
    mad_pp r0.yzw, c2.x, r0, r2.y
    mul_pp r0.yzw, r0, r2.w
    mad_pp r1.w, c2.x, -r2.z, r2.z
    mad_pp r0.yzw, r1.wzyx, r1.w, r0
    mul_pp r1.xyz, r4.w, c0
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c4.w
    mov_pp oC0, r0

// approximately 30 instruction slots used (3 texture, 27 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 30 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  28: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  29: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  30: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  31: mul r1.xy, r0.yyyy, cb0[12].xyxx
  32: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  33: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  34: mad o6.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 21 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "unity_NHxRoughness" to slot 2

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: sample r1.xyzw, v6.xyxx, t1.xyzw, s2
  24: mul r1.xyz, r1.wwww, cb0[2].xyzx
  25: mul r1.xyz, r0.xxxx, r1.xyzx
  26: mul o0.xyz, r0.yzwy, r1.xyzx
  27: mov o0.w, l(1.000000)
  28: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d11_9x":
// Stats: 30 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         2  ( FLT, FLT, FLT, FLT)
// c3         cb0             9         1  ( FLT, FLT, FLT, FLT)
// c4         cb0            11         4  ( FLT, FLT, FLT, FLT)
// c8         cb1             4         1  ( FLT, FLT, FLT, FLT)
// c9         cb2             0         1  ( FLT, FLT, FLT, FLT)
// c10        cb3             0         4  ( FLT, FLT, FLT, FLT)
// c14        cb3            12         7  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          def c21, 0, 0, 0, 0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
          dcl_texcoord3 v3
   0:     mad oT0.xy, v2, c1, c1.zwzw
   1:     mul r0.x, c3.w, c3.w
   2:     sge r0.x, -r0.x, r0.x
   3:     mov r1.xy, v2
   4:     lrp r2.xy, r0.x, r1, v3
   5:     mad oT0.zw, r2.xyxy, c2.xyxy, c2
   6:     mul r0.xyz, v0.y, c15
   7:     mad r0.xyz, c14, v0.x, r0
   8:     mad r0.xyz, c16, v0.z, r0
   9:     mad r0.xyz, c17, v0.w, r0
  10:     add r1.xyz, r0, -c8
  11:     mad r0.xyz, r0, -c9.w, c9
  12:     dp3 r1.w, r1, r1
  13:     rsq r1.w, r1.w
  14:     mul oT1.xyz, r1.w, r1
  15:     dp3 r1.x, v1, c18
  16:     dp3 r1.y, v1, c19
  17:     dp3 r1.z, v1, c20
  18:     dp3 r1.w, r1, r1
  19:     rsq r1.w, r1.w
  20:     mul oT4.xyz, r1.w, r1
  21:     mul r1, v0.y, c15
  22:     mad r1, c14, v0.x, r1
  23:     mad r1, c16, v0.z, r1
  24:     mad r1, c17, v0.w, r1
  25:     mul r2.xy, r1.y, c5
  26:     mad r1.xy, c4, r1.x, r2
  27:     mad r1.xy, c6, r1.z, r1
  28:     mad oT5.xy, c7, r1.w, r1
  29:     mul r1, v0.y, c11
  30:     mad r1, c10, v0.x, r1
  31:     mad r1, c12, v0.z, r1
  32:     add r1, r1, c13
  33:     mad oPos.xy, r1.w, c0, r1
  34:     mov oPos.zw, r1
  35:     mov r0.w, c21.x
  36:     mov oT2, r0.wwwx
  37:     mov oT3, r0.wwwy
  38:     mov oT4.w, r0.z

// approximately 39 instruction slots used
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul o2.xyz, r1.wwww, r1.xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  28: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  29: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  30: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  31: mul r1.xy, r0.yyyy, cb0[12].xyxx
  32: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  33: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  34: mad o6.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11_9x":
// Stats: 21 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "unity_NHxRoughness" to slot 2

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             2         1  ( FLT, FLT, FLT, FLT)
// c1         cb0             4         1  ( FLT, FLT, FLT, FLT)
// c2         cb0             8         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t2               
// s1             s1              t0               
// s2             s2              t1               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c3, -0.220916301, 0.220916301, 0.779083729, 1
          def c4, 16, 0, 0, 0
          dcl t0
          dcl_pp t1.xyz
          dcl_pp t2
          dcl_pp t3
          dcl_pp t4
          dcl t5.xy
          dcl_2d s0
          dcl_2d s1
          dcl_2d s2
   0:     nrm_pp r0.xyz, t4
   3:     dp3_pp r0.w, -t1, r0
   4:     add_pp r0.w, r0.w, r0.w
   5:     mad_pp r1.xyz, r0, -r0.w, -t1
   6:     mov_pp r2.x, t2.w
   7:     mov_pp r2.y, t3.w
   8:     mov_pp r2.z, t4.w
   9:     dp3_pp r0.w, r1, r2
  10:     dp3_sat_pp r0.x, r0, r2
  11:     mul_pp r0.y, r0.w, r0.w
  12:     mul_pp r1.x, r0.y, r0.y
  13:     mov r2, c3
  14:     add_pp r1.y, r2.w, -c2.w
  15:     texld r1, r1, s0
  15:     texld r3, t0, s1
  15:     texld_pp r4, t5, s2
  15:     mul_pp r2.w, r1.x, c4.x
  16:     mad_pp r0.yzw, c1.wzyx, r3.wzyx, r2.x
  17:     mul_pp r1.xyz, r3, c1
  18:     mad_pp r0.yzw, c2.z, r0, r2.y
  19:     mul_pp r0.yzw, r0, r2.w
  20:     mad_pp r1.w, c2.z, -r2.z, r2.z
  21:     mad_pp r0.yzw, r1.wzyx, r1.w, r0
  22:     mul_pp r1.xyz, r4.w, c0
  23:     mul_pp r1.xyz, r0.x, r1
  24:     mul_pp r0.xyz, r0.wzyx, r1
  25:     mov_pp r0.w, c3.w
  26:     mov_pp oC0, r0

// approximately 30 instruction slots used (3 texture, 27 arithmetic)
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: sample r1.xyzw, v6.xyxx, t1.xyzw, s2
  24: mul r1.xyz, r1.wwww, cb0[2].xyzx
  25: mul r1.xyz, r0.xxxx, r1.xyzx
  26: mul o0.xyz, r0.yzwy, r1.xyzx
  27: mov o0.w, l(1.000000)
  28: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH 
-- Vertex shader for "d3d9":
// Stats: 44 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 4
Matrix4x4 unity_ObjectToWorld at 8
Matrix4x4 unity_WorldToLight at 12
Matrix4x3 unity_WorldToObject at 16
Matrix4x4 unity_WorldToShadow at 0
Vector4 _DetailAlbedoMap_ST at 22
Vector4 _MainTex_ST at 21
Float _UVSec at 23
Vector4 _WorldSpaceCameraPos at 19
Vector4 _WorldSpaceLightPos0 at 20

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToShadow  c0       4
//   glstate_matrix_mvp   c4       4
//   unity_ObjectToWorld  c8       4
//   unity_WorldToLight   c12      4
//   unity_WorldToObject  c16      3
//   _WorldSpaceCameraPos c19      1
//   _WorldSpaceLightPos0 c20      1
//   _MainTex_ST          c21      1
//   _DetailAlbedoMap_ST  c22      1
//   _UVSec               c23      1
//

    vs_2_0
    def c24, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c24.xxxy, c24.yyyx
    dp4 r3.x, c4, r0
    dp4 r3.y, c5, r0
    dp4 r3.z, c6, r0
    dp4 r3.w, c7, r0
    mad oT0.xy, v2, c21, c21.zwzw
    mul r0.x, c23.x, c23.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c22.xyxy, c22
    dp4 r0.x, c8, v0
    dp4 r0.y, c9, v0
    dp4 r0.z, c10, v0
    add r1.xyz, r0, -c19
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c17
    mad r1.xyz, v1.x, c16, r1
    mad r1.xyz, v1.z, c18, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT4.xyz, r1.w, r1
    dp4 r0.w, c11, v0
    dp4 oT5.x, c12, r0
    dp4 oT5.y, c13, r0
    dp4 oT5.z, c14, r0
    dp4 oT5.w, c15, r0
    dp4 oT6.x, c0, r0
    dp4 oT6.y, c1, r0
    dp4 oT6.z, c2, r0
    dp4 oT6.w, c3, r0
    mad r0.xyz, r0, -c20.w, c20
    nrm r1.xyz, r0
    mov r1.w, c24.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 43 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 37 math, 5 textures
Vector4 _Color at 2
Float _Glossiness at 4
Vector4 _LightColor0 at 1
Vector4 _LightShadowData at 0
Float _Metallic at 3

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_ShadowMapTexture" to slot 2
Set 2D Texture "_LightTexture0" to slot 3
Set 2D Texture "_LightTextureB0" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   _LightShadowData   c0       1
//   _LightColor0       c1       1
//   _Color             c2       1
//   _Metallic          c3       1
//   _Glossiness        c4       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _ShadowMapTexture  s2       1
//   _LightTexture0     s3       1
//   _LightTextureB0    s4       1
//

    ps_2_0
    def c5, -0.220916301, 0.220916301, 0.779083729, 0.5
    def c6, 0, 1, 16, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5
    dcl t6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r0.y, c6.y
    add_pp r1.y, r0.y, -c4.x
    rcp r0.z, t5.w
    mad r2.xy, t5, r0.z, c5.w
    dp3 r3.w, t5, t5
    mov r3.xy, r3.w
    texld r1, r1, s0
    texld r4, t0, s1
    texld_pp r2, r2, s3
    texld_pp r3, r3, s4
    texldp_pp r5, t6, s2
    mul_pp r4.w, r1.x, c6.z
    mov r1.xyz, c5
    mad_pp r2.xyz, c2, r4, r1.x
    mul_pp r3.yzw, r4.wzyx, c2.wzyx
    mad_pp r2.xyz, c3.x, r2, r1.y
    mul_pp r2.xyz, r2, r4.w
    mad_pp r0.z, c3.x, -r1.z, r1.z
    mad_pp r1.xyz, r3.wzyx, r0.z, r2
    mul r1.w, r2.w, r3.x
    cmp r1.w, -t5.z, c6.x, r1.w
    lrp_pp r2.x, r5.x, r0.y, c0.x
    mul_pp r1.w, r1.w, r2.x
    mul_pp r0.yzw, r1.w, c1.wzyx
    mul_pp r0.xyz, r0.x, r0.wzyx
    mul_pp r0.xyz, r0, r1
    mov_pp r0.w, c6.y
    mov_pp oC0, r0

// approximately 41 instruction slots used (5 texture, 36 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 37 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 4 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[12], immediateIndexed
      dcl_constantbuffer CB4[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb4[1].xyzw
   1: mad r0.xyzw, cb4[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb4[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb4[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb4[13].xyzx
   9: mad r0.xyz, cb4[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb4[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb4[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: mad r0.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul o2.xyz, r0.wwww, r1.xyzx
  17: dp3 r0.w, r0.xyzx, r0.xyzx
  18: rsq r0.w, r0.w
  19: mul r0.xyz, r0.wwww, r0.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r0.x, v1.xyzx, cb4[16].xyzx
  25: dp3 r0.y, v1.xyzx, cb4[17].xyzx
  26: dp3 r0.z, v1.xyzx, cb4[18].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mul r0.xyzw, v0.yyyy, cb4[13].xyzw
  31: mad r0.xyzw, cb4[12].xyzw, v0.xxxx, r0.xyzw
  32: mad r0.xyzw, cb4[14].xyzw, v0.zzzz, r0.xyzw
  33: mad r0.xyzw, cb4[15].xyzw, v0.wwww, r0.xyzw
  34: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  35: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  36: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  37: mad o6.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  38: mul r1.xyzw, r0.yyyy, cb3[9].xyzw
  39: mad r1.xyzw, cb3[8].xyzw, r0.xxxx, r1.xyzw
  40: mad r1.xyzw, cb3[10].xyzw, r0.zzzz, r1.xyzw
  41: mad o7.xyzw, cb3[11].xyzw, r0.wwww, r1.xyzw
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 32 math, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2
Set 2D Texture "unity_NHxRoughness" to slot 3
Set 2D Texture "_ShadowMapTexture" to slot 4

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_comparison
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyzw
      dcl_input_ps linear v7.xyzw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: div r1.xy, v6.xyxx, v6.wwww
  24: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  25: sample r1.xyzw, r1.xyxx, t1.xyzw, s3
  26: lt r1.x, l(0.000000), v6.z
  27: and r1.x, r1.x, l(0x3f800000)
  28: mul r1.x, r1.w, r1.x
  29: dp3 r1.y, v6.xyzx, v6.xyzx
  30: sample r2.xyzw, r1.yyyy, t2.xyzw, s4
  31: mul r1.x, r1.x, r2.x
  32: div r1.yzw, v7.xxyz, v7.wwww
  33: sample_c_lz r1.y, r1.yzyy, t4.xxxx, s2, r1.w
  34: add r1.z, -cb1[24].x, l(1.000000)
  35: mad r1.y, r1.y, r1.z, cb1[24].x
  36: mul r1.x, r1.y, r1.x
  37: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  38: mul r1.xyz, r0.xxxx, r1.xyzx
  39: mul o0.xyz, r0.yzwy, r1.xyzx
  40: mov o0.w, l(1.000000)
  41: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN 
-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 7
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Vector4 _ProjectionParams at 11
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 10
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       3
//   unity_WorldToObject  c7       3
//   _WorldSpaceCameraPos c10      1
//   _ProjectionParams    c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c10
    mad r0.xyz, r0, -c12.w, c12
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c8
    mad r1.xyz, v1.x, c7, r1
    mad r1.xyz, v1.z, c9, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT4.xyz, r1.w, r1
    mad r1, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r2.y, c1, r1
    mul r3.x, r2.y, c11.x
    mul r3.w, r3.x, c16.z
    dp4 r2.x, c0, r1
    dp4 r2.w, c3, r1
    dp4 r2.z, c2, r1
    mul r3.xz, r2.xyww, c16.z
    mov r4, r2
    mov oT5.zw, r2
    add oT5.xy, r3.z, r3.xwzw
    mov r0.w, c16.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mad oPos.xy, r4.w, c255, r4
    mov oPos.zw, r4

// approximately 37 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 27 math, 3 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_ShadowMapTexture" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   _LightColor0       c0       1
//   _Color             c1       1
//   _Metallic          c2       1
//   _Glossiness        c3       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _ShadowMapTexture  s2       1
//

    ps_2_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2, c4
    add_pp r1.y, r2.w, -c3.x
    texld r1, r1, s0
    texld r3, t0, s1
    texldp_pp r4, t5, s2
    mul_pp r2.w, r1.x, c5.x
    mad_pp r0.yzw, c1.wzyx, r3.wzyx, r2.x
    mul_pp r1.xyz, r3, c1
    mad_pp r0.yzw, c2.x, r0, r2.y
    mul_pp r0.yzw, r0, r2.w
    mad_pp r1.w, c2.x, -r2.z, r2.z
    mad_pp r0.yzw, r1.wzyx, r1.w, r0
    mul_pp r1.xyz, r4.x, c0
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c4.w
    mov_pp oC0, r0

// approximately 30 instruction slots used (3 texture, 27 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 25 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[9].w, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
   8: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mad r1.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  15: dp3 r2.w, r2.xyzx, r2.xyzx
  16: rsq r2.w, r2.w
  17: mul o2.xyz, r2.wwww, r2.xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul o5.xyz, r1.wwww, r1.xyzx
  28: mul r0.y, r0.y, cb1[5].x
  29: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  30: mov o6.zw, r0.zzzw
  31: add o6.xy, r1.zzzz, r1.xwxx
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 22 math, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "unity_NHxRoughness" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: div r1.xy, v6.xyxx, v6.wwww
  24: sample r1.xyzw, r1.xyxx, t1.xyzw, s2
  25: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mul o0.xyz, r0.yzwy, r1.xyzx
  28: mov o0.w, l(1.000000)
  29: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
-- Vertex shader for "d3d9":
// Stats: 41 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x2 unity_WorldToLight at 11
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Vector4 _ProjectionParams at 14
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 13
Vector4 _WorldSpaceLightPos0 at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       4
//   unity_WorldToObject  c8       3
//   unity_WorldToLight   c11      2
//   _WorldSpaceCameraPos c13      1
//   _ProjectionParams    c14      1
//   _WorldSpaceLightPos0 c15      1
//   _MainTex_ST          c16      1
//   _DetailAlbedoMap_ST  c17      1
//   _UVSec               c18      1
//

    vs_2_0
    def c19, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad oT0.xy, v2, c16, c16.zwzw
    mul r0.x, c18.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c13
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    mad r0.xyz, r0, -c15.w, c15
    mad r1, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r2.y, c1, r1
    mul r3.x, r2.y, c14.x
    mul r3.w, r3.x, c19.z
    dp4 r2.x, c0, r1
    dp4 r2.w, c3, r1
    dp4 r2.z, c2, r1
    mul r3.xz, r2.xyww, c19.z
    mov r4, r2
    mov oT6.zw, r2
    add oT6.xy, r3.z, r3.xwzw
    mov r0.w, c19.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mad oPos.xy, r4.w, c255, r4
    mov oPos.zw, r4

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 28 math, 4 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_ShadowMapTexture" to slot 2
Set 2D Texture "_LightTexture0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   _LightColor0       c0       1
//   _Color             c1       1
//   _Metallic          c2       1
//   _Glossiness        c3       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _ShadowMapTexture  s2       1
//   _LightTexture0     s3       1
//

    ps_2_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xy
    dcl t6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2, c4
    add_pp r1.y, r2.w, -c3.x
    texld r1, r1, s0
    texld r3, t0, s1
    texld r4, t5, s3
    texldp_pp r5, t6, s2
    mul_pp r2.w, r1.x, c5.x
    mad_pp r0.yzw, c1.wzyx, r3.wzyx, r2.x
    mul_pp r1.xyz, r3, c1
    mad_pp r0.yzw, c2.x, r0, r2.y
    mul_pp r0.yzw, r0, r2.w
    mad_pp r1.w, c2.x, -r2.z, r2.z
    mad_pp r0.yzw, r1.wzyx, r1.w, r0
    mul_pp r1.x, r4.w, r5.x
    mul_pp r1.xyz, r1.x, c0
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c4.w
    mov_pp oC0, r0

// approximately 32 instruction slots used (4 texture, 28 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mov o0.xyzw, r0.xyzw
   5: eq r1.x, cb0[9].w, l(0.000000)
   6: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
   7: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
   8: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   9: mul r1.xyz, v0.yyyy, cb3[13].xyzx
  10: mad r1.xyz, cb3[12].xyzx, v0.xxxx, r1.xyzx
  11: mad r1.xyz, cb3[14].xyzx, v0.zzzz, r1.xyzx
  12: mad r1.xyz, cb3[15].xyzx, v0.wwww, r1.xyzx
  13: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  14: mad r1.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  15: dp3 r2.w, r2.xyzx, r2.xyzx
  16: rsq r2.w, r2.w
  17: mul o2.xyz, r2.wwww, r2.xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb3[16].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[17].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[18].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul o5.xyz, r1.wwww, r1.xyzx
  28: mul r1.xyzw, v0.yyyy, cb3[13].xyzw
  29: mad r1.xyzw, cb3[12].xyzw, v0.xxxx, r1.xyzw
  30: mad r1.xyzw, cb3[14].xyzw, v0.zzzz, r1.xyzw
  31: mad r1.xyzw, cb3[15].xyzw, v0.wwww, r1.xyzw
  32: mul r2.xy, r1.yyyy, cb0[12].xyxx
  33: mad r1.xy, cb0[11].xyxx, r1.xxxx, r2.xyxx
  34: mad r1.xy, cb0[13].xyxx, r1.zzzz, r1.xyxx
  35: mad o6.xy, cb0[14].xyxx, r1.wwww, r1.xyxx
  36: mul r0.y, r0.y, cb1[5].x
  37: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  38: mov o7.zw, r0.zzzw
  39: add o7.xy, r1.zzzz, r1.xwxx
  40: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 23 math, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_ShadowMapTexture" to slot 2
Set 2D Texture "unity_NHxRoughness" to slot 3

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: div r1.xy, v7.xyxx, v7.wwww
  24: sample r1.xyzw, r1.xyxx, t2.xyzw, s2
  25: sample r2.xyzw, v6.xyxx, t1.xyzw, s3
  26: mul r1.x, r1.x, r2.w
  27: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  28: mul r1.xyz, r0.xxxx, r1.xyzx
  29: mul o0.xyz, r0.yzwy, r1.xyzx
  30: mov o0.w, l(1.000000)
  31: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE 
-- Vertex shader for "d3d9":
// Stats: 40 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToLight at 11
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 18
Vector4 _LightPositionRange at 16
Vector4 _MainTex_ST at 17
Float _UVSec at 19
Vector4 _WorldSpaceCameraPos at 14
Vector4 _WorldSpaceLightPos0 at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       4
//   unity_WorldToObject  c8       3
//   unity_WorldToLight   c11      3
//   _WorldSpaceCameraPos c14      1
//   _WorldSpaceLightPos0 c15      1
//   _LightPositionRange  c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_2_0
    def c20, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad oT0.xy, v2, c17, c17.zwzw
    mul r0.x, c19.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c14
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    dp4 oT5.z, c13, r0
    add oT6.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    nrm r1.xyz, r0
    mov r1.w, c20.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 39 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 37 math, 4 textures
Vector4 _Color at 3
Float _Glossiness at 5
Vector4 _LightColor0 at 2
Vector4 _LightPositionRange at 0
Vector4 _LightShadowData at 1
Float _Metallic at 4

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set CUBE Texture "_ShadowMapTexture" to slot 2
Set 2D Texture "_LightTexture0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   _LightPositionRange c0       1
//   _LightShadowData    c1       1
//   _LightColor0        c2       1
//   _Color              c3       1
//   _Metallic           c4       1
//   _Glossiness         c5       1
//   unity_NHxRoughness  s0       1
//   _MainTex            s1       1
//   _ShadowMapTexture   s2       1
//   _LightTexture0      s3       1
//

    ps_2_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 0.970000029
    def c7, 1, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t6.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2.x, c7.x
    add_pp r1.y, r2.x, -c5.x
    dp3 r3.w, t5, t5
    mov r3.xy, r3.w
    texld r1, r1, s0
    texld r4, t0, s1
    texld r5, t6, s2
    texld r3, r3, s3
    mul_pp r4.w, r1.x, c7.y
    mov r1.xyz, c6
    mad_pp r0.yzw, c3.wzyx, r4.wzyx, r1.x
    mul_pp r2.yzw, r4.wzyx, c3.wzyx
    mad_pp r0.yzw, c4.x, r0, r1.y
    mul_pp r0.yzw, r0, r4.w
    mad_pp r1.x, c4.x, -r1.z, r1.z
    mad_pp r0.yzw, r2, r1.x, r0
    dp3 r1.x, t6, t6
    rsq r1.x, r1.x
    rcp r1.x, r1.x
    mul r1.x, r1.x, c0.w
    mad r1.x, r1.x, -c6.w, r5.x
    cmp_pp r1.x, r1.x, r2.x, c1.x
    mul_pp r1.x, r1.x, r3.x
    mul_pp r1.xyz, r1.x, c2
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c7.x
    mov_pp oC0, r0

// approximately 41 instruction slots used (4 texture, 37 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 34 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  17: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r0.xyz, r0.xxxx, r1.xyzx
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  32: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  33: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  34: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  35: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  36: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  37: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  38: mad o6.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  39: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 28 math, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set CUBE Texture "_ShadowMapTexture" to slot 2
Set 2D Texture "unity_NHxRoughness" to slot 3

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: dp3 r1.x, v7.xyzx, v7.xyzx
  24: sqrt r1.x, r1.x
  25: mul r1.x, r1.x, cb1[1].w
  26: mul r1.x, r1.x, l(0.970000)
  27: sample r2.xyzw, v7.xyzx, t2.xyzw, s2
  28: lt r1.x, r2.x, r1.x
  29: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  30: dp3 r1.y, v6.xyzx, v6.xyzx
  31: sample r2.xyzw, r1.yyyy, t1.xyzw, s3
  32: mul r1.x, r1.x, r2.x
  33: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  34: mul r1.xyz, r0.xxxx, r1.xyzx
  35: mul o0.xyz, r0.yzwy, r1.xyzx
  36: mov o0.w, l(1.000000)
  37: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE 
-- Vertex shader for "d3d9":
// Stats: 40 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToLight at 11
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 18
Vector4 _LightPositionRange at 16
Vector4 _MainTex_ST at 17
Float _UVSec at 19
Vector4 _WorldSpaceCameraPos at 14
Vector4 _WorldSpaceLightPos0 at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _LightPositionRange;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   glstate_matrix_mvp   c0       4
//   unity_ObjectToWorld  c4       4
//   unity_WorldToObject  c8       3
//   unity_WorldToLight   c11      3
//   _WorldSpaceCameraPos c14      1
//   _WorldSpaceLightPos0 c15      1
//   _LightPositionRange  c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_2_0
    def c20, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mad oT0.xy, v2, c17, c17.zwzw
    mul r0.x, c19.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c14
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT4.xyz, r1.w, r1
    dp4 r0.w, c7, v0
    dp4 oT5.x, c11, r0
    dp4 oT5.y, c12, r0
    dp4 oT5.z, c13, r0
    add oT6.xyz, r0, -c16
    mad r0.xyz, r0, -c15.w, c15
    nrm r1.xyz, r0
    mov r1.w, c20.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 39 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 38 math, 5 textures
Vector4 _Color at 3
Float _Glossiness at 5
Vector4 _LightColor0 at 2
Vector4 _LightPositionRange at 0
Vector4 _LightShadowData at 1
Float _Metallic at 4

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set CUBE Texture "_ShadowMapTexture" to slot 2
Set CUBE Texture "_LightTexture0" to slot 3
Set 2D Texture "_LightTextureB0" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   _LightPositionRange c0       1
//   _LightShadowData    c1       1
//   _LightColor0        c2       1
//   _Color              c3       1
//   _Metallic           c4       1
//   _Glossiness         c5       1
//   unity_NHxRoughness  s0       1
//   _MainTex            s1       1
//   _ShadowMapTexture   s2       1
//   _LightTexture0      s3       1
//   _LightTextureB0     s4       1
//

    ps_2_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 0.970000029
    def c7, 1, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t6.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_cube s3
    dcl_2d s4
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2.x, c7.x
    add_pp r1.y, r2.x, -c5.x
    dp3 r3.w, t5, t5
    mov r3.xy, r3.w
    texld r1, r1, s0
    texld r4, t0, s1
    texld r5, t6, s2
    texld r3, r3, s4
    texld r6, t5, s3
    mul_pp r4.w, r1.x, c7.y
    mov r1.xyz, c6
    mad_pp r0.yzw, c3.wzyx, r4.wzyx, r1.x
    mul_pp r2.yzw, r4.wzyx, c3.wzyx
    mad_pp r0.yzw, c4.x, r0, r1.y
    mul_pp r0.yzw, r0, r4.w
    mad_pp r1.x, c4.x, -r1.z, r1.z
    mad_pp r0.yzw, r2, r1.x, r0
    dp3 r1.x, t6, t6
    rsq r1.x, r1.x
    rcp r1.x, r1.x
    mul r1.x, r1.x, c0.w
    mad r1.x, r1.x, -c6.w, r5.x
    cmp_pp r1.x, r1.x, r2.x, c1.x
    mul r1.y, r3.x, r6.w
    mul_pp r1.x, r1.x, r1.y
    mul_pp r1.xyz, r1.x, c2
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c7.x
    mov_pp oC0, r0

// approximately 43 instruction slots used (5 texture, 38 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 34 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (720 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 3 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[2], immediateIndexed
      dcl_constantbuffer CB3[19], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb3[3].xyzw
   4: eq r0.x, cb0[9].w, l(0.000000)
   5: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
   6: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
   7: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
   8: mul r0.xyz, v0.yyyy, cb3[13].xyzx
   9: mad r0.xyz, cb3[12].xyzx, v0.xxxx, r0.xyzx
  10: mad r0.xyz, cb3[14].xyzx, v0.zzzz, r0.xyzx
  11: mad r0.xyz, cb3[15].xyzx, v0.wwww, r0.xyzx
  12: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul o2.xyz, r0.wwww, r1.xyzx
  16: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  17: add o7.xyz, r0.xyzx, -cb2[1].xyzx
  18: dp3 r0.x, r1.xyzx, r1.xyzx
  19: rsq r0.x, r0.x
  20: mul r0.xyz, r0.xxxx, r1.xyzx
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb3[16].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[17].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[18].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mul r0.xyzw, v0.yyyy, cb3[13].xyzw
  32: mad r0.xyzw, cb3[12].xyzw, v0.xxxx, r0.xyzw
  33: mad r0.xyzw, cb3[14].xyzw, v0.zzzz, r0.xyzw
  34: mad r0.xyzw, cb3[15].xyzw, v0.wwww, r0.xyzw
  35: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  36: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  37: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  38: mad o6.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  39: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 29 math, 5 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTextureB0" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 3
Set 2D Texture "unity_NHxRoughness" to slot 4

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (720 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t4.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: dp3 r1.x, v7.xyzx, v7.xyzx
  24: sqrt r1.x, r1.x
  25: mul r1.x, r1.x, cb1[1].w
  26: mul r1.x, r1.x, l(0.970000)
  27: sample r2.xyzw, v7.xyzx, t3.xyzw, s2
  28: lt r1.x, r2.x, r1.x
  29: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  30: dp3 r1.y, v6.xyzx, v6.xyzx
  31: sample r2.xyzw, r1.yyyy, t1.xyzw, s4
  32: sample r3.xyzw, v6.xyzx, t2.xyzw, s3
  33: mul r1.y, r2.x, r3.w
  34: mul r1.x, r1.x, r1.y
  35: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  36: mul r1.xyz, r0.xxxx, r1.xyzx
  37: mul o0.xyz, r0.yzwy, r1.xyzx
  38: mov o0.w, l(1.000000)
  39: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //         d3d9: 27 avg math (11..44)
 //        d3d11: 22 avg math (9..35)
 // Stats for Fragment shader:
 //         d3d9: 4 avg math (2..6)
 //        d3d11: 4 math
 Pass {
  Name "SHADOWCASTER"
  Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: SHADOWS_DEPTH 
-- Vertex shader for "d3d9":
// Stats: 44 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x4 unity_MatrixVP at 4
Matrix4x3 unity_ObjectToWorld at 8
Matrix4x3 unity_WorldToObject at 11
Vector4 _WorldSpaceLightPos0 at 14
Vector4 unity_LightShadowBias at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 glstate_matrix_mvp;
//   float4 unity_LightShadowBias;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   glstate_matrix_mvp    c0       4
//   unity_MatrixVP        c4       4
//   unity_ObjectToWorld   c8       3
//   unity_WorldToObject   c11      3
//   _WorldSpaceLightPos0  c14      1
//   unity_LightShadowBias c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    mul r0.x, c15.z, c15.z
    slt r0.x, -r0.x, r0.x
    mul r0.yzw, v1.y, c12.xxyz
    mad r0.yzw, v1.x, c11.xxyz, r0
    mad r0.yzw, v1.z, c13.xxyz, r0
    nrm r1.xyz, r0.yzww
    mad r2, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r3.x, c8, r2
    dp4 r3.y, c9, r2
    dp4 r3.z, c10, r2
    mad r0.yzw, r3.xxyz, -c14.w, c14.xxyz
    nrm r4.xyz, r0.yzww
    dp3 r0.y, r1, r4
    mad r0.y, r0.y, -r0.y, c16.x
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    mul r0.y, r0.y, c15.z
    mad r1.xyz, r1, -r0.y, r3
    mov r1.w, c16.x
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    dp4 r1.x, c0, r2
    dp4 r1.y, c1, r2
    dp4 r1.z, c2, r2
    dp4 r1.w, c3, r2
    lrp r2, r0.x, r3, r1
    rcp r0.x, r2.w
    mul r0.x, r0.x, c15.x
    max r0.x, r0.x, c16.y
    min r0.x, r0.x, c16.x
    add r0.x, r0.x, r2.z
    mov r5.xyw, r2
    max r0.y, r0.x, c16.y
    add r0.y, -r0.x, r0.y
    mad r5.z, c15.y, r0.y, r0.x
    mad oPos.xy, r5.w, c255, r5
    mov oPos.zw, r5

// approximately 43 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 2 math
Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
    ps_2_0
    def c0, 0, 0, 0, 0
    mov_pp r0, c0.x
    mov_pp oC0, r0

// approximately 2 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityLighting" (720 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 2 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
  Matrix4x4 unity_WorldToObject at 256
}
Constant Buffer "UnityPerFrame" (352 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[19], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: mul r0.xyz, v0.yyyy, cb2[13].xyzx
   1: mad r0.xyz, cb2[12].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[14].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb2[15].xyzx
   4: mad r1.xyz, -r0.xyzx, cb0[0].wwww, cb0[0].xyzx
   5: dp3 r0.w, r1.xyzx, r1.xyzx
   6: rsq r0.w, r0.w
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: dp3 r2.x, v1.xyzx, cb2[16].xyzx
   9: dp3 r2.y, v1.xyzx, cb2[17].xyzx
  10: dp3 r2.z, v1.xyzx, cb2[18].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r2.xyzx, r1.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r2.xyzx, r0.wwww, r0.xyzx
  19: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  20: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  21: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  22: add r0.xyzw, r0.xyzw, cb3[20].xyzw
  23: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
  24: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
  25: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
  26: add r1.xyzw, r1.xyzw, cb2[3].xyzw
  27: ne r2.x, cb1[5].z, l(0.000000)
  28: movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw
  29: div r1.x, cb1[5].x, r0.w
  30: min r1.x, r1.x, l(0.000000)
  31: max r1.x, r1.x, l(-1.000000)
  32: add r0.z, r0.z, r1.x
  33: min r1.x, r0.w, r0.z
  34: mov o0.xyw, r0.xyxw
  35: add r0.x, -r0.z, r1.x
  36: mad o0.z, cb1[5].y, r0.x, r0.z
  37: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SHADOWS_CUBE 
-- Vertex shader for "d3d9":
// Stats: 11 math
Uses vertex data channel "Vertex"

Matrix4x4 glstate_matrix_mvp at 0
Matrix4x3 unity_ObjectToWorld at 4
Vector4 _LightPositionRange at 7

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _LightPositionRange;
//   row_major float4x4 glstate_matrix_mvp;
//   row_major float4x4 unity_ObjectToWorld;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   glstate_matrix_mvp  c0       4
//   unity_ObjectToWorld c4       3
//   _LightPositionRange c7       1
//

    vs_2_0
    def c8, 1, 0, 0, 0
    dcl_position v0
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add oT0.xyz, r0, -c7
    mad r0, v0.xyzx, c8.xxxy, c8.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    mad oPos.xy, r1.w, c255, r1
    mov oPos.zw, r1

// approximately 11 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 6 math
Vector4 _LightPositionRange at 0
Vector4 unity_LightShadowBias at 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _LightPositionRange;
//   float4 unity_LightShadowBias;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   _LightPositionRange   c0       1
//   unity_LightShadowBias c1       1
//

    ps_2_0
    dcl t0.xyz
    dp3 r0.w, t0, t0
    rsq r0.x, r0.w
    rcp r0.x, r0.x
    add r0.x, r0.x, c1.x
    mul_pp r0, r0.x, c0.w
    mov_pp oC0, r0

// approximately 6 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 9 math
Uses vertex data channel "Vertex"

Constant Buffer "UnityLighting" (720 bytes) on slot 0 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityPerDraw" (352 bytes) on slot 1 {
  Matrix4x4 glstate_matrix_mvp at 0
  Matrix4x4 unity_ObjectToWorld at 192
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// SV_POSITION              0   xyzw        1      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[2], immediateIndexed
      dcl_constantbuffer CB1[16], immediateIndexed
      dcl_input v0.xyzw
      dcl_output o0.xyz
      dcl_output_siv o1.xyzw, position
      dcl_temps 1
   0: mul r0.xyz, v0.yyyy, cb1[13].xyzx
   1: mad r0.xyz, cb1[12].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[14].xyzx, v0.zzzz, r0.xyzx
   3: mad r0.xyz, cb1[15].xyzx, v0.wwww, r0.xyzx
   4: add o0.xyz, r0.xyzx, -cb0[1].xyzx
   5: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   6: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   8: add o1.xyzw, r0.xyzw, cb1[3].xyzw
   9: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 4 math
Constant Buffer "UnityLighting" (720 bytes) on slot 0 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[2], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_input_ps linear v0.xyz
      dcl_output o0.xyzw
      dcl_temps 1
   0: dp3 r0.x, v0.xyzx, v0.xyzx
   1: sqrt r0.x, r0.x
   2: add r0.x, r0.x, cb1[5].x
   3: mul o0.xyzw, r0.xxxx, cb0[1].wwww
   4: ret 
// Approximately 0 instruction slots used


 }
}
CustomEditor "StandardShaderGUI"
Fallback "VertexLit"
}